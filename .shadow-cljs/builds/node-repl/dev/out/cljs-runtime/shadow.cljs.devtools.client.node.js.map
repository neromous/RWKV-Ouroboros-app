{"version":3,"sources":["shadow/cljs/devtools/client/node.cljs"],"mappings":"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","names":["p__15879","map__15880","cljs.core/--destructure-map","cljs.core.get","shadow.cljs.devtools.client.node/node-eval","js","source-map-json","msg","result","js/SHADOW_NODE_EVAL","shadow.cljs.devtools.client.node/is-loaded?","src","shadow.cljs.devtools.client.node.goog$module$goog$object.get","js/SHADOW_IMPORTED","js/Error","shadow.cljs.devtools.client.node/closure-import","js/SHADOW_IMPORT","p__15903","map__15904","shadow.cljs.devtools.client.node/handle-build-complete","runtime","info","reload-info","map__15905","sources","compiled","warnings","shadow.cljs.devtools.client.env/autoload","cljs.core/empty?","shadow.cljs.devtools.client.env/ignore-warnings","files-to-require","cljs.core.remove","p__15909","map__15910","ns","cljs.core/contains?","cljs.core.filter","p__15907","map__15908","resource-id","cljs.core.map","cljs.core.into","cljs.core/seq","shadow.cljs.devtools.client.env.do_js_reload","seq__15911","chunk__15912","count__15913","i__15914","temp__5804__auto__","cljs.core/chunked-seq?","c__5568__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","shadow.cljs.devtools.client.env/before-load-src","shadow.cljs.devtools.client.node/client-info","js/process.version","shadow.cljs.devtools.client.node/start","ws-url","shadow.cljs.devtools.client.env/get-ws-relay-url","socket","js/shadow.js.shim.module$ws","ws-active-ref","cljs.core.atom","data","cljs.core/deref","shadow.cljs.devtools.client.shared/remote-msg","e","shadow.cljs.devtools.client.shared/remote-open","shadow.cljs.devtools.client.shared/remote-close","shadow.cljs.devtools.client.shared/remote-error","p__15917","map__15918","shadow.cljs.devtools.client.node/send","p__15921","map__15922","shadow.cljs.devtools.client.node/stop","cljs.core/reset!","shadow.cljs.devtools.client.env/worker-client-id","cljs.core/PROTOCOL_SENTINEL","shadow.cljs.devtools.client.shared/Runtime","this","code","p__15923","map__15924","repl-sources","done","error","e15925","seq__15926","chunk__15928","count__15929","i__15930","map__15934","map__15935","output-name","p__15936","map__15937","reload-namespaces","e15938","seq__15939","chunk__15940","count__15941","i__15942","map__15945","map__15946","provides","or__5045__auto__","cljs.core/some","shadow.cljs.devtools.client.shared/add-plugin!","p__15947","map__15948","env","svc","shadow.remote.runtime.api/add-extension","shadow.cljs.devtools.client.env/patch-goog!","shadow.cljs.devtools.client.env/log","js/console.log","js/console.warn","js/console.error","shadow.cljs.devtools.client.env/run-custom-notify!","cljs.core.assoc","shadow.cljs.devtools.client.env/add-warnings-to-info","p__15949","map__15950","event-op","client-id","cljs.core._EQ_","p__15951","map__15952","shadow.remote.runtime.api/del-extension","shadow.cljs.devtools.client.shared/init-runtime!"],"sourcesContent":["(ns shadow.cljs.devtools.client.node\n  (:require\n    [\"ws\" :as ws]\n    [cljs.reader :as reader]\n    [goog.object :as gobj]\n    [shadow.remote.runtime.shared :as shared]\n    [shadow.cljs.devtools.client.shared :as cljs-shared]\n    [shadow.cljs.devtools.client.env :as env]\n    [shadow.remote.runtime.api :as api]))\n\n(defn node-eval [{:keys [js source-map-json] :as msg}]\n  (let [result (js/SHADOW_NODE_EVAL js source-map-json)]\n    result))\n\n(defn is-loaded? [src]\n  (true? (gobj/get js/SHADOW_IMPORTED src)))\n\n(defn closure-import [src]\n  {:pre [(string? src)]}\n  (js/SHADOW_IMPORT src))\n\n(defn handle-build-complete\n  [runtime {:keys [info reload-info] :as msg}]\n  (let [{:keys [sources compiled warnings]} info]\n\n    (when (and env/autoload\n               (or (empty? warnings) env/ignore-warnings))\n\n      (let [files-to-require\n            (->> sources\n                 (remove (fn [{:keys [ns]}]\n                           (contains? (:never-load reload-info) ns)))\n                 (filter (fn [{:keys [ns resource-id]}]\n                           (or (contains? compiled resource-id)\n                               (contains? (:always-load reload-info) ns))))\n                 (map :output-name)\n                 (into []))]\n\n        (when (seq files-to-require)\n          (env/do-js-reload\n            msg\n            #(doseq [src files-to-require]\n               (env/before-load-src src)\n               (closure-import src))\n            ))))))\n\n(def client-info\n  {:host :node\n   :desc (str \"Node \" js/process.version)})\n\n(defn start [runtime]\n  (let [ws-url\n        (env/get-ws-relay-url)\n\n        socket\n        (ws. ws-url #js {:rejectUnauthorized false})\n\n        ws-active-ref\n        (atom true)]\n\n    (.on socket \"message\"\n      (fn [data]\n        (when @ws-active-ref\n          (cljs-shared/remote-msg runtime data))))\n\n    (.on socket \"open\"\n      (fn [e]\n        (when @ws-active-ref\n          (cljs-shared/remote-open runtime e))))\n\n    (.on socket \"close\"\n      (fn [e]\n        (when @ws-active-ref\n          (cljs-shared/remote-close runtime e ws-url))))\n\n    (.on socket \"error\"\n      (fn [e]\n        (when @ws-active-ref\n          (cljs-shared/remote-error runtime e))))\n\n    {:socket socket\n     :ws-active-ref ws-active-ref}))\n\n(defn send [{:keys [socket]} msg]\n  (.send socket msg))\n\n(defn stop [{:keys [socket ws-active-ref]}]\n  (reset! ws-active-ref false)\n  (.close socket))\n\n;; want things to start when this ns is in :preloads\n(when (pos? env/worker-client-id)\n\n  (extend-type cljs-shared/Runtime\n    api/IEvalJS\n    (-js-eval [this code]\n      (js/SHADOW_NODE_EVAL code))\n\n    cljs-shared/IHostSpecific\n    (do-invoke [this ns msg]\n      (node-eval msg))\n\n    (do-repl-init [runtime {:keys [repl-sources]} done error]\n      (try\n        (doseq [{:keys [output-name] :as src} repl-sources\n                :when (not (is-loaded? output-name))]\n          (closure-import output-name))\n\n        (done)\n        (catch :default e\n          (error e))))\n\n    (do-repl-require [this {:keys [sources reload-namespaces] :as msg} done error]\n      (try\n        (doseq [{:keys [provides output-name] :as src} sources]\n          (when (or (not (is-loaded? output-name))\n                    (some reload-namespaces provides))\n            (closure-import output-name)))\n\n        (done)\n        (catch :default e\n          (error e)))))\n\n  (cljs-shared/add-plugin! ::client #{}\n    (fn [{:keys [runtime] :as env}]\n      (let [svc {:runtime runtime}]\n        (api/add-extension runtime ::client\n          {:on-welcome\n           (fn []\n             ;; FIXME: why does this break stuff when done when the namespace is loaded?\n             ;; why does it have to wait until the websocket is connected?\n             (env/patch-goog!)\n             (when env/log\n               (js/console.log (str \"shadow-cljs - #\" (-> runtime :state-ref deref :client-id) \" ready!\"))))\n\n           :on-disconnect\n           (fn []\n             (js/console.warn \"The shadow-cljs Websocket was disconnected.\"))\n\n           :ops\n           {:access-denied\n            (fn [msg]\n              (js/console.error\n                (str \"Stale Output! Your loaded JS was not produced by the running shadow-cljs instance.\"\n                     \" Is the watch for this build running?\")))\n\n            :cljs-build-configure\n            (fn [msg])\n\n            :cljs-build-start\n            (fn [msg]\n              ;; (js/console.log \"cljs-build-start\" msg)\n              (env/run-custom-notify! (assoc msg :type :build-start)))\n\n            :cljs-build-complete\n            (fn [msg]\n              ;; (js/console.log \"cljs-build-complete\" msg)\n              (let [msg (env/add-warnings-to-info msg)]\n                (handle-build-complete runtime msg)\n                (env/run-custom-notify! (assoc msg :type :build-complete))))\n\n            :cljs-build-failure\n            (fn [msg]\n              ;; (js/console.log \"cljs-build-failure\" msg)\n              (env/run-custom-notify! (assoc msg :type :build-failure)))\n\n            ::env/worker-notify\n            (fn [{:keys [event-op client-id]}]\n              (cond\n                (and (= :client-disconnect event-op)\n                     (= client-id env/worker-client-id))\n                (js/console.warn \"shadow-cljs - The watch for this build was stopped!\")\n\n                (= :client-connect event-op)\n                (js/console.warn \"shadow-cljs - A new watch for this build was started, restart of this process required!\")\n\n                :else\n                nil))\n            }})\n        svc))\n\n    (fn [{:keys [runtime] :as svc}]\n      (api/del-extension runtime ::client)))\n\n  (cljs-shared/init-runtime! client-info start send stop))\n"],"x_google_ignoreList":[0]}