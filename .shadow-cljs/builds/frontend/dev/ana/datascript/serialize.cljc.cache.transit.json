["^ ","~:output",["^ ","~:js","goog.provide('datascript.serialize');\ndatascript.serialize.marker_kw = (0);\ndatascript.serialize.marker_other = (1);\ndatascript.serialize.marker_inf = (2);\ndatascript.serialize.marker_minus_inf = (3);\ndatascript.serialize.marker_nan = (4);\ndatascript.serialize.if_cljs = (function datascript$serialize$if_cljs(env,then,else$){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env))){\nreturn then;\n} else {\nreturn else$;\n}\n});\ndatascript.serialize.array_get = (function datascript$serialize$array_get(d,i){\nif(cljs.core.array_QMARK_(d)){\nreturn (d[i]);\n} else {\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(d,i);\n}\n});\ndatascript.serialize.dict_get = (function datascript$serialize$dict_get(d,k){\nif(cljs.core.map_QMARK_(d)){\nreturn (d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(k) : d.call(null,k));\n} else {\nreturn (d[k]);\n}\n});\ndatascript.serialize.array_QMARK_ = (function datascript$serialize$array_QMARK_(a){\nreturn ((cljs.core.array_QMARK_(a)) || (cljs.core.vector_QMARK_(a)));\n});\ndatascript.serialize.amap = (function datascript$serialize$amap(f,xs){\nvar arr = (new Array(cljs.core.count(xs)));\ncljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (idx,x){\n(arr[idx] = (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null,x)));\n\nreturn (idx + (1));\n}),(0),xs);\n\nreturn arr;\n});\ndatascript.serialize.amap_indexed = (function datascript$serialize$amap_indexed(f,xs){\nvar arr = (new Array(cljs.core.count(xs)));\ncljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (idx,x){\n(arr[idx] = (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(idx,x) : f.call(null,idx,x)));\n\nreturn (idx + (1));\n}),(0),xs);\n\nreturn arr;\n});\n/**\n * Looks for a datom with attribute exactly bigger than the given one\n */\ndatascript.serialize.attr_comparator = (function datascript$serialize$attr_comparator(d1,d2){\nif((d2.a == null)){\nreturn (-1);\n} else {\nif((cljs.core.compare(d1.a,d2.a) <= (0))){\nreturn (-1);\n} else {\nreturn (1);\n\n}\n}\n});\n/**\n * All attrs in a DB, distinct, sorted\n */\ndatascript.serialize.all_attrs = (function datascript$serialize$all_attrs(db){\nif(cljs.core.empty_QMARK_(new cljs.core.Keyword(null,\"aevt\",\"aevt\",-585148059).cljs$core$IFn$_invoke$arity$1(db))){\nreturn cljs.core.PersistentVector.EMPTY;\n} else {\nvar attrs = cljs.core.transient$(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"a\",\"a\",-2123407586).cljs$core$IFn$_invoke$arity$1(cljs.core.first(new cljs.core.Keyword(null,\"aevt\",\"aevt\",-585148059).cljs$core$IFn$_invoke$arity$1(db)))], null));\nwhile(true){\nvar attr = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(attrs,(cljs.core.count(attrs) - (1)));\nvar left = datascript.db.datom.cljs$core$IFn$_invoke$arity$3((0),attr,null);\nvar right = datascript.db.datom.cljs$core$IFn$_invoke$arity$3((2147483647),null,null);\nvar next_attr = new cljs.core.Keyword(null,\"a\",\"a\",-2123407586).cljs$core$IFn$_invoke$arity$1(cljs.core.first(me.tonsky.persistent_sorted_set.slice.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(null,\"aevt\",\"aevt\",-585148059).cljs$core$IFn$_invoke$arity$1(db),left,right,datascript.serialize.attr_comparator)));\nif((!((next_attr == null)))){\nvar G__22386 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(attrs,next_attr);\nattrs = G__22386;\ncontinue;\n} else {\nreturn cljs.core.persistent_BANG_(attrs);\n}\nbreak;\n}\n}\n});\ndatascript.serialize.freeze_kw = cljs.core.str;\ndatascript.serialize.thaw_kw = (function datascript$serialize$thaw_kw(s){\nif(clojure.string.starts_with_QMARK_(s,\":\")){\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(1)));\n} else {\nreturn s;\n}\n});\n/**\n * Serialized structure breakdown:\n * \n * count    :: number    \n * tx0      :: number\n * max-eid  :: number\n * max-tx   :: number\n * schema   :: freezed :schema\n * attrs    :: [keywords ...]\n * keywords :: [keywords ...]\n * eavt     :: [[e a-idx v dtx] ...]\n * a-idx    :: index in attrs\n * v        :: (string | number | boolean | [0 <index in keywords>] | [1 <freezed v>])\n * dtx      :: tx - tx0\n * aevt     :: [<index in eavt> ...]\n * avet     :: [<index in eavt> ...]\n */\ndatascript.serialize.serializable_impl = (function datascript$serialize$serializable_impl(db,p__22335){\nvar map__22336 = p__22335;\nvar map__22336__$1 = cljs.core.__destructure_map(map__22336);\nvar freeze_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22336__$1,new cljs.core.Keyword(null,\"freeze-fn\",\"freeze-fn\",-575885995),cljs.core.pr_str);\nvar freeze_kw = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22336__$1,new cljs.core.Keyword(null,\"freeze-kw\",\"freeze-kw\",391758233),datascript.serialize.freeze_kw);\nif(cljs.core.truth_(datascript.storage.storage(db))){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"serializable doesn't work with databases that have :storage\",cljs.core.PersistentArrayMap.EMPTY);\n} else {\n}\n\nvar attrs = datascript.serialize.all_attrs(db);\nvar attrs_map = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,attrs,cljs.core.range.cljs$core$IFn$_invoke$arity$0()));\nvar _STAR_kws = cljs.core.volatile_BANG_(cljs.core.transient$(cljs.core.PersistentVector.EMPTY));\nvar _STAR_kw_map = cljs.core.volatile_BANG_(cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY));\nvar write_kw = (function (kw){\nvar idx = (function (){var or__5045__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(_STAR_kw_map),kw);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar keywords = _STAR_kws.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(_STAR_kws.cljs$core$IDeref$_deref$arity$1(null),kw));\nvar idx = (cljs.core.count(keywords) - (1));\n_STAR_kw_map.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(_STAR_kw_map.cljs$core$IDeref$_deref$arity$1(null),kw,idx));\n\nreturn idx;\n}\n})();\nreturn [(0),idx];\n});\nvar write_other = (function (v){\nreturn [(1),(freeze_fn.cljs$core$IFn$_invoke$arity$1 ? freeze_fn.cljs$core$IFn$_invoke$arity$1(v) : freeze_fn.call(null,v))];\n});\nvar write_v = (function (v){\nif(typeof v === 'string'){\nreturn v;\n} else {\nif(typeof v === 'number'){\nif((Infinity === v)){\nreturn [(2)];\n} else {\nif((-Infinity === v)){\nreturn [(3)];\n} else {\nif(cljs.core.truth_(isNaN(v))){\nreturn [(4)];\n} else {\nreturn v;\n\n}\n}\n}\n} else {\nif(cljs.core.boolean_QMARK_(v)){\nreturn v;\n} else {\nif((v instanceof cljs.core.Keyword)){\nreturn write_kw(v);\n} else {\nreturn write_other(v);\n\n}\n}\n}\n}\n});\nvar eavt = datascript.serialize.amap_indexed((function (idx,d){\nd.datascript$db$IDatom$datom_set_idx$arity$2(null,idx);\n\nvar e = d.e;\nvar a = (function (){var G__22339 = d.a;\nreturn (attrs_map.cljs$core$IFn$_invoke$arity$1 ? attrs_map.cljs$core$IFn$_invoke$arity$1(G__22339) : attrs_map.call(null,G__22339));\n})();\nvar v = write_v(d.v);\nvar tx = (d.tx - (536870912));\nreturn [e,a,v,tx];\n}),new cljs.core.Keyword(null,\"eavt\",\"eavt\",-666437073).cljs$core$IFn$_invoke$arity$1(db));\nvar aevt = datascript.serialize.amap_indexed((function (_,d){\nreturn d.datascript$db$IDatom$datom_get_idx$arity$1(null);\n}),new cljs.core.Keyword(null,\"aevt\",\"aevt\",-585148059).cljs$core$IFn$_invoke$arity$1(db));\nvar avet = datascript.serialize.amap_indexed((function (_,d){\nreturn d.datascript$db$IDatom$datom_get_idx$arity$1(null);\n}),new cljs.core.Keyword(null,\"avet\",\"avet\",1383857032).cljs$core$IFn$_invoke$arity$1(db));\nvar schema = (function (){var G__22340 = new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791).cljs$core$IFn$_invoke$arity$1(db);\nreturn (freeze_fn.cljs$core$IFn$_invoke$arity$1 ? freeze_fn.cljs$core$IFn$_invoke$arity$1(G__22340) : freeze_fn.call(null,G__22340));\n})();\nvar attrs__$1 = datascript.serialize.amap(freeze_kw,attrs);\nvar kws = datascript.serialize.amap(freeze_kw,cljs.core.persistent_BANG_(cljs.core.deref(_STAR_kws)));\nreturn {\"count\":cljs.core.count(new cljs.core.Keyword(null,\"eavt\",\"eavt\",-666437073).cljs$core$IFn$_invoke$arity$1(db)),\"tx0\":(536870912),\"max-eid\":new cljs.core.Keyword(null,\"max-eid\",\"max-eid\",2134868075).cljs$core$IFn$_invoke$arity$1(db),\"max-tx\":new cljs.core.Keyword(null,\"max-tx\",\"max-tx\",1119558339).cljs$core$IFn$_invoke$arity$1(db),\"schema\":schema,\"attrs\":attrs__$1,\"keywords\":kws,\"eavt\":eavt,\"aevt\":aevt,\"avet\":avet};\n});\ndatascript.serialize.serializable = (function datascript$serialize$serializable(var_args){\nvar G__22343 = arguments.length;\nswitch (G__22343) {\ncase 1:\nreturn datascript.serialize.serializable.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn datascript.serialize.serializable.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(datascript.serialize.serializable.cljs$core$IFn$_invoke$arity$1 = (function (db){\nreturn datascript.serialize.serializable_impl(db,cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(datascript.serialize.serializable.cljs$core$IFn$_invoke$arity$2 = (function (db,opts){\nreturn datascript.serialize.serializable_impl(db,opts);\n}));\n\n(datascript.serialize.serializable.cljs$lang$maxFixedArity = 2);\n\ndatascript.serialize.from_serializable = (function datascript$serialize$from_serializable(var_args){\nvar G__22347 = arguments.length;\nswitch (G__22347) {\ncase 1:\nreturn datascript.serialize.from_serializable.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn datascript.serialize.from_serializable.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(datascript.serialize.from_serializable.cljs$core$IFn$_invoke$arity$1 = (function (from){\nreturn datascript.serialize.from_serializable.cljs$core$IFn$_invoke$arity$2(from,cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(datascript.serialize.from_serializable.cljs$core$IFn$_invoke$arity$2 = (function (from,p__22356){\nvar map__22357 = p__22356;\nvar map__22357__$1 = cljs.core.__destructure_map(map__22357);\nvar opts = map__22357__$1;\nvar thaw_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22357__$1,new cljs.core.Keyword(null,\"thaw-fn\",\"thaw-fn\",-240544261),clojure.edn.read_string);\nvar thaw_kw = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22357__$1,new cljs.core.Keyword(null,\"thaw-kw\",\"thaw-kw\",1076733097),datascript.serialize.thaw_kw);\nvar tx0 = datascript.serialize.dict_get(from,\"tx0\");\nvar schema = (function (){var G__22359 = datascript.serialize.dict_get(from,\"schema\");\nreturn (thaw_fn.cljs$core$IFn$_invoke$arity$1 ? thaw_fn.cljs$core$IFn$_invoke$arity$1(G__22359) : thaw_fn.call(null,G__22359));\n})();\nvar _ = (function (){var fexpr__22365 = new cljs.core.Var(function(){return datascript.db.validate_schema;},new cljs.core.Symbol(\"datascript.db\",\"validate-schema\",\"datascript.db/validate-schema\",-783030261,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"private\",\"private\",-558947994),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[true,new cljs.core.Symbol(null,\"datascript.db\",\"datascript.db\",-444456104,null),new cljs.core.Symbol(null,\"validate-schema\",\"validate-schema\",758884380,null),\"datascript/db.cljc\",23,1,922,922,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"schema\",\"schema\",58529736,null)], null)),null,(cljs.core.truth_(datascript.db.validate_schema)?datascript.db.validate_schema.cljs$lang$test:null)]));\nreturn (fexpr__22365.cljs$core$IFn$_invoke$arity$1 ? fexpr__22365.cljs$core$IFn$_invoke$arity$1(schema) : fexpr__22365.call(null,schema));\n})();\nvar attrs = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(thaw_kw,datascript.serialize.dict_get(from,\"attrs\"));\nvar keywords = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(thaw_kw,datascript.serialize.dict_get(from,\"keywords\"));\nvar eavt = datascript.serialize.amap((function (arr){\nvar e = datascript.serialize.array_get(arr,(0));\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(attrs,datascript.serialize.array_get(arr,(1)));\nvar v = datascript.serialize.array_get(arr,(2));\nvar v__$1 = ((typeof v === 'number')?v:((typeof v === 'string')?v:((cljs.core.boolean_QMARK_(v))?v:((datascript.serialize.array_QMARK_(v))?(function (){var marker = datascript.serialize.array_get(v,(0));\nvar pred__22370 = cljs.core._EQ__EQ_;\nvar expr__22371 = marker;\nif(cljs.core.truth_((pred__22370.cljs$core$IFn$_invoke$arity$2 ? pred__22370.cljs$core$IFn$_invoke$arity$2((0),expr__22371) : pred__22370.call(null,(0),expr__22371)))){\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(keywords,datascript.serialize.array_get(v,(1)));\n} else {\nif(cljs.core.truth_((pred__22370.cljs$core$IFn$_invoke$arity$2 ? pred__22370.cljs$core$IFn$_invoke$arity$2((1),expr__22371) : pred__22370.call(null,(1),expr__22371)))){\nvar G__22373 = datascript.serialize.array_get(v,(1));\nreturn (thaw_fn.cljs$core$IFn$_invoke$arity$1 ? thaw_fn.cljs$core$IFn$_invoke$arity$1(G__22373) : thaw_fn.call(null,G__22373));\n} else {\nif(cljs.core.truth_((pred__22370.cljs$core$IFn$_invoke$arity$2 ? pred__22370.cljs$core$IFn$_invoke$arity$2((2),expr__22371) : pred__22370.call(null,(2),expr__22371)))){\nreturn Infinity;\n} else {\nif(cljs.core.truth_((pred__22370.cljs$core$IFn$_invoke$arity$2 ? pred__22370.cljs$core$IFn$_invoke$arity$2((3),expr__22371) : pred__22370.call(null,(3),expr__22371)))){\nreturn -Infinity;\n} else {\nif(cljs.core.truth_((pred__22370.cljs$core$IFn$_invoke$arity$2 ? pred__22370.cljs$core$IFn$_invoke$arity$2((4),expr__22371) : pred__22370.call(null,(4),expr__22371)))){\nreturn NaN;\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Unexpected value marker \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([marker], 0)),\" in \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([v], 0))], 0))].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(null,\"serialize\",\"serialize\",-69216574),new cljs.core.Keyword(null,\"value\",\"value\",305978217),v], null));\n}\n}\n}\n}\n}\n})():(function(){throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Unexpected value type \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.type(v)], 0)),\" (\",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([v], 0))], 0)),\")\"].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(null,\"serialize\",\"serialize\",-69216574),new cljs.core.Keyword(null,\"value\",\"value\",305978217),v], null))})()\n))));\nvar tx = (tx0 + datascript.serialize.array_get(arr,(3)));\nreturn datascript.db.datom.cljs$core$IFn$_invoke$arity$4(e,a,v__$1,tx);\n}),datascript.serialize.dict_get(from,\"eavt\"));\nvar aevt = (function (){var G__22374 = datascript.serialize.dict_get(from,\"aevt\");\nif((G__22374 == null)){\nreturn null;\n} else {\nreturn datascript.serialize.amap((function (p1__22344_SHARP_){\nreturn (eavt[p1__22344_SHARP_]);\n}),G__22374);\n}\n})();\nvar avet = (function (){var G__22375 = datascript.serialize.dict_get(from,\"avet\");\nif((G__22375 == null)){\nreturn null;\n} else {\nreturn datascript.serialize.amap((function (p1__22345_SHARP_){\nreturn (eavt[p1__22345_SHARP_]);\n}),G__22375);\n}\n})();\nvar settings = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"branching-factor\",\"branching-factor\",1903198601),datascript.serialize.dict_get(from,\"branching-factor\"),new cljs.core.Keyword(null,\"ref-type\",\"ref-type\",-1367328851),(function (){var G__22376 = datascript.serialize.dict_get(from,\"ref-type\");\nif((G__22376 == null)){\nreturn null;\n} else {\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(G__22376);\n}\n})()], null),cljs.core.select_keys(opts,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"branching-factor\",\"branching-factor\",1903198601),new cljs.core.Keyword(null,\"ref-type\",\"ref-type\",-1367328851)], null))], 0));\nreturn datascript.db.restore_db(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),schema,new cljs.core.Keyword(null,\"eavt\",\"eavt\",-666437073),me.tonsky.persistent_sorted_set.from_sorted_array.cljs$core$IFn$_invoke$arity$4(datascript.db.cmp_datoms_eavt,eavt,eavt.length,settings),new cljs.core.Keyword(null,\"aevt\",\"aevt\",-585148059),me.tonsky.persistent_sorted_set.from_sorted_array.cljs$core$IFn$_invoke$arity$4(datascript.db.cmp_datoms_aevt,aevt,aevt.length,settings),new cljs.core.Keyword(null,\"avet\",\"avet\",1383857032),me.tonsky.persistent_sorted_set.from_sorted_array.cljs$core$IFn$_invoke$arity$4(datascript.db.cmp_datoms_avet,avet,avet.length,settings),new cljs.core.Keyword(null,\"max-eid\",\"max-eid\",2134868075),datascript.serialize.dict_get(from,\"max-eid\"),new cljs.core.Keyword(null,\"max-tx\",\"max-tx\",1119558339),datascript.serialize.dict_get(from,\"max-tx\")], null));\n}));\n\n(datascript.serialize.from_serializable.cljs$lang$maxFixedArity = 2);\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","datascript/serialize.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",25],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$raise","~$datascript.db","~$cond+","^H","~$array","~$datascript.serialize","~$dict","^K"],"~:excludes",["~#set",["~$amap","~$array?"]],"~:macros",["^ ","^L",["^ ","~:arglists",["~#list",[["~$&","~$args"]]],"~:doc","Platform-native dictionary representation (java.util.Map on JVM, Object on JS)","^7",35,"^8",4,"^6","datascript/serialize.cljc","~:name","~$datascript.serialize/dict","~:ns","^K","~:macro",true],"^J",["^ ","^R",["^S",[["~$&","^T"]]],"^U","Platform-native array representation (java.util.List on JVM, Array on JS)","^7",27,"^8",4,"^6","datascript/serialize.cljc","^V","~$datascript.serialize/array","^X","^K","^Y",true]],"^V","^K","~:reader-aliases",["^ "],"~:op","^X","~:imports",null,"~:requires",["^ ","~$set","~$me.tonsky.persistent-sorted-set","~$arrays","~$me.tonsky.persistent-sorted-set.arrays","~$cljs.core","^17","~$goog","^18","~$db","^H","~$datascript.storage","^1:","~$lru","~$datascript.lru","^1<","^1<","^14","^14","~$clojure.edn","^1=","^H","^H","^16","^16","~$str","~$clojure.string","^1?","^1?","~$edn","^1=","~$storage","^1:"],"~:seen",["^N",["~:require","~:require-macros"]],"~:uses",["^ ","~$Datom","^H"],"^1D",["^ ","^H","^H","^19","^H","^K","^K","^17","^17","^15","^16","^16","^16"],"~:form",["^S",["~$ns","^K",["^S",["~:refer-clojure","~:exclude",["^O","^P"]]],["^S",["^1C",["^1=","~:as","^1@"],["^1?","^1K","^1>"],["^H","^1K","^19","~:refer-macros",["^G","^I"],"~:refer",["^1F"]],["^1<","^1K","^1;"],["^1:","^1K","^1A"],["^14","^1K","^13"],["^16","^1K","^15"]]],["^S",["^1D",["^K","^1M",["^J","^L"]]]]]],"~:flags",["^ ","^1C",["^N",[]],"^1D",["^N",[]]],"~:js-deps",["^ "],"~:deps",["^18","^17","^1=","^1?","^H","^1<","^1:","^14","^16"]],"^X","^K","~:resource-id",["~:shadow.build.classpath/resource","datascript/serialize.cljc"],"~:compiled-at",1696770186229,"^[",["^ ","^13","^14","^15","^16","^17","^17","^18","^18","^19","^H","^1:","^1:","^1;","^1<","^K","^K","^1<","^1<","^14","^14","^1=","^1=","^H","^H","^16","^16","^1>","^1?","^1?","^1?","^1@","^1=","^1A","^1:"],"~:resource-name","datascript/serialize.cljc","~:warnings",[],"~:source","(ns datascript.serialize\n  (:refer-clojure :exclude [amap array?])\n  (:require\n    [clojure.edn :as edn]\n    [clojure.string :as str]\n    [datascript.db :as db #?(:cljs :refer-macros :clj :refer) [raise cond+] #?@(:cljs [:refer [Datom]])]\n    [datascript.lru :as lru]\n    [datascript.storage :as storage]\n    [me.tonsky.persistent-sorted-set :as set]\n    [me.tonsky.persistent-sorted-set.arrays :as arrays])\n  #?(:cljs (:require-macros [datascript.serialize :refer [array dict]]))\n  #?(:clj\n     (:import\n       [datascript.db Datom]\n       [me.tonsky.persistent_sorted_set PersistentSortedSet])))\n\n(def ^:const ^:private marker-kw 0)\n(def ^:const ^:private marker-other 1)\n(def ^:const ^:private marker-inf 2)\n(def ^:const ^:private marker-minus-inf 3)\n(def ^:const ^:private marker-nan 4)\n\n(defn- if-cljs [env then else]\n  (if (:ns env) then else))\n\n#?(:clj\n   (defmacro array\n     \"Platform-native array representation (java.util.List on JVM, Array on JS)\"\n     [& args]\n     (if-cljs &env\n       (list* 'js* (str \"[\" (str/join \",\" (repeat (count args) \"~{}\")) \"]\") args)\n       (vec args))))\n\n#?(:clj\n   (defmacro dict\n     \"Platform-native dictionary representation (java.util.Map on JVM, Object on JS)\"\n     [& args]\n     (if-cljs &env\n       (list* 'js* (str \"{\" (str/join \",\" (repeat (/ (count args) 2) \"~{}:~{}\")) \"}\") args)\n       `(array-map ~@args))))\n\n(defn- array-get [d i]\n  #?(:clj  (.get ^java.util.List d (int i))\n     :cljs (if (cljs.core/array? d) (arrays/aget d i) (nth d i))))\n\n(defn- dict-get [d k]\n  #?(:clj  (.get ^java.util.Map d k)\n     :cljs (if (map? d) (d k) (arrays/aget d k))))\n\n(defn- array? [a]\n  #?(:clj  (instance? java.util.List a)\n     :cljs (or (cljs.core/array? a) (vector? a))))\n\n(defn- amap [f xs]\n  #?(:clj\n     (let [arr (java.util.ArrayList. (count xs))]\n       (reduce (fn [idx x] (.add arr (f x)) (inc idx)) 0 xs)\n       arr)\n     :cljs\n     (let [arr (js/Array. (count xs))]\n       (reduce (fn [idx x] (arrays/aset arr idx (f x)) (inc idx)) 0 xs)\n       arr)))\n\n(defn- amap-indexed [f xs]\n  #?(:clj\n     (let [arr (java.util.ArrayList. (count xs))]\n       (reduce (fn [idx x] (.add arr (f idx x)) (inc idx)) 0 xs)\n       arr)\n     :cljs\n     (let [arr (js/Array. (count xs))]\n       (reduce (fn [idx x] (arrays/aset arr idx (f idx x)) (inc idx)) 0 xs)\n       arr)))\n\n(defn- attr-comparator\n  \"Looks for a datom with attribute exactly bigger than the given one\"\n  [^Datom d1 ^Datom d2]\n  (cond \n    (nil? (.-a d2)) -1\n    (<= (compare (.-a d1) (.-a d2)) 0) -1\n    true 1))\n\n(defn- all-attrs\n  \"All attrs in a DB, distinct, sorted\"\n  [db]\n  (if (empty? (:aevt db))\n    []\n    (loop [attrs (transient [(:a (first (:aevt db)))])]\n      (let [attr      (nth attrs (dec (count attrs)))\n            left      (db/datom 0 attr nil)\n            right     (db/datom db/emax nil nil)\n            next-attr (:a (first (set/slice (:aevt db) left right attr-comparator)))]\n        (if (some? next-attr)\n          (recur (conj! attrs next-attr))\n          (persistent! attrs))))))\n\n(def ^{:arglists '([kw])} freeze-kw str)\n\n(defn- thaw-kw [s]\n  (if (str/starts-with? s \":\")\n    (keyword (subs s 1))\n    s))\n\n(defn- serializable-impl\n  \"Serialized structure breakdown:\n\n   count    :: number    \n   tx0      :: number\n   max-eid  :: number\n   max-tx   :: number\n   schema   :: freezed :schema\n   attrs    :: [keywords ...]\n   keywords :: [keywords ...]\n   eavt     :: [[e a-idx v dtx] ...]\n   a-idx    :: index in attrs\n   v        :: (string | number | boolean | [0 <index in keywords>] | [1 <freezed v>])\n   dtx      :: tx - tx0\n   aevt     :: [<index in eavt> ...]\n   avet     :: [<index in eavt> ...]\"\n  [db {:keys [freeze-fn freeze-kw]\n       :or   {freeze-fn pr-str\n              freeze-kw freeze-kw}}]\n  (when (storage/storage db)\n    (throw (ex-info \"serializable doesn't work with databases that have :storage\" {})))\n  (let [attrs       (all-attrs db)\n        attrs-map   (into {} (map vector attrs (range)))\n        *kws        (volatile! (transient []))\n        *kw-map     (volatile! (transient {}))\n        write-kw    (fn [kw]\n                      (let [idx (or\n                                  (get @*kw-map kw)\n                                  (let [keywords (vswap! *kws conj! kw)\n                                        idx      (dec (count keywords))]\n                                    (vswap! *kw-map assoc! kw idx)\n                                    idx))]\n                        (array marker-kw idx)))\n        write-other (fn [v] (array marker-other (freeze-fn v)))\n        write-v     (fn [v]\n                      (cond\n                        (string? v)  v\n                        #?@(:clj [(ratio? v) (write-other v)])\n                        \n                        (number? v)  \n                        (cond\n                          (== ##Inf v)  (array marker-inf)\n                          (== ##-Inf v) (array marker-minus-inf)\n                          #?(:clj (Double/isNaN v) :cljs (js/isNaN v)) (array marker-nan)\n                          :else v)\n\n                        (boolean? v) v\n                        (keyword? v) (write-kw v)\n                        true         (write-other v)))\n        eavt        (amap-indexed\n                      (fn [idx ^Datom d]\n                        (db/datom-set-idx d idx)\n                        (let [e  (.-e d)\n                              a  (attrs-map (.-a d))\n                              v  (write-v (.-v d))\n                              tx (- (.-tx d) db/tx0)]\n                          (array e a v tx)))\n                      (:eavt db))\n        aevt        (amap-indexed (fn [_ ^Datom d] (db/datom-get-idx d)) (:aevt db))\n        avet        (amap-indexed (fn [_ ^Datom d] (db/datom-get-idx d)) (:avet db))\n        schema      (freeze-fn (:schema db))\n        attrs       (amap freeze-kw attrs)\n        kws         (amap freeze-kw (persistent! @*kws))\n        #?@(:clj\n            [settings (set/settings (:eavt db))])]\n    (dict\n      \"count\"    (count (:eavt db))\n      \"tx0\"      db/tx0\n      \"max-eid\"  (:max-eid db)\n      \"max-tx\"   (:max-tx db)\n      \"schema\"   schema\n      \"attrs\"    attrs\n      \"keywords\" kws\n      \"eavt\"     eavt\n      \"aevt\"     aevt\n      \"avet\"     avet\n      #?@(:clj\n          [\"branching-factor\" (:branching-factor settings)\n           \"ref-type\"         (name (:ref-type settings))]))))\n\n#?(:clj\n   (let [lock (Object.)]\n     (defn serializable\n       ([db] (locking lock (serializable-impl db {})))\n       ([db opts] (locking lock (serializable-impl db opts)))))\n   :cljs\n   (defn serializable\n     ([db] (serializable-impl db {}))\n     ([db opts] (serializable-impl db opts))))\n\n(defn from-serializable\n  ([from] \n   (from-serializable from {}))\n  ([from {:keys [thaw-fn thaw-kw]\n          :or   {thaw-fn edn/read-string\n                 thaw-kw thaw-kw}\n          :as opts}]\n   (let [tx0      (dict-get from \"tx0\")\n         schema   (thaw-fn (dict-get from \"schema\"))\n         _        (#'db/validate-schema schema)\n         attrs    (->> (dict-get from \"attrs\") (mapv thaw-kw))\n         keywords (->> (dict-get from \"keywords\") (mapv thaw-kw))\n         eavt     (->> (dict-get from \"eavt\")\n                    (amap (fn [arr]\n                            (let [e  (array-get arr 0)\n                                  a  (nth attrs (array-get arr 1))\n                                  v  (array-get arr 2)\n                                  v  (cond\n                                       (number? v)  v\n                                       (string? v)  v\n                                       (boolean? v) v\n                                       (array? v) (let [marker (array-get v 0)]\n                                                    (condp == marker\n                                                      marker-kw    (nth keywords (array-get v 1))\n                                                      marker-other (thaw-fn (array-get v 1))\n                                                      marker-inf   ##Inf\n                                                      marker-minus-inf ##-Inf\n                                                      marker-nan   ##NaN\n                                                      (raise \"Unexpected value marker \" marker \" in \" (pr-str v)\n                                                        {:error :serialize :value v})))\n                                       true (raise \"Unexpected value type \" (type v) \" (\" (pr-str v) \")\"\n                                              {:error :serialize :value v}))\n                                  tx (+ tx0 (array-get arr 3))]\n                              (db/datom e a v tx))))\n                    #?(:clj arrays/into-array))\n         aevt     (some->> (dict-get from \"aevt\") (amap #(arrays/aget eavt %)) #?(:clj arrays/into-array))\n         avet     (some->> (dict-get from \"avet\") (amap #(arrays/aget eavt %)) #?(:clj arrays/into-array))\n         settings (merge\n                    {:branching-factor (dict-get from \"branching-factor\")\n                     :ref-type         (some-> (dict-get from \"ref-type\") keyword)}\n                    (select-keys opts [:branching-factor :ref-type]))]\n     (db/restore-db\n       {:schema  schema\n        :eavt    (set/from-sorted-array db/cmp-datoms-eavt eavt (arrays/alength eavt) settings)\n        :aevt    (set/from-sorted-array db/cmp-datoms-aevt aevt (arrays/alength aevt) settings)\n        :avet    (set/from-sorted-array db/cmp-datoms-avet avet (arrays/alength avet) settings)\n        :max-eid (dict-get from \"max-eid\")\n        :max-tx  (dict-get from \"max-tx\")}))))\n","~:reader-features",["^N",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";AAgBA,iCAAA,jCAAuBA;AACvB,oCAAA,pCAAuBC;AACvB,kCAAA,lCAAuBC;AACvB,wCAAA,xCAAuBC;AACvB,kCAAA,lCAAuBC;AAEvB,+BAAA,/BAAOC,sEAASC,IAAIC,KAAKC;AAAzB,AACE,oBAAI,AAAA,8EAAKF;AAAKC;;AAAKC;;;AAkBrB,iCAAA,jCAAOC,0EAAWC,EAAEC;AAApB,AAEW,GAAI,AAACC,uBAAiBF;AAAG,QAAaA,EAAEC;;AAAG,OAACE,4CAAIH,EAAEC;;;AAE7D,gCAAA,hCAAOG,wEAAUJ,EAAEK;AAAnB,AAEW,GAAI,AAACC,qBAAKN;AAAG,QAACA,kCAAAA,qCAAAA,LAAEK,iBAAAA;;AAAG,QAAaL,EAAEK;;;AAE7C,oCAAA,pCAAOE,gFAAQC;AAAf,AAEW,SAAI,AAACN,uBAAiBM,QAAG,AAACC,wBAAQD;;AAE7C,4BAAA,5BAAOE,gEAAMC,EAAEC;AAAf,AAMK,IAAMC,MAAI,KAAAC,MAAW,AAACC,gBAAMH;AAA5B,AACE,AAACI,+CAAO,WAAKC,IAAIC;AAAT,AAAY,CAAaL,IAAII,OAAI,CAACN,kCAAAA,qCAAAA,LAAEO,iBAAAA;;AAAI,cAAA,NAAKD;GAArD,IAA6DL;;AAC7DC;;AAEP,oCAAA,pCAAOM,gFAAcR,EAAEC;AAAvB,AAMK,IAAMC,MAAI,KAAAC,MAAW,AAACC,gBAAMH;AAA5B,AACE,AAACI,+CAAO,WAAKC,IAAIC;AAAT,AAAY,CAAaL,IAAII,OAAI,CAACN,kCAAAA,yCAAAA,TAAEM,qBAAAA,jBAAIC,qBAAAA;;AAAI,cAAA,NAAKD;GAAzD,IAAiEL;;AACjEC;;AAEP;;;uCAAA,vCAAOO,sFAEGC,GAAUC;AAFpB,AAGE,GACE,SAAA,RAAM,AAAKA;AADb;;AAAA,GAEE,iCAAA,hCAAI,AAACC,kBAAQ,AAAKF,KAAI,AAAKC;AAF7B;;AAAA,AAAA;;;;;AAKF;;;iCAAA,jCAAOE,0EAEJC;AAFH,AAGE,GAAI,AAACC,uBAAO,AAAA,mFAAOD;AAAnB;;AAEE,IAAOE,QAAM,qBAAA,rBAACC,wGAAW,AAAA,8EAAI,AAACC,gBAAM,AAAA,mFAAOJ;;AAA3C,AACE,IAAMK,OAAU,AAAC3B,4CAAIwB,MAAM,0BAAA,zBAAK,AAACZ,gBAAMY;IACjCI,OAAU,kDAAA,SAAA,3DAACC,sDAAWF;IACtBG,QAAU,+DAAA,KAAA,pEAACD,kDAASE,AAAA;IACpBC,YAAU,AAAA,8EAAI,AAACN,gBAAM,AAACO,oEAAU,AAAA,mFAAOX,IAAIM,KAAKE,MAAMb;AAH5D,AAIE,GAAI,GAAA,cAAA,bAAOe;AACT,eAAO,AAACE,mDAAMV,MAAMQ;;;;AACpB,OAACG,2BAAYX;;;;;;AAEvB,AAA0BY,iCAAUC;AAEpC,+BAAA,/BAAOC,sEAASC;AAAhB,AACE,GAAI,oCAAA,pCAACC,kCAAiBD;AACpB,OAACE,gDAAQ,+CAAA,/CAACC,6CAAKH;;AACfA;;;AAEJ;;;;;;;;;;;;;;;;;yCAAA,oDAAAI,7FAAOI,0FAgBJzB;AAhBH,AAAA,IAAAsB,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;gBAAA,AAAAE,4CAAAF,eAAA,vEAgBcI,sIACUE;gBAjBxB,AAAAJ,4CAAAF,eAAA,vEAgBwBK,qIAEAb;AAlBxB,AAmBE,oBAAM,AAACe,2BAAgB7B;AAAvB,AACE,MAAO,gDAAA,8DAAA,9GAAC8B;;AADV;;AAEA,IAAM5B,QAAY,AAACH,+BAAUC;IACvB+B,YAAY,6CAAA,7CAACC,gFAAQ,AAACC,4CAAIC,iBAAOhC,MAAM,AAACiC;IACxCC,YAAY,AAACC,yBAAU,qBAAA,rBAAClC;IACxBmC,eAAY,AAACD,yBAAU,qBAAA,rBAAClC;IACxBoC,WAAY,WAAKC;AAAL,AACE,IAAMhD,MAAI,iBAAAiD,mBACE,4CAAA,AAAAC,5CAAClB,4DAAKc,cAAQE;AADhB,AAAA,oBAAAC;AAAAA;;AAEE,IAAME,WAAS,yDAAA,mDAAA,5GAAQP,4GAAAA,nDAAKxB,mGAAM4B;IAC5BhD,MAAS,6BAAA,5BAAK,AAACF,gBAAMqD;AAD3B,AAEE,4DAAA,oDAAA,hHAAQL,gHAAAA,pDAAQM,uGAAOJ,GAAGhD;;AAC1BA;;;AALd,AAME,QAAO3B,AAAA,IAAU2B;;IACjCqD,cAAY,WAAKC;AAAL,AAAQ,QAAOhF,AAAA,IAAa,CAAC4D,0CAAAA,6CAAAA,LAAUoB,yBAAAA;;IACnDC,UAAY,WAAKD;AAAL,AACE,GACE,OAASA;AAAIA;;AADf,GAIE,OAASA;AACT,GACE,CAAA,aAAUA;AAAI,QAAO/E,AAAA;;AADvB,GAEE,CAAA,cAAW+E;AAAG,QAAO9E,AAAA;;AAFvB,oBAGiC,AAACgF,MAASF;AAAI,QAAO7E,AAAA;;AAHtD,AAIQ6E;;;;;;AATV,GAWE,AAACG,yBAASH;AAAGA;;AAXf,GAYE,cAAAI,bAAUJ;AAAG,OAACP,SAASO;;AAZzB,AAae,OAACD,YAAYC;;;;;;;IAC1CK,OAAY,AAACzD,kCACC,WAAKF,IAAWjB;AAAhB,AACE,AAAkBA,kDAAEiB;;AACpB,IAAM4D,IAAG,AAAK7E;IACRQ,IAAG,iBAAAsE,WAAW,AAAK9E;AAAhB,AAAA,0FAAA8E,gCAAAA,lHAACtB,0CAAAA,oDAAAA;;IACJe,IAAG,AAACC,QAAQ,AAAKxE;IACjB+E,KAAG,CAAG,AAAM/E,OAAGgF,AAAA;AAHrB,AAIE,QAAOH,EAAErE,EAAE+D,EAAEQ;GACjB,AAAA,mFAAOtD;IACrBwD,OAAY,AAAC9D,kCAAa,WAAK+D,EAASlF;AAAd,AAAiB,OAAkBA;GAAI,AAAA,mFAAOyB;IACxE0D,OAAY,AAAChE,kCAAa,WAAK+D,EAASlF;AAAd,AAAiB,OAAkBA;GAAI,AAAA,mFAAOyB;IACxE2D,SAAY,iBAAAC,WAAW,AAAA,wFAAS5D;AAApB,AAAA,0FAAA4D,gCAAAA,lHAAClC,0CAAAA,oDAAAA;;IACbxB,YAAY,AAACjB,0BAAK0C,UAAUzB;IAC5B2D,MAAY,AAAC5E,0BAAK0C,UAAU,2BAAA,AAAAe,3BAAC7B,2CAAauB;AAzChD,AA4CE,QAAA,gHAAA,kBAAA,uGAAA,oGAAA,gBAAA,kBAAA,eAAA,YAAA,YAAA,9YACa,AAAC9C,gBAAM,AAAA,mFAAOU,WACduD,AAAA,sBACA,AAAA,yFAAUvD,aACV,AAAA,uFAASA,aACT2D,eACAzD,qBACA2D,WACAV,YACAK,YACAE;;AAWd,AAAA,oCAAA,4CAAAI,hFAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,gEAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,gEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,kEAAA,lEAAMD,6EACFhE;AADJ,AACQ,iDAAA,1CAACyB,uCAAkBzB;;;AAD3B,CAAA,kEAAA,lEAAMgE,6EAEFhE,GAAGkE;AAFP,AAEa,OAACzC,uCAAkBzB,GAAGkE;;;AAFnC,CAAA,4DAAA,5DAAMF;;AAAN,AAIH,AAAA,yCAAA,iDAAAF,1FAAMM;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,qEAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,qEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAH,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,uEAAA,vEAAMG,kFACFG;AADJ,AAEG,iFAAA,1EAACC,qEAAkBD;;;AAFtB,CAAA,uEAAA,gBAAAF,vFAAMD,kFAGFG;AAHJ,AAAA,IAAAD,aAAAD;IAAAC,iBAAA,AAAA/C,4BAAA+C;WAAAA,PAMcJ;cANd,AAAA1C,4CAAA8C,eAAA,rEAGiBG,gIACQE;cAJzB,AAAAnD,4CAAA8C,eAAA,rEAGyBI,gIAEA1D;AALzB,AAOG,IAAM4D,MAAS,mCAAA,nCAACjG,8BAAS4F;IACnBZ,SAAS,iBAAAkB,WAAS,mCAAA,nCAAClG,8BAAS4F;AAAnB,AAAA,sFAAAM,8BAAAA,5GAACJ,wCAAAA,kDAAAA;;IACVhB,IAAS,iBAAAqB,eAAA,oEAAA,AAAA,wGAAA,wCAAA,2DAAA,gDAAA,qDAAA,sDAAA,iEAAA,yDAAA,oDAAA,6DAAA,6DAAA,mDAAA,sDAAA,AAAA,KAAA,AAAA,2EAAA,AAAA,8EAAA,AAAA,qBAAA,AAAA,GAAA,AAAA,EAAA,AAAA,IAAA,AAAA,IAAA,AAAA,sKAAA,AAAA,KAAA,kBAAAC,+BAAA,AAAA,AAAAA,6CAAA;AAAA,AAAA,QAAAD,6CAAAA,qDAAAA,VAAsBnB,iCAAAA;;IAC/BzD,6DAAc,mCAAA,nCAACvB,8BAAS4F,nFAAc,AAACS,6CAAKN;IAC5C/B,gEAAc,mCAAA,nCAAChE,8BAAS4F,nFAAiB,AAACS,6CAAKN;IAC/CvB,OACW,AAAClE,0BAAK,WAAKG;AAAL,AACE,IAAMgE,IAAG,mCAAA,nCAAC9E,+BAAUc;IACdL,IAAG,AAACL,4CAAIwB,MAAM,mCAAA,nCAAC5B,+BAAUc;IACzB0D,IAAG,mCAAA,nCAACxE,+BAAUc;IACd0D,QAAG,2BAAA,2BAAA,iCAAA,rFACE,OAASA,gBAAIA,IACb,OAASA,gBAAIA,IACb,AAACG,yBAASH,IAAGA,IACb,AAAChE,kCAAOgE,IAAG,iBAAMmC,SAAO,iCAAA,jCAAC3G,+BAAUwE;AAAxB,AACE,IAAAoC,cAAOE;IAAPD,cAAUF;AAAV,AAAA,oBAAA,CAAAC,4CAAAA,8CAAAC,eAAAD,0BAAAC,7CACEtH,AAAA,yCAAAA,AAAA;AAAa,OAACa,4CAAIiE,SAAS,iCAAA,jCAACrE,+BAAUwE;;AADxC,oBAAA,CAAAoC,4CAAAA,8CAAAC,eAAAD,0BAAAC,7CAEErH,AAAA,yCAAAA,AAAA;AAAa,IAAAuH,WAAS,iCAAA,jCAAC/G,+BAAUwE;AAApB,AAAA,sFAAAuC,8BAAAA,5GAACZ,wCAAAA,kDAAAA;;AAFhB,oBAAA,CAAAS,4CAAAA,8CAAAC,eAAAD,0BAAAC,7CAGEpH,AAAA,yCAAAA,AAAA;AAHF;;AAAA,oBAAA,CAAAmH,4CAAAA,8CAAAC,eAAAD,0BAAAC,7CAIEnH,AAAA,yCAAAA,AAAA;AAJF;;AAAA,oBAAA,CAAAkH,4CAAAA,8CAAAC,eAAAD,0BAAAC,7CAKElH,AAAA,yCAAAA,AAAA;AALF;;AAME,MAAA,AAAA6D,gDAAA,CAAA,2BAAA,AAAAwD,qHAAA,OAAA,AAAAA,wOAAA,2CAAA,uDAAA,8DAAA,5ZAAkCL,4HAAc,AAACK,wGAAOxC,8OAC5BA;;;;;;KAZ7C,AAaO,kBAAA,AAAAhB,gDAAA,CAAA,yBAAA,AAAAwD,gIAAA,KAAA,AAAAA,8NAAA,cAAA,2CAAA,uDAAA,8DAAA,zaAAgC,AAACC,eAAKzC,sHAAQ,AAACwC,wGAAOxC,kPAC1BA;;IACtCQ,KAAG,CAAGsB,MAAI,mCAAA,nCAACtG,+BAAUc;AAlB3B,AAmBE,OAACmB,kDAAS6C,EAAErE,EAAE+D,MAAEQ;GArBvB,mCAAA,nCAAC3E,8BAAS4F;IAuBxBf,OAAS,iBAAAgC,WAAS,mCAAA,nCAAC7G,8BAAS4F;AAAnB,AAAA,GAAA,CAAAiB,YAAA;AAAA;;AAAgC,iCAAA,WAAAC,rCAACxG;AAAD,AAAO,aAAAwG,LAAatC;GAApBqC;;;IACzC9B,OAAS,iBAAAgC,WAAS,mCAAA,nCAAC/G,8BAAS4F;AAAnB,AAAA,GAAA,CAAAmB,YAAA;AAAA;;AAAgC,iCAAA,WAAAC,rCAAC1G;AAAD,AAAO,aAAA0G,LAAaxC;GAApBuC;;;IACzCE,WAAS,uGAAA,2CAAA,oIAAA,tRAACC,+NACoB,mCAAA,nCAAClH,8BAAS4F,uFACV,iBAAAuB,WAAQ,mCAAA,nCAACnH,8BAAS4F;AAAlB,AAAA,GAAA,CAAAuB,YAAA;AAAA;;AAAA,uDAAAA,hDAAmC3E;;aACtD,2BAAA,mFAAA,6EAAA,3LAAC4E,sBAAY7B;AAjC9B,AAkCE,gCAAA,2CAAA,iEAAA,8LAAA,8LAAA,8LAAA,yGAAA,xyBAAC8B,8HACWrC,4DACA,AAACsC,gFAAsBC,8BAAmB/C,KAAK,AAAgBA,YAAMyC,+DACrE,AAACK,gFAAsBE,8BAAmB3C,KAAK,AAAgBA,YAAMoC,+DACrE,AAACK,gFAAsBG,8BAAmB1C,KAAK,AAAgBA,YAAMkC,qEACrE,mCAAA,nCAACjH,8BAAS4F,yEACV,mCAAA,nCAAC5F,8BAAS4F;;;AA/C3B,CAAA,iEAAA,jEAAMH;;AAAN","names",["datascript.serialize/marker-kw","datascript.serialize/marker-other","datascript.serialize/marker-inf","datascript.serialize/marker-minus-inf","datascript.serialize/marker-nan","datascript.serialize/if-cljs","env","then","else","datascript.serialize/array-get","d","i","cljs.core/array?","cljs.core.nth","datascript.serialize/dict-get","k","cljs.core/map?","datascript.serialize/array?","a","cljs.core/vector?","datascript.serialize/amap","f","xs","arr","js/Array","cljs.core/count","cljs.core.reduce","idx","x","datascript.serialize/amap-indexed","datascript.serialize/attr-comparator","d1","d2","cljs.core/compare","datascript.serialize/all-attrs","db","cljs.core/empty?","attrs","cljs.core/transient","cljs.core/first","attr","left","datascript.db.datom","right","datascript.db/emax","next-attr","me.tonsky.persistent_sorted_set.slice","cljs.core.conj_BANG_","cljs.core/persistent!","datascript.serialize/freeze-kw","cljs.core/str","datascript.serialize/thaw-kw","s","clojure.string/starts-with?","cljs.core.keyword","cljs.core.subs","p__22335","map__22336","cljs.core/--destructure-map","cljs.core.get","datascript.serialize/serializable-impl","freeze-fn","freeze-kw","cljs.core/pr-str","datascript.storage/storage","cljs.core.ex_info","attrs-map","cljs.core.into","cljs.core.map","cljs.core/vector","cljs.core.range","*kws","cljs.core/volatile!","*kw-map","write-kw","kw","or__5045__auto__","cljs.core/deref","keywords","cljs.core.assoc_BANG_","write-other","v","write-v","js/isNaN","cljs.core/boolean?","cljs.core/Keyword","eavt","e","G__22339","tx","datascript.db/tx0","aevt","_","avet","schema","G__22340","kws","var_args","G__22343","datascript.serialize/serializable","js/Error","opts","G__22347","datascript.serialize/from-serializable","p__22356","map__22357","from","datascript.serialize.from_serializable","thaw-fn","thaw-kw","clojure.edn/read-string","tx0","G__22359","fexpr__22365","datascript.db/validate-schema","cljs.core.mapv","marker","pred__22370","expr__22371","cljs.core/==","G__22373","cljs.core.pr_str","cljs.core/type","G__22374","p1__22344#","G__22375","p1__22345#","settings","cljs.core.merge","G__22376","cljs.core/select-keys","datascript.db/restore-db","me.tonsky.persistent_sorted_set.from_sorted_array","datascript.db/cmp-datoms-eavt","datascript.db/cmp-datoms-aevt","datascript.db/cmp-datoms-avet"]],"~:used-vars",["^N",["~$cljs.core/array?","~$cljs.core/==","~$cljs.core/--destructure-map","~$datascript.serialize/all-attrs","~$cljs.core/keyword","~$cljs.core/boolean?","~$cljs.core/str","~$datascript.serialize/marker-inf","~$clojure.string/starts-with?","~$datascript.serialize/attr-comparator","~$datascript.serialize/if-cljs","~$clojure.edn/read-string","~$cljs.core/vector?","~$datascript.serialize/serializable","~$datascript.db/restore-db","~$cljs.core/-deref","~$datascript.db/tx0","~$cljs.core/count","~$cljs.core/deref","~$cljs.core/reduce","~$datascript.serialize/marker-other","~$cljs.core/Keyword","~$datascript.db/datom-set-idx","~$datascript.serialize/amap","~$cljs.core/mapv","~$datascript.db/cmp-datoms-aevt","~$datascript.serialize/thaw-kw","~$cljs.core/pr-str","~$datascript.db/validate-schema","~$cljs.core/empty?","~$cljs.core/into","~$cljs.core/map?","~$datascript.serialize/amap-indexed","~$me.tonsky.persistent-sorted-set/from-sorted-array","~$cljs.core/map","~$datascript.serialize/from-serializable","~$cljs.core/volatile!","~$datascript.serialize/dict-get","~$cljs.core/get","~$datascript.serialize/marker-minus-inf","~$js/Array","~$js/isNaN","~$cljs.core/-vreset!","~$datascript.serialize/array?","~$cljs.core/conj!","~$datascript.db/datom","~$datascript.db/cmp-datoms-avet","~$cljs.core/persistent!","~$cljs.core/nth","~$cljs.core/ex-info","~$cljs.core/select-keys","~$cljs.core/transient","~$datascript.serialize/marker-kw","~$datascript.serialize/marker-nan","~$cljs.core/not","~$cljs.core/compare","~$datascript.serialize/array-get","~$datascript.serialize/freeze-kw","~$me.tonsky.persistent-sorted-set/slice","~$datascript.db/emax","~$cljs.core/range","~$datascript.storage/storage","~$cljs.core/first","~$cljs.core/assoc!","~$cljs.core/subs","~$cljs.core/merge","~$datascript.db/cmp-datoms-eavt","~$js/Error","~$datascript.db/datom-get-idx","~$cljs.core/vector","~$cljs.core/type","~$datascript.serialize/serializable-impl"]]],"~:cache-keys",["~#cmap",[["^1R","datascript/db.cljc"],["ea08a8bf28b1a0f941624d63fc53b9941874f836","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^N",[]],"~:deps-syms",["^18","^17","~$goog.array","~$clojure.walk","~$clojure.data","^1<","^14","^16"]]],["^1R","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","~$goog.dom.HtmlElement"]]],["^1R","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^17","^1?","~$goog.string"]]],["^1R","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18"]]],["^1R","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.asserts","~$goog.string.internal","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^1R","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^3[","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^40"]]],["^1R","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^3["]]],["^1R","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18"]]],["^1R","datascript/serialize.cljc"],["ea08a8bf28b1a0f941624d63fc53b9941874f836","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^17","^1=","^1?","^H","^1<","^1:","^14","^16"]]],["^1R","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18"]]],["^1R","cljs/tools/reader/edn.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^17","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^3X","~$goog.string.StringBuffer"]]],["^1R","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18"]]],["^1R","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^17"]]],["^1R","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^3Y","^40"]]],["^1R","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^17","^48","^49","^4:","^47","^3T","^3X","^4<"]]],["^1R","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18"]]],["^1R","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18"]]],["^1R","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^3["]]],"~:SHADOW-TIMESTAMP",[1696742661000,1696742661000,1685338599000],["^1R","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^3[","~$goog.reflect"]]],["^1R","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^3[","~$goog.fs.blob","^43","~$goog.html.SafeScript","~$goog.html.trustedtypes","^45","^46"]]],["^1R","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18"]]],["^1R","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18"]]],["^1R","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^45","~$goog.html.SafeUrl","^46","^3[","^40"]]],["^1R","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^3[","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^4@","~$goog.html.SafeStyle","^4B","^44","~$goog.html.uncheckedconversions","^45","^40"]]],["^1R","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","~$goog.dom.TagName","^3[","~$goog.dom.element"]]],["^1R","clojure/walk.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^17"]]],["^1R","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^45","^4@","^4G","~$goog.html.SafeStyleSheet","^4B","^4I","^44","^46","^3[","~$goog.labs.userAgent.browser","^3T","~$goog.object","^40","~$goog.dom.tags","^4A"]]],["^1R","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^4M"]]],["^1R","me/tonsky/persistent_sorted_set/arrays.cljc"],["7c8a2fc60577be456d69a471e6da9fa6e36b3cd0","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^17","^1?"]]],["^1R","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18"]]],["^1R","cljs/reader.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^17","^4M","^4;","~$cljs.tools.reader.edn","^4<"]]],["^1R","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1R","me/tonsky/persistent_sorted_set.cljs"],["7c8a2fc60577be456d69a471e6da9fa6e36b3cd0","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^17","^16"]]],["^1R","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^3T","^3[","~$goog.collections.maps","^3X","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1R","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^3Z"]]],["^1R","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18"]]],["^1R","clojure/edn.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^17","~$cljs.reader"]]],["^1R","datascript/storage.cljs"],["ea08a8bf28b1a0f941624d63fc53b9941874f836","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^17"]]],["^1R","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18"]]],["^1R","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",[]]],["^1R","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^3T","^4M"]]],["^1R","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^17","^48","^1?","~$cljs.tools.reader.impl.inspect"]]],["^1R","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^17","^3X","^4<"]]],["^1R","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","~$goog.dom.safe","^4H","^45","^40"]]],["^1R","clojure/data.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^17","~$clojure.set"]]],["^1R","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18"]]],["^1R","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^40","^42"]]],["^1R","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18"]]],["^1R","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^17","^49","^3X","^4<"]]],["^1R","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","~$goog.flags"]]],["^1R","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^4Q","^4I"]]],["^1R","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^3[","^4F","^4@","^4G","^4K","^4B","^44","^45","^40"]]],["^1R","datascript/lru.cljc"],["ea08a8bf28b1a0f941624d63fc53b9941874f836","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^17"]]],["^1R","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^17","^47","^48","^49"]]],["^1R","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18"]]],["^1R","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","~$goog.math.Long","~$goog.math.Integer","^3X","^4M","^3T","~$goog.Uri","^4<"]]],["^1R","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^45","^46","^4A","^3["]]],["^1R","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^45","^4G","^46","^4M","^3[","^40"]]],["^1R","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^4>"]]],["^1R","clojure/set.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^17"]]],["^1R","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^3[","^3X"]]],["^1R","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3P",["^ ","^3Q",null,"^3R",["^N",[]],"^3S",["^18","^3[","^46"]]]]],"~:clj-info",["^ ","jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/reader.clj",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1685338599000,"jar:file:/home/neromous/.m2/repository/datascript/datascript/1.5.3/datascript-1.5.3.jar!/datascript/serialize.cljc",1696747362000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1685338598000,"jar:file:/home/neromous/.m2/repository/datascript/datascript/1.5.3/datascript-1.5.3.jar!/datascript/util.cljc",1696747362000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1685338599000,"jar:file:/home/neromous/.m2/repository/datascript/datascript/1.5.3/datascript-1.5.3.jar!/datascript/db.cljc",1696747362000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1685338598000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1685338598000,"jar:file:/home/neromous/.m2/repository/persistent-sorted-set/persistent-sorted-set/0.3.0/persistent-sorted-set-0.3.0.jar!/me/tonsky/persistent_sorted_set/arrays.cljc",1696747361000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1685338599000,"jar:file:/home/neromous/.m2/repository/datascript/datascript/1.5.3/datascript-1.5.3.jar!/datascript/lru.cljc",1696747362000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1685338598000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1685338599000,"jar:file:/home/neromous/.m2/repository/persistent-sorted-set/persistent-sorted-set/0.3.0/persistent-sorted-set-0.3.0.jar!/me/tonsky/persistent_sorted_set.clj",1696747361000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1685338598000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1685338598000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1685338598000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1685338598000,"jar:file:/home/neromous/.m2/repository/datascript/datascript/1.5.3/datascript-1.5.3.jar!/datascript/storage.clj",1696747362000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1685338599000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","datascript/serialize.cljc","^7",1,"^8",5,"^9",1,"^:",25],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",["^ ","^G","^H","^I","^H","^J","^K","^L","^K"],"^M",["^N",["^O","^P"]],"^Q",["^ ","^L",["^ ","^R",["^S",[["~$&","^T"]]],"^U","Platform-native dictionary representation (java.util.Map on JVM, Object on JS)","^7",35,"^8",4,"^6","datascript/serialize.cljc","^V","^W","^X","^K","^Y",true],"^J",["^ ","^R",["^S",[["~$&","^T"]]],"^U","Platform-native array representation (java.util.List on JVM, Array on JS)","^7",27,"^8",4,"^6","datascript/serialize.cljc","^V","^Z","^X","^K","^Y",true]],"^V","^K","^[",["^ "],"^11",null,"^12",["^ ","^13","^14","^15","^16","^17","^17","^18","^18","^19","^H","^1:","^1:","^1;","^1<","^1<","^1<","^14","^14","^1=","^1=","^H","^H","^16","^16","^1>","^1?","^1?","^1?","^1@","^1=","^1A","^1:"],"^1B",["^N",["^1C","^1D"]],"~:shadow/js-access-global",["^N",["isNaN","Error","Array"]],"^1E",["^ ","^1F","^H"],"~:defs",["^ ","~$freeze-kw",["^ ","^5",["^ ","^6","datascript/serialize.cljc","^7",96,"^8",27,"^9",96,"^:",36,"^R",["^S",["~$quote",["^S",[["~$kw"]]]]]],"^V","^3?","^6","datascript/serialize.cljc","^:",36,"^8",1,"~:root-source-info",["^ ","~:source-type","~:fragment","~:source-form",["^S",["~$def","^61","^1>"]]],"^7",96,"^9",96,"^R",["^S",["^62",["^S",[["^63"]]]]]],"~$attr-comparator",["^ ","~:protocol-inline",null,"^5",["^ ","^6","datascript/serialize.cljc","^7",74,"^8",8,"^9",74,"^:",23,"~:private",true,"^R",["^S",["^62",["^S",[["~$d1","~$d2"]]]]],"^U","Looks for a datom with attribute exactly bigger than the given one"],"^6;",true,"^V","^2;","^6","datascript/serialize.cljc","^:",23,"~:method-params",["^S",[["^6<","^6="]]],"~:protocol-impl",null,"~:arglists-meta",["^S",[null,null]],"^8",1,"^64",["^ ","^65","^66","^67",["^S",["~$defn-","^69","Looks for a datom with attribute exactly bigger than the given one",["^6<","^6="],["^S",["~$cond",["^S",["~$nil?",["^S",["~$.-a","^6="]]]],-1,["^S",["~$<=",["^S",["~$compare",["^S",["^6D","^6<"]],["^S",["^6D","^6="]]]],0]],-1,true,1]]]]],"~:variadic?",false,"^7",74,"~:ret-tag","~$number","^9",74,"~:max-fixed-arity",2,"~:fn-var",true,"^R",["^S",["^62",["^S",[["^6<","^6="]]]]],"^U","Looks for a datom with attribute exactly bigger than the given one"],"~$marker-inf",["^ ","^5",["^ ","^6","datascript/serialize.cljc","^7",19,"^8",24,"^9",19,"^:",34,"^6;",true,"~:const",true],"^6;",true,"^V","^29","^6","datascript/serialize.cljc","^:",34,"~:const-expr",["^ ","^10","^6M","~:val",2,"~:env",["^ ","~:context","~:expr"],"^1G",2,"~:tag","^6I"],"^8",1,"^64",["^ ","^65","^66","^67",["^S",["^68","^6L",2]]],"^6M",true,"^7",19,"^9",19,"^6S","^6I"],"~$if-cljs",["^ ","^6:",null,"^5",["^ ","^6","datascript/serialize.cljc","^7",23,"^8",8,"^9",23,"^:",15,"^6;",true,"^R",["^S",["^62",["^S",[["~$env","~$then","~$else"]]]]]],"^6;",true,"^V","^2<","^6","datascript/serialize.cljc","^:",15,"^6>",["^S",[["^6U","^6V","^6W"]]],"^6?",null,"^6@",["^S",[null,null]],"^8",1,"^64",["^ ","^65","^66","^67",["^S",["^6A","^6T",["^6U","^6V","^6W"],["^S",["~$if",["^S",["^X","^6U"]],"^6V","^6W"]]]]],"^6G",false,"^7",23,"^9",23,"^6J",3,"^6K",true,"^R",["^S",["^62",["^S",[["^6U","^6V","^6W"]]]]]],"~$from-serializable",["^ ","^6:",null,"^5",["^ ","^6","datascript/serialize.cljc","^7",193,"^8",7,"^9",193,"^:",24,"^R",["^S",["^62",["^S",[["~$from"],["^6Z",["^ ","~:keys",["~$thaw-fn","~$thaw-kw"],"~:or",["^ ","^70","~$edn/read-string","^71","^71"],"^1K","~$opts"]]]]]],"~:top-fn",["^ ","^6G",false,"~:fixed-arity",2,"^6J",2,"^6>",[["^6Z"],["^6Z",["^ ","^6[",["^70","^71"],"^72",["^ ","^70","^73","^71","^71"],"^1K","^74"]]],"^R",["^S",[["^6Z"],["^6Z",["^ ","^6[",["^70","^71"],"^72",["^ ","^70","^73","^71","^71"],"^1K","^74"]]]],"^6@",["^S",[null,null]]]],"^V","^2U","^6","datascript/serialize.cljc","^:",24,"^75",["^ ","^6G",false,"^76",2,"^6J",2,"^6>",[["^6Z"],["^6Z",["^ ","^6[",["^70","^71"],"^72",["^ ","^70","^73","^71","^71"],"^1K","^74"]]],"^R",["^S",[["^6Z"],["^6Z",["^ ","^6[",["^70","^71"],"^72",["^ ","^70","^73","^71","^71"],"^1K","^74"]]]],"^6@",["^S",[null,null]]],"^6>",[["^6Z"],["^6Z",["^ ","^6[",["^70","^71"],"^72",["^ ","^70","^73","^71","^71"],"^1K","^74"]]],"^6?",null,"^76",2,"^6@",["^S",[null,null]],"^8",1,"^64",["^ ","^65","^66","^67",["^S",["~$defn","^6Y",["^S",[["^6Z"],["^S",["^6Y","^6Z",["^ "]]]]],["^S",[["^6Z",["^ ","^6[",["^70","^71"],"^72",["^ ","^70","^73","^71","^71"],"^1K","^74"]],["^S",["~$let",["~$tx0",["^S",["~$dict-get","^6Z","tx0"]],"~$schema",["^S",["^70",["^S",["^7:","^6Z","schema"]]]],"~$_",["^S",[["^S",["~$var","~$db/validate-schema"]],"^7;"]],"~$attrs",["^S",["~$->>",["^S",["^7:","^6Z","attrs"]],["^S",["~$mapv","^71"]]]],"~$keywords",["^S",["^7?",["^S",["^7:","^6Z","keywords"]],["^S",["^7@","^71"]]]],"~$eavt",["^S",["^7?",["^S",["^7:","^6Z","eavt"]],["^S",["^O",["^S",["~$fn",["~$arr"],["^S",["^78",["~$e",["^S",["~$array-get","^7D",0]],"~$a",["^S",["~$nth","^7>",["^S",["^7E","^7D",1]]]],"~$v",["^S",["^7E","^7D",2]],"~$v",["^S",["^6B",["^S",["~$number?","~$v"]],"~$v",["^S",["~$string?","~$v"]],"~$v",["^S",["~$boolean?","~$v"]],"~$v",["^S",["^P","~$v"]],["^S",["^78",["~$marker",["^S",["^7E","~$v",0]]],["^S",["~$condp","~$==","^7J","~$marker-kw",["^S",["^7F","^7A",["^S",["^7E","~$v",1]]]],"~$marker-other",["^S",["^70",["^S",["^7E","~$v",1]]]],"^6L","~zINF","~$marker-minus-inf","~z-INF","~$marker-nan","~zNaN",["^S",["^G","Unexpected value marker ","^7J"," in ",["^S",["~$pr-str","~$v"]],["^ ","~:error","~:serialize","~:value","~$v"]]]]]]],true,["^S",["^G","Unexpected value type ",["^S",["~$type","~$v"]]," (",["^S",["^7Q","~$v"]],")",["^ ","^7R","^7S","^7T","~$v"]]]]],"~$tx",["^S",["~$+","^79",["^S",["^7E","^7D",3]]]]],["^S",["~$db/datom","~$e","~$a","~$v","^7V"]]]]]]]]]],"~$aevt",["^S",["~$some->>",["^S",["^7:","^6Z","aevt"]],["^S",["^O",["^S",["~$fn*",["~$p1__22344#"],["^S",["~$arrays/aget","^7B","^7["]]]]]]]],"~$avet",["^S",["^7Y",["^S",["^7:","^6Z","avet"]],["^S",["^O",["^S",["^7Z",["~$p1__22345#"],["^S",["^80","^7B","^82"]]]]]]]],"~$settings",["^S",["~$merge",["^ ","~:branching-factor",["^S",["^7:","^6Z","branching-factor"]],"~:ref-type",["^S",["~$some->",["^S",["^7:","^6Z","ref-type"]],"~$keyword"]]],["^S",["~$select-keys","^74",["^85","^86"]]]]]],["^S",["~$db/restore-db",["^ ","~:schema","^7;","~:eavt",["^S",["~$set/from-sorted-array","~$db/cmp-datoms-eavt","^7B",["^S",["~$arrays/alength","^7B"]],"^83"]],"~:aevt",["^S",["^8=","~$db/cmp-datoms-aevt","^7X",["^S",["^8?","^7X"]],"^83"]],"~:avet",["^S",["^8=","~$db/cmp-datoms-avet","^81",["^S",["^8?","^81"]],"^83"]],"~:max-eid",["^S",["^7:","^6Z","max-eid"]],"~:max-tx",["^S",["^7:","^6Z","max-tx"]]]]]]]]]]]],"^6G",false,"~:methods",[["^ ","^76",1,"^6G",false,"^6S","~$any"],["^ ","^76",2,"^6G",false,"^6S","~$DB"]],"^7",193,"^9",193,"^6J",2,"^6K",true,"^R",["^S",[["^6Z"],["^6Z",["^ ","^6[",["^70","^71"],"^72",["^ ","^70","^73","^71","^71"],"^1K","^74"]]]]],"^7N",["^ ","^5",["^ ","^6","datascript/serialize.cljc","^7",18,"^8",24,"^9",18,"^:",36,"^6;",true,"^6M",true],"^6;",true,"^V","^2F","^6","datascript/serialize.cljc","^:",36,"^6N",["^ ","^10","^6M","^6O",1,"^6P",["^ ","^6Q","^6R"],"^1G",1,"^6S","^6I"],"^8",1,"^64",["^ ","^65","^66","^67",["^S",["^68","^7N",1]]],"^6M",true,"^7",18,"^9",18,"^6S","^6I"],"^O",["^ ","^6:",null,"^5",["^ ","^6","datascript/serialize.cljc","^7",54,"^8",8,"^9",54,"^:",12,"^6;",true,"^R",["^S",["^62",["^S",[["~$f","~$xs"]]]]]],"^6;",true,"^V","^2I","^6","datascript/serialize.cljc","^:",12,"^6>",["^S",[["~$f","^8I"]]],"^6?",null,"^6@",["^S",[null,null]],"^8",1,"^64",["^ ","^65","^66","^67",["^S",["^6A","^O",["~$f","^8I"],["^S",["^78",["^7D",["^S",["~$js/Array.",["^S",["~$count","^8I"]]]]],["^S",["~$reduce",["^S",["^7C",["~$idx","~$x"],["^S",["~$arrays/aset","^7D","^8M",["^S",["~$f","~$x"]]]],["^S",["~$inc","^8M"]]]],0,"^8I"]],"^7D"]]]]],"^6G",false,"^7",54,"^6H","~$js","^9",54,"^6J",2,"^6K",true,"^R",["^S",["^62",["^S",[["~$f","^8I"]]]]]],"^71",["^ ","^6:",null,"^5",["^ ","^6","datascript/serialize.cljc","^7",98,"^8",8,"^9",98,"^:",15,"^6;",true,"^R",["^S",["^62",["^S",[["~$s"]]]]]],"^6;",true,"^V","^2L","^6","datascript/serialize.cljc","^:",15,"^6>",["^S",[["~$s"]]],"^6?",null,"^6@",["^S",[null,null]],"^8",1,"^64",["^ ","^65","^66","^67",["^S",["^6A","^71",["~$s"],["^S",["^6X",["^S",["~$str/starts-with?","~$s",":"]],["^S",["^88",["^S",["~$subs","~$s",1]]]],"~$s"]]]]],"^6G",false,"^7",98,"^6H",["^N",[null,"^2G","~$clj-nil"]],"^9",98,"^6J",1,"^6K",true,"^R",["^S",["^62",["^S",[["~$s"]]]]]],"^7M",["^ ","^5",["^ ","^6","datascript/serialize.cljc","^7",17,"^8",24,"^9",17,"^:",33,"^6;",true,"^6M",true],"^6;",true,"^V","^3:","^6","datascript/serialize.cljc","^:",33,"^6N",["^ ","^10","^6M","^6O",0,"^6P",["^ ","^6Q","^6R"],"^1G",0,"^6S","^6I"],"^8",1,"^64",["^ ","^65","^66","^67",["^S",["^68","^7M",0]]],"^6M",true,"^7",17,"^9",17,"^6S","^6I"],"^7E",["^ ","^6:",null,"^5",["^ ","^6","datascript/serialize.cljc","^7",42,"^8",8,"^9",42,"^:",17,"^6;",true,"^R",["^S",["^62",["^S",[["~$d","~$i"]]]]]],"^6;",true,"^V","^3>","^6","datascript/serialize.cljc","^:",17,"^6>",["^S",[["~$d","~$i"]]],"^6?",null,"^6@",["^S",[null,null]],"^8",1,"^64",["^ ","^65","^66","^67",["^S",["^6A","^7E",["~$d","~$i"],["^S",["^6X",["^S",["^22","~$d"]],["^S",["^80","~$d","~$i"]],["^S",["^7F","~$d","~$i"]]]]]]],"^6G",false,"^7",42,"^6H",["^N",["^8G","^8S"]],"^9",42,"^6J",2,"^6K",true,"^R",["^S",["^62",["^S",[["~$d","~$i"]]]]]],"~$serializable-impl",["^ ","^6:",null,"^5",["^ ","^6","datascript/serialize.cljc","^7",103,"^8",8,"^9",103,"^:",25,"^6;",true,"^R",["^S",["^62",["^S",[["^19",["^ ","^6[",["~$freeze-fn","^61"],"^72",["^ ","^8U","^7Q","^61","^61"]]]]]]],"^U","Serialized structure breakdown:\n\n   count    :: number    \n   tx0      :: number\n   max-eid  :: number\n   max-tx   :: number\n   schema   :: freezed :schema\n   attrs    :: [keywords ...]\n   keywords :: [keywords ...]\n   eavt     :: [[e a-idx v dtx] ...]\n   a-idx    :: index in attrs\n   v        :: (string | number | boolean | [0 <index in keywords>] | [1 <freezed v>])\n   dtx      :: tx - tx0\n   aevt     :: [<index in eavt> ...]\n   avet     :: [<index in eavt> ...]"],"^6;",true,"^V","^3M","^6","datascript/serialize.cljc","^:",25,"^6>",["^S",[["^19","~$p__22335"]]],"^6?",null,"^6@",["^S",[null,null]],"^8",1,"^64",["^ ","^65","^66","^67",["^S",["^6A","^8T","Serialized structure breakdown:\n\n   count    :: number    \n   tx0      :: number\n   max-eid  :: number\n   max-tx   :: number\n   schema   :: freezed :schema\n   attrs    :: [keywords ...]\n   keywords :: [keywords ...]\n   eavt     :: [[e a-idx v dtx] ...]\n   a-idx    :: index in attrs\n   v        :: (string | number | boolean | [0 <index in keywords>] | [1 <freezed v>])\n   dtx      :: tx - tx0\n   aevt     :: [<index in eavt> ...]\n   avet     :: [<index in eavt> ...]",["^19",["^ ","^6[",["^8U","^61"],"^72",["^ ","^8U","^7Q","^61","^61"]]],["^S",["~$when",["^S",["~$storage/storage","^19"]],["^S",["~$throw",["^S",["~$ex-info","serializable doesn't work with databases that have :storage",["^ "]]]]]]],["^S",["^78",["^7>",["^S",["~$all-attrs","^19"]],"~$attrs-map",["^S",["~$into",["^ "],["^S",["~$map","~$vector","^7>",["^S",["~$range"]]]]]],"~$*kws",["^S",["~$volatile!",["^S",["~$transient",[]]]]],"~$*kw-map",["^S",["^96",["^S",["^97",["^ "]]]]],"~$write-kw",["^S",["^7C",["^63"],["^S",["^78",["^8M",["^S",["~$or",["^S",["~$get",["^S",["~$clojure.core/deref","^98"]],"^63"]],["^S",["^78",["^7A",["^S",["~$vswap!","^95","~$conj!","^63"]],"^8M",["^S",["~$dec",["^S",["^8K","^7A"]]]]],["^S",["^9=","^98","~$assoc!","^63","^8M"]],"^8M"]]]]],["^S",["^J","^7M","^8M"]]]]]],"~$write-other",["^S",["^7C",["~$v"],["^S",["^J","^7N",["^S",["^8U","~$v"]]]]]],"~$write-v",["^S",["^7C",["~$v"],["^S",["^6B",["^S",["^7H","~$v"]],"~$v",["^S",["^7G","~$v"]],["^S",["^6B",["^S",["^7L","~zINF","~$v"]],["^S",["^J","^6L"]],["^S",["^7L","~z-INF","~$v"]],["^S",["^J","^7O"]],["^S",["^2[","~$v"]],["^S",["^J","^7P"]],"~:else","~$v"]],["^S",["^7I","~$v"]],"~$v",["^S",["~$keyword?","~$v"]],["^S",["^99","~$v"]],true,["^S",["^9A","~$v"]]]]]],"^7B",["^S",["~$amap-indexed",["^S",["^7C",["^8M","~$d"],["^S",["~$db/datom-set-idx","~$d","^8M"]],["^S",["^78",["~$e",["^S",["~$.-e","~$d"]],"~$a",["^S",["^90",["^S",["^6D","~$d"]]]],"~$v",["^S",["^9B",["^S",["~$.-v","~$d"]]]],"^7V",["^S",["~$-",["^S",["~$.-tx","~$d"]],"~$db/tx0"]]],["^S",["^J","~$e","~$a","~$v","^7V"]]]]]],["^S",["^8<","^19"]]]],"^7X",["^S",["^9E",["^S",["^7C",["~$_","~$d"],["^S",["~$db/datom-get-idx","~$d"]]]],["^S",["^8@","^19"]]]],"^81",["^S",["^9E",["^S",["^7C",["~$_","~$d"],["^S",["^9K","~$d"]]]],["^S",["^8B","^19"]]]],"^7;",["^S",["^8U",["^S",["^8;","^19"]]]],"^7>",["^S",["^O","^61","^7>"]],"~$kws",["^S",["^O","^61",["^S",["~$persistent!",["^S",["^9<","^95"]]]]]]],["^S",["^L","count",["^S",["^8K",["^S",["^8<","^19"]]]],"tx0","^9J","max-eid",["^S",["^8D","^19"]],"max-tx",["^S",["^8E","^19"]],"schema","^7;","attrs","^7>","keywords","^9L","eavt","^7B","aevt","^7X","avet","^81"]]]]]]],"^6G",false,"^7",103,"^6H","^8G","^9",103,"^6J",2,"^6K",true,"^R",["^S",["^62",["^S",[["^19",["^ ","^6[",["^8U","^61"],"^72",["^ ","^8U","^7Q","^61","^61"]]]]]]],"^U","Serialized structure breakdown:\n\n   count    :: number    \n   tx0      :: number\n   max-eid  :: number\n   max-tx   :: number\n   schema   :: freezed :schema\n   attrs    :: [keywords ...]\n   keywords :: [keywords ...]\n   eavt     :: [[e a-idx v dtx] ...]\n   a-idx    :: index in attrs\n   v        :: (string | number | boolean | [0 <index in keywords>] | [1 <freezed v>])\n   dtx      :: tx - tx0\n   aevt     :: [<index in eavt> ...]\n   avet     :: [<index in eavt> ...]"],"^9E",["^ ","^6:",null,"^5",["^ ","^6","datascript/serialize.cljc","^7",64,"^8",8,"^9",64,"^:",20,"^6;",true,"^R",["^S",["^62",["^S",[["~$f","^8I"]]]]]],"^6;",true,"^V","^2R","^6","datascript/serialize.cljc","^:",20,"^6>",["^S",[["~$f","^8I"]]],"^6?",null,"^6@",["^S",[null,null]],"^8",1,"^64",["^ ","^65","^66","^67",["^S",["^6A","^9E",["~$f","^8I"],["^S",["^78",["^7D",["^S",["^8J",["^S",["^8K","^8I"]]]]],["^S",["^8L",["^S",["^7C",["^8M","~$x"],["^S",["^8N","^7D","^8M",["^S",["~$f","^8M","~$x"]]]],["^S",["^8O","^8M"]]]],0,"^8I"]],"^7D"]]]]],"^6G",false,"^7",64,"^6H","^8P","^9",64,"^6J",2,"^6K",true,"^R",["^S",["^62",["^S",[["~$f","^8I"]]]]]],"^7O",["^ ","^5",["^ ","^6","datascript/serialize.cljc","^7",20,"^8",24,"^9",20,"^:",40,"^6;",true,"^6M",true],"^6;",true,"^V","^2Y","^6","datascript/serialize.cljc","^:",40,"^6N",["^ ","^10","^6M","^6O",3,"^6P",["^ ","^6Q","^6R"],"^1G",3,"^6S","^6I"],"^8",1,"^64",["^ ","^65","^66","^67",["^S",["^68","^7O",3]]],"^6M",true,"^7",20,"^9",20,"^6S","^6I"],"^7:",["^ ","^6:",null,"^5",["^ ","^6","datascript/serialize.cljc","^7",46,"^8",8,"^9",46,"^:",16,"^6;",true,"^R",["^S",["^62",["^S",[["~$d","~$k"]]]]]],"^6;",true,"^V","^2W","^6","datascript/serialize.cljc","^:",16,"^6>",["^S",[["~$d","~$k"]]],"^6?",null,"^6@",["^S",[null,null]],"^8",1,"^64",["^ ","^65","^66","^67",["^S",["^6A","^7:",["~$d","~$k"],["^S",["^6X",["^S",["~$map?","~$d"]],["^S",["~$d","~$k"]],["^S",["^80","~$d","~$k"]]]]]]],"^6G",false,"^7",46,"^6H","^8G","^9",46,"^6J",2,"^6K",true,"^R",["^S",["^62",["^S",[["~$d","~$k"]]]]]],"^8[",["^ ","^6:",null,"^5",["^ ","^6","datascript/serialize.cljc","^7",82,"^8",8,"^9",82,"^:",17,"^6;",true,"^R",["^S",["^62",["^S",[["^19"]]]]],"^U","All attrs in a DB, distinct, sorted"],"^6;",true,"^V","^25","^6","datascript/serialize.cljc","^:",17,"^6>",["^S",[["^19"]]],"^6?",null,"^6@",["^S",[null,null]],"^8",1,"^64",["^ ","^65","^66","^67",["^S",["^6A","^8[","All attrs in a DB, distinct, sorted",["^19"],["^S",["^6X",["^S",["~$empty?",["^S",["^8@","^19"]]]],[],["^S",["~$loop",["^7>",["^S",["^97",[["^S",["~:a",["^S",["~$first",["^S",["^8@","^19"]]]]]]]]]],["^S",["^78",["~$attr",["^S",["^7F","^7>",["^S",["^9?",["^S",["^8K","^7>"]]]]]],"~$left",["^S",["^7W",0,"^9R",null]],"~$right",["^S",["^7W","~$db/emax",null,null]],"~$next-attr",["^S",["~:a",["^S",["^9Q",["^S",["~$set/slice",["^S",["^8@","^19"]],"^9S","^9T","^69"]]]]]]],["^S",["^6X",["^S",["~$some?","^9V"]],["^S",["~$recur",["^S",["^9>","^7>","^9V"]]]],["^S",["^9M","^7>"]]]]]]]]]]]]],"^6G",false,"^7",82,"^6H","~$clj","^9",82,"^6J",1,"^6K",true,"^R",["^S",["^62",["^S",[["^19"]]]]],"^U","All attrs in a DB, distinct, sorted"],"^P",["^ ","^6:",null,"^5",["^ ","^6","datascript/serialize.cljc","^7",50,"^8",8,"^9",50,"^:",14,"^6;",true,"^R",["^S",["^62",["^S",[["~$a"]]]]]],"^6;",true,"^V","^31","^6","datascript/serialize.cljc","^:",14,"^6>",["^S",[["~$a"]]],"^6?",null,"^6@",["^S",[null,null]],"^8",1,"^64",["^ ","^65","^66","^67",["^S",["^6A","^P",["~$a"],["^S",["^9:",["^S",["^22","~$a"]],["^S",["~$vector?","~$a"]]]]]]],"^6G",false,"^7",50,"^6H","~$boolean","^9",50,"^6J",1,"^6K",true,"^R",["^S",["^62",["^S",[["~$a"]]]]]],"~$serializable",["^ ","^6:",null,"^5",["^ ","^6","datascript/serialize.cljc","^7",189,"^8",10,"^9",189,"^:",22,"^R",["^S",["^62",["^S",[["^19"],["^19","^74"]]]]],"^75",["^ ","^6G",false,"^76",2,"^6J",2,"^6>",[["^19"],["^19","^74"]],"^R",["^S",[["^19"],["^19","^74"]]],"^6@",["^S",[null,null]]]],"^V","^2?","^6","datascript/serialize.cljc","^:",22,"^75",["^ ","^6G",false,"^76",2,"^6J",2,"^6>",[["^19"],["^19","^74"]],"^R",["^S",[["^19"],["^19","^74"]]],"^6@",["^S",[null,null]]],"^6>",[["^19"],["^19","^74"]],"^6?",null,"^76",2,"^6@",["^S",[null,null]],"^8",4,"^64",["^ ","^65","^66","^67",["^S",["^77","^:1",["^S",[["^19"],["^S",["^8T","^19",["^ "]]]]],["^S",[["^19","^74"],["^S",["^8T","^19","^74"]]]]]]],"^6G",false,"^8F",[["^ ","^76",1,"^6G",false,"^6S","^8G"],["^ ","^76",2,"^6G",false,"^6S","^8G"]],"^7",189,"^9",189,"^6J",2,"^6K",true,"^R",["^S",[["^19"],["^19","^74"]]]],"^7P",["^ ","^5",["^ ","^6","datascript/serialize.cljc","^7",21,"^8",24,"^9",21,"^:",34,"^6;",true,"^6M",true],"^6;",true,"^V","^3;","^6","datascript/serialize.cljc","^:",34,"^6N",["^ ","^10","^6M","^6O",4,"^6P",["^ ","^6Q","^6R"],"^1G",4,"^6S","^6I"],"^8",1,"^64",["^ ","^65","^66","^67",["^S",["^68","^7P",4]]],"^6M",true,"^7",21,"^9",21,"^6S","^6I"]],"^1D",["^ ","^H","^H","^19","^H","^K","^K","^17","^17","^15","^16","^16","^16"],"~:cljs.analyzer/constants",["^ ","^1B",["^N",["^8;","^7S","^8E","^8@","^6;","^9C","^X","^8B","^7;","^V","~:thaw-kw","^85","^7T","^6","^:","^2N","^8D","^86","^8<","^8","^7","~:freeze-fn","^9","^7R","^H","~:freeze-kw","^R","~:thaw-fn","^U","~$validate-schema","~:test","~:a"]],"~:order",["^X","^8@","~:a","^:4","^:5","^9C","^8<","^8B","^8;","^8D","^8E","^:6","^:3","^2N","^6;","^V","^6","^:","^8","^7","^9","^R","^U","^:8","^H","^:7","^7;","^7R","^7T","^7S","^85","^86"]],"^1N",["^ ","^1C",["^N",[]],"^1D",["^N",[]]],"^1O",["^ "],"^1P",["^18","^17","^1=","^1?","^H","^1<","^1:","^14","^16"]],"^X","^K","~:ns-specs",["^ "],"~:ns-spec-vars",["^N",[]],"~:compiler-options",["^3O",[["^:<","~:static-fns"],true,["~:js-options","~:use-babel"],null,["^:<","~:shadow-tweaks"],null,["^:<","~:source-map-inline"],null,["^:<","~:elide-asserts"],false,["^:<","~:optimize-constants"],null,["^:<","^1U"],null,["^:<","~:external-config"],null,["^:<","~:tooling-config"],null,["^:<","~:emit-constants"],null,["^:<","~:load-tests"],null,["^:<","~:form-size-threshold"],null,["^:<","~:global-goog-object&array"],null,["^:<","~:data-readers"],null,["^:<","~:infer-externs"],"~:auto",["^:<","^1W"],null,["^:>","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^:<","~:fn-invoke-direct"],null,["^:<","~:source-map"],"/dev/null"]]]