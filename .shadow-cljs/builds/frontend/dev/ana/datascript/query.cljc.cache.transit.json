["^ ","~:output",["^ ","~:js","goog.provide('datascript.query');\ndatascript.query._STAR_query_cache_STAR_ = datascript.lru.cache((100));\n\n\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ndatascript.query.Context = (function (rels,sources,rules,__meta,__extmap,__hash){\nthis.rels = rels;\nthis.sources = sources;\nthis.rules = rules;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(datascript.query.Context.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__5343__auto__,k__5344__auto__){\nvar self__ = this;\nvar this__5343__auto____$1 = this;\nreturn this__5343__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__5344__auto__,null);\n}));\n\n(datascript.query.Context.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__5345__auto__,k23252,else__5346__auto__){\nvar self__ = this;\nvar this__5345__auto____$1 = this;\nvar G__23256 = k23252;\nvar G__23256__$1 = (((G__23256 instanceof cljs.core.Keyword))?G__23256.fqn:null);\nswitch (G__23256__$1) {\ncase \"rels\":\nreturn self__.rels;\n\nbreak;\ncase \"sources\":\nreturn self__.sources;\n\nbreak;\ncase \"rules\":\nreturn self__.rules;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k23252,else__5346__auto__);\n\n}\n}));\n\n(datascript.query.Context.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__5363__auto__,f__5364__auto__,init__5365__auto__){\nvar self__ = this;\nvar this__5363__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__5366__auto__,p__23257){\nvar vec__23258 = p__23257;\nvar k__5367__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23258,(0),null);\nvar v__5368__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23258,(1),null);\nreturn (f__5364__auto__.cljs$core$IFn$_invoke$arity$3 ? f__5364__auto__.cljs$core$IFn$_invoke$arity$3(ret__5366__auto__,k__5367__auto__,v__5368__auto__) : f__5364__auto__.call(null,ret__5366__auto__,k__5367__auto__,v__5368__auto__));\n}),init__5365__auto__,this__5363__auto____$1);\n}));\n\n(datascript.query.Context.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__5358__auto__,writer__5359__auto__,opts__5360__auto__){\nvar self__ = this;\nvar this__5358__auto____$1 = this;\nvar pr_pair__5361__auto__ = (function (keyval__5362__auto__){\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__5360__auto__,keyval__5362__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,pr_pair__5361__auto__,\"#datascript.query.Context{\",\", \",\"}\",opts__5360__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),self__.rels],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),self__.sources],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366),self__.rules],null))], null),self__.__extmap));\n}));\n\n(datascript.query.Context.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__23251){\nvar self__ = this;\nvar G__23251__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__23251__$1,3,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(datascript.query.Context.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__5341__auto__){\nvar self__ = this;\nvar this__5341__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(datascript.query.Context.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__5338__auto__){\nvar self__ = this;\nvar this__5338__auto____$1 = this;\nreturn (new datascript.query.Context(self__.rels,self__.sources,self__.rules,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(datascript.query.Context.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__5347__auto__){\nvar self__ = this;\nvar this__5347__auto____$1 = this;\nreturn (3 + cljs.core.count(self__.__extmap));\n}));\n\n(datascript.query.Context.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__5339__auto__){\nvar self__ = this;\nvar this__5339__auto____$1 = this;\nvar h__5154__auto__ = self__.__hash;\nif((!((h__5154__auto__ == null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 = (function (coll__5340__auto__){\nreturn (1014232958 ^ cljs.core.hash_unordered_coll(coll__5340__auto__));\n})(this__5339__auto____$1);\n(self__.__hash = h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(datascript.query.Context.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this23253,other23254){\nvar self__ = this;\nvar this23253__$1 = this;\nreturn (((!((other23254 == null)))) && ((((this23253__$1.constructor === other23254.constructor)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this23253__$1.rels,other23254.rels)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this23253__$1.sources,other23254.sources)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this23253__$1.rules,other23254.rules)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this23253__$1.__extmap,other23254.__extmap)))))))))));\n}));\n\n(datascript.query.Context.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__5353__auto__,k__5354__auto__){\nvar self__ = this;\nvar this__5353__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),null,new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366),null,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),null], null), null),k__5354__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__5353__auto____$1),self__.__meta),k__5354__auto__);\n} else {\nreturn (new datascript.query.Context(self__.rels,self__.sources,self__.rules,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__5354__auto__)),null));\n}\n}));\n\n(datascript.query.Context.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (this__5350__auto__,k23252){\nvar self__ = this;\nvar this__5350__auto____$1 = this;\nvar G__23268 = k23252;\nvar G__23268__$1 = (((G__23268 instanceof cljs.core.Keyword))?G__23268.fqn:null);\nswitch (G__23268__$1) {\ncase \"rels\":\ncase \"sources\":\ncase \"rules\":\nreturn true;\n\nbreak;\ndefault:\nreturn cljs.core.contains_QMARK_(self__.__extmap,k23252);\n\n}\n}));\n\n(datascript.query.Context.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__5351__auto__,k__5352__auto__,G__23251){\nvar self__ = this;\nvar this__5351__auto____$1 = this;\nvar pred__23269 = cljs.core.keyword_identical_QMARK_;\nvar expr__23270 = k__5352__auto__;\nif(cljs.core.truth_((pred__23269.cljs$core$IFn$_invoke$arity$2 ? pred__23269.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),expr__23270) : pred__23269.call(null,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),expr__23270)))){\nreturn (new datascript.query.Context(G__23251,self__.sources,self__.rules,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__23269.cljs$core$IFn$_invoke$arity$2 ? pred__23269.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),expr__23270) : pred__23269.call(null,new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),expr__23270)))){\nreturn (new datascript.query.Context(self__.rels,G__23251,self__.rules,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__23269.cljs$core$IFn$_invoke$arity$2 ? pred__23269.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366),expr__23270) : pred__23269.call(null,new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366),expr__23270)))){\nreturn (new datascript.query.Context(self__.rels,self__.sources,G__23251,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new datascript.query.Context(self__.rels,self__.sources,self__.rules,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__5352__auto__,G__23251),null));\n}\n}\n}\n}));\n\n(datascript.query.Context.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__5356__auto__){\nvar self__ = this;\nvar this__5356__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),self__.rels,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),self__.sources,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366),self__.rules,null))], null),self__.__extmap));\n}));\n\n(datascript.query.Context.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__5342__auto__,G__23251){\nvar self__ = this;\nvar this__5342__auto____$1 = this;\nreturn (new datascript.query.Context(self__.rels,self__.sources,self__.rules,G__23251,self__.__extmap,self__.__hash));\n}));\n\n(datascript.query.Context.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__5348__auto__,entry__5349__auto__){\nvar self__ = this;\nvar this__5348__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__5349__auto__)){\nreturn this__5348__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__5349__auto__,(0)),cljs.core._nth(entry__5349__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__5348__auto____$1,entry__5349__auto__);\n}\n}));\n\n(datascript.query.Context.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"rels\",\"rels\",-884248584,null),new cljs.core.Symbol(null,\"sources\",\"sources\",1319365103,null),new cljs.core.Symbol(null,\"rules\",\"rules\",-1455523403,null)], null);\n}));\n\n(datascript.query.Context.cljs$lang$type = true);\n\n(datascript.query.Context.cljs$lang$ctorPrSeq = (function (this__5389__auto__){\nreturn (new cljs.core.List(null,\"datascript.query/Context\",null,(1),null));\n}));\n\n(datascript.query.Context.cljs$lang$ctorPrWriter = (function (this__5389__auto__,writer__5390__auto__){\nreturn cljs.core._write(writer__5390__auto__,\"datascript.query/Context\");\n}));\n\n/**\n * Positional factory function for datascript.query/Context.\n */\ndatascript.query.__GT_Context = (function datascript$query$__GT_Context(rels,sources,rules){\nreturn (new datascript.query.Context(rels,sources,rules,null,null,null));\n});\n\n/**\n * Factory function for datascript.query/Context, taking a map of keywords to field values.\n */\ndatascript.query.map__GT_Context = (function datascript$query$map__GT_Context(G__23255){\nvar extmap__5385__auto__ = (function (){var G__23275 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__23255,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366)], 0));\nif(cljs.core.record_QMARK_(G__23255)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__23275);\n} else {\nreturn G__23275;\n}\n})();\nreturn (new datascript.query.Context(new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(G__23255),new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424).cljs$core$IFn$_invoke$arity$1(G__23255),new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366).cljs$core$IFn$_invoke$arity$1(G__23255),null,cljs.core.not_empty(extmap__5385__auto__),null));\n});\n\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ndatascript.query.Relation = (function (attrs,tuples,__meta,__extmap,__hash){\nthis.attrs = attrs;\nthis.tuples = tuples;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(datascript.query.Relation.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__5343__auto__,k__5344__auto__){\nvar self__ = this;\nvar this__5343__auto____$1 = this;\nreturn this__5343__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__5344__auto__,null);\n}));\n\n(datascript.query.Relation.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__5345__auto__,k23277,else__5346__auto__){\nvar self__ = this;\nvar this__5345__auto____$1 = this;\nvar G__23282 = k23277;\nvar G__23282__$1 = (((G__23282 instanceof cljs.core.Keyword))?G__23282.fqn:null);\nswitch (G__23282__$1) {\ncase \"attrs\":\nreturn self__.attrs;\n\nbreak;\ncase \"tuples\":\nreturn self__.tuples;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k23277,else__5346__auto__);\n\n}\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__5363__auto__,f__5364__auto__,init__5365__auto__){\nvar self__ = this;\nvar this__5363__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__5366__auto__,p__23283){\nvar vec__23284 = p__23283;\nvar k__5367__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23284,(0),null);\nvar v__5368__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23284,(1),null);\nreturn (f__5364__auto__.cljs$core$IFn$_invoke$arity$3 ? f__5364__auto__.cljs$core$IFn$_invoke$arity$3(ret__5366__auto__,k__5367__auto__,v__5368__auto__) : f__5364__auto__.call(null,ret__5366__auto__,k__5367__auto__,v__5368__auto__));\n}),init__5365__auto__,this__5363__auto____$1);\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__5358__auto__,writer__5359__auto__,opts__5360__auto__){\nvar self__ = this;\nvar this__5358__auto____$1 = this;\nvar pr_pair__5361__auto__ = (function (keyval__5362__auto__){\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__5360__auto__,keyval__5362__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,pr_pair__5361__auto__,\"#datascript.query.Relation{\",\", \",\"}\",opts__5360__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713),self__.attrs],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),self__.tuples],null))], null),self__.__extmap));\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__23276){\nvar self__ = this;\nvar G__23276__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__23276__$1,2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713),new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__5341__auto__){\nvar self__ = this;\nvar this__5341__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(datascript.query.Relation.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__5338__auto__){\nvar self__ = this;\nvar this__5338__auto____$1 = this;\nreturn (new datascript.query.Relation(self__.attrs,self__.tuples,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(datascript.query.Relation.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__5347__auto__){\nvar self__ = this;\nvar this__5347__auto____$1 = this;\nreturn (2 + cljs.core.count(self__.__extmap));\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__5339__auto__){\nvar self__ = this;\nvar this__5339__auto____$1 = this;\nvar h__5154__auto__ = self__.__hash;\nif((!((h__5154__auto__ == null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 = (function (coll__5340__auto__){\nreturn (1107093117 ^ cljs.core.hash_unordered_coll(coll__5340__auto__));\n})(this__5339__auto____$1);\n(self__.__hash = h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this23278,other23279){\nvar self__ = this;\nvar this23278__$1 = this;\nreturn (((!((other23279 == null)))) && ((((this23278__$1.constructor === other23279.constructor)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this23278__$1.attrs,other23279.attrs)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this23278__$1.tuples,other23279.tuples)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this23278__$1.__extmap,other23279.__extmap)))))))));\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__5353__auto__,k__5354__auto__){\nvar self__ = this;\nvar this__5353__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),null,new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713),null], null), null),k__5354__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__5353__auto____$1),self__.__meta),k__5354__auto__);\n} else {\nreturn (new datascript.query.Relation(self__.attrs,self__.tuples,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__5354__auto__)),null));\n}\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (this__5350__auto__,k23277){\nvar self__ = this;\nvar this__5350__auto____$1 = this;\nvar G__23290 = k23277;\nvar G__23290__$1 = (((G__23290 instanceof cljs.core.Keyword))?G__23290.fqn:null);\nswitch (G__23290__$1) {\ncase \"attrs\":\ncase \"tuples\":\nreturn true;\n\nbreak;\ndefault:\nreturn cljs.core.contains_QMARK_(self__.__extmap,k23277);\n\n}\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__5351__auto__,k__5352__auto__,G__23276){\nvar self__ = this;\nvar this__5351__auto____$1 = this;\nvar pred__23291 = cljs.core.keyword_identical_QMARK_;\nvar expr__23292 = k__5352__auto__;\nif(cljs.core.truth_((pred__23291.cljs$core$IFn$_invoke$arity$2 ? pred__23291.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713),expr__23292) : pred__23291.call(null,new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713),expr__23292)))){\nreturn (new datascript.query.Relation(G__23276,self__.tuples,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__23291.cljs$core$IFn$_invoke$arity$2 ? pred__23291.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),expr__23292) : pred__23291.call(null,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),expr__23292)))){\nreturn (new datascript.query.Relation(self__.attrs,G__23276,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new datascript.query.Relation(self__.attrs,self__.tuples,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__5352__auto__,G__23276),null));\n}\n}\n}));\n\n(datascript.query.Relation.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__5356__auto__){\nvar self__ = this;\nvar this__5356__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713),self__.attrs,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),self__.tuples,null))], null),self__.__extmap));\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__5342__auto__,G__23276){\nvar self__ = this;\nvar this__5342__auto____$1 = this;\nreturn (new datascript.query.Relation(self__.attrs,self__.tuples,G__23276,self__.__extmap,self__.__hash));\n}));\n\n(datascript.query.Relation.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__5348__auto__,entry__5349__auto__){\nvar self__ = this;\nvar this__5348__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__5349__auto__)){\nreturn this__5348__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__5349__auto__,(0)),cljs.core._nth(entry__5349__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__5348__auto____$1,entry__5349__auto__);\n}\n}));\n\n(datascript.query.Relation.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"attrs\",\"attrs\",-450137186,null),new cljs.core.Symbol(null,\"tuples\",\"tuples\",964498888,null)], null);\n}));\n\n(datascript.query.Relation.cljs$lang$type = true);\n\n(datascript.query.Relation.cljs$lang$ctorPrSeq = (function (this__5389__auto__){\nreturn (new cljs.core.List(null,\"datascript.query/Relation\",null,(1),null));\n}));\n\n(datascript.query.Relation.cljs$lang$ctorPrWriter = (function (this__5389__auto__,writer__5390__auto__){\nreturn cljs.core._write(writer__5390__auto__,\"datascript.query/Relation\");\n}));\n\n/**\n * Positional factory function for datascript.query/Relation.\n */\ndatascript.query.__GT_Relation = (function datascript$query$__GT_Relation(attrs,tuples){\nreturn (new datascript.query.Relation(attrs,tuples,null,null,null));\n});\n\n/**\n * Factory function for datascript.query/Relation, taking a map of keywords to field values.\n */\ndatascript.query.map__GT_Relation = (function datascript$query$map__GT_Relation(G__23280){\nvar extmap__5385__auto__ = (function (){var G__23295 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__23280,new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639)], 0));\nif(cljs.core.record_QMARK_(G__23280)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__23295);\n} else {\nreturn G__23295;\n}\n})();\nreturn (new datascript.query.Relation(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(G__23280),new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(G__23280),null,cljs.core.not_empty(extmap__5385__auto__),null));\n});\n\ndatascript.query.single = (function datascript$query$single(coll){\nif((cljs.core.next(coll) == null)){\n} else {\nthrow (new Error([\"Assert failed: \",\"Expected single element\",\"\\n\",\"(nil? (next coll))\"].join('')));\n}\n\nreturn cljs.core.first(coll);\n});\ndatascript.query.intersect_keys = (function datascript$query$intersect_keys(attrs1,attrs2){\nreturn clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(attrs1)),cljs.core.set(cljs.core.keys(attrs2)));\n});\ndatascript.query.concatv = (function datascript$query$concatv(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___23688 = arguments.length;\nvar i__5770__auto___23689 = (0);\nwhile(true){\nif((i__5770__auto___23689 < len__5769__auto___23688)){\nargs__5775__auto__.push((arguments[i__5770__auto___23689]));\n\nvar G__23690 = (i__5770__auto___23689 + (1));\ni__5770__auto___23689 = G__23690;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((0) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn datascript.query.concatv.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(datascript.query.concatv.cljs$core$IFn$_invoke$arity$variadic = (function (xs){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.cat,xs);\n}));\n\n(datascript.query.concatv.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(datascript.query.concatv.cljs$lang$applyTo = (function (seq23297){\nvar self__5755__auto__ = this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23297));\n}));\n\ndatascript.query.zip = (function datascript$query$zip(var_args){\nvar G__23303 = arguments.length;\nswitch (G__23303) {\ncase 2:\nreturn datascript.query.zip.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ = [];\nvar len__5769__auto___23692 = arguments.length;\nvar i__5770__auto___23693 = (0);\nwhile(true){\nif((i__5770__auto___23693 < len__5769__auto___23692)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___23693]));\n\nvar G__23694 = (i__5770__auto___23693 + (1));\ni__5770__auto___23693 = G__23694;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ = (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn datascript.query.zip.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(datascript.query.zip.cljs$core$IFn$_invoke$arity$2 = (function (a,b){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,a,b);\n}));\n\n(datascript.query.zip.cljs$core$IFn$_invoke$arity$variadic = (function (a,b,rest){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(cljs.core.mapv,cljs.core.vector,a,b,rest);\n}));\n\n/** @this {Function} */\n(datascript.query.zip.cljs$lang$applyTo = (function (seq23300){\nvar G__23301 = cljs.core.first(seq23300);\nvar seq23300__$1 = cljs.core.next(seq23300);\nvar G__23302 = cljs.core.first(seq23300__$1);\nvar seq23300__$2 = cljs.core.next(seq23300__$1);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23301,G__23302,seq23300__$2);\n}));\n\n(datascript.query.zip.cljs$lang$maxFixedArity = (2));\n\ndatascript.query.same_keys_QMARK_ = (function datascript$query$same_keys_QMARK_(a,b){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(a),cljs.core.count(b))) && (((cljs.core.every_QMARK_((function (p1__23305_SHARP_){\nreturn cljs.core.contains_QMARK_(b,p1__23305_SHARP_);\n}),cljs.core.keys(a))) && (cljs.core.every_QMARK_((function (p1__23306_SHARP_){\nreturn cljs.core.contains_QMARK_(b,p1__23306_SHARP_);\n}),cljs.core.keys(a))))));\n});\ndatascript.query.looks_like_QMARK_ = (function datascript$query$looks_like_QMARK_(pattern,form){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null),pattern)){\nreturn true;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null),pattern)){\nreturn cljs.core.sequential_QMARK_(form);\n} else {\nif((pattern instanceof cljs.core.Symbol)){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(form,pattern);\n} else {\nif(cljs.core.sequential_QMARK_(pattern)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.last(pattern),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null))){\nreturn ((cljs.core.sequential_QMARK_(form)) && (cljs.core.every_QMARK_((function (p__23307){\nvar vec__23308 = p__23307;\nvar pattern_el = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23308,(0),null);\nvar form_el = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23308,(1),null);\nreturn (datascript.query.looks_like_QMARK_.cljs$core$IFn$_invoke$arity$2 ? datascript.query.looks_like_QMARK_.cljs$core$IFn$_invoke$arity$2(pattern_el,form_el) : datascript.query.looks_like_QMARK_.call(null,pattern_el,form_el));\n}),cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,cljs.core.butlast(pattern),form))));\n} else {\nreturn ((cljs.core.sequential_QMARK_(form)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(form),cljs.core.count(pattern))) && (cljs.core.every_QMARK_((function (p__23312){\nvar vec__23313 = p__23312;\nvar pattern_el = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23313,(0),null);\nvar form_el = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23313,(1),null);\nreturn (datascript.query.looks_like_QMARK_.cljs$core$IFn$_invoke$arity$2 ? datascript.query.looks_like_QMARK_.cljs$core$IFn$_invoke$arity$2(pattern_el,form_el) : datascript.query.looks_like_QMARK_.call(null,pattern_el,form_el));\n}),cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,pattern,form))))));\n}\n} else {\nreturn (pattern.cljs$core$IFn$_invoke$arity$1 ? pattern.cljs$core$IFn$_invoke$arity$1(form) : pattern.call(null,form));\n\n}\n}\n}\n}\n});\ndatascript.query.source_QMARK_ = (function datascript$query$source_QMARK_(sym){\nreturn (((sym instanceof cljs.core.Symbol)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"$\",cljs.core.first(cljs.core.name(sym)))));\n});\ndatascript.query.free_var_QMARK_ = (function datascript$query$free_var_QMARK_(sym){\nreturn (((sym instanceof cljs.core.Symbol)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"?\",cljs.core.first(cljs.core.name(sym)))));\n});\ndatascript.query.attr_QMARK_ = (function datascript$query$attr_QMARK_(form){\nreturn (((form instanceof cljs.core.Keyword)) || (typeof form === 'string'));\n});\ndatascript.query.lookup_ref_QMARK_ = (function datascript$query$lookup_ref_QMARK_(form){\nreturn datascript.query.looks_like_QMARK_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [datascript.query.attr_QMARK_,new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null)], null),form);\n});\ndatascript.query.join_tuples = (function datascript$query$join_tuples(t1,idxs1,t2,idxs2){\nvar l1 = idxs1.length;\nvar l2 = idxs2.length;\nvar res = me.tonsky.persistent_sorted_set.arrays.make_array((l1 + l2));\nvar n__5636__auto___23697 = l1;\nvar i_23698 = (0);\nwhile(true){\nif((i_23698 < n__5636__auto___23697)){\n(res[i_23698] = (t1[(idxs1[i_23698])]));\n\nvar G__23699 = (i_23698 + (1));\ni_23698 = G__23699;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar n__5636__auto___23700 = l2;\nvar i_23701 = (0);\nwhile(true){\nif((i_23701 < n__5636__auto___23700)){\n(res[(l1 + i_23701)] = (t2[(idxs2[i_23701])]));\n\nvar G__23702 = (i_23701 + (1));\ni_23701 = G__23702;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn res;\n});\ndatascript.query.sum_rel = (function datascript$query$sum_rel(a,b){\nvar map__23319 = a;\nvar map__23319__$1 = cljs.core.__destructure_map(map__23319);\nvar attrs_a = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23319__$1,new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713));\nvar tuples_a = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23319__$1,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639));\nvar map__23320 = b;\nvar map__23320__$1 = cljs.core.__destructure_map(map__23320);\nvar attrs_b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23320__$1,new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713));\nvar tuples_b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23320__$1,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(attrs_a,attrs_b)){\nreturn (new datascript.query.Relation(attrs_a,cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(tuples_a),tuples_b),null,null,null));\n} else {\nif((!(datascript.query.same_keys_QMARK_(attrs_a,attrs_b)))){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Can\\u2019t sum relations with different attrs: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([attrs_a], 0)),\" and \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([attrs_b], 0))].join(''),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"where\",\"query/where\",-1935159429)], null));\n} else {\nif(cljs.core.every_QMARK_(cljs.core.number_QMARK_,cljs.core.vals(attrs_a))){\nvar idxb__GT_idxa = cljs.core.vec((function (){var iter__5523__auto__ = (function datascript$query$sum_rel_$_iter__23321(s__23322){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__23322__$1 = s__23322;\nwhile(true){\nvar temp__5804__auto__ = cljs.core.seq(s__23322__$1);\nif(temp__5804__auto__){\nvar s__23322__$2 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__23322__$2)){\nvar c__5521__auto__ = cljs.core.chunk_first(s__23322__$2);\nvar size__5522__auto__ = cljs.core.count(c__5521__auto__);\nvar b__23324 = cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__23323 = (0);\nwhile(true){\nif((i__23323 < size__5522__auto__)){\nvar vec__23326 = cljs.core._nth(c__5521__auto__,i__23323);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23326,(0),null);\nvar idx_b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23326,(1),null);\ncljs.core.chunk_append(b__23324,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [idx_b,(attrs_a.cljs$core$IFn$_invoke$arity$1 ? attrs_a.cljs$core$IFn$_invoke$arity$1(sym) : attrs_a.call(null,sym))], null));\n\nvar G__23705 = (i__23323 + (1));\ni__23323 = G__23705;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__23324),datascript$query$sum_rel_$_iter__23321(cljs.core.chunk_rest(s__23322__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__23324),null);\n}\n} else {\nvar vec__23329 = cljs.core.first(s__23322__$2);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23329,(0),null);\nvar idx_b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23329,(1),null);\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [idx_b,(attrs_a.cljs$core$IFn$_invoke$arity$1 ? attrs_a.cljs$core$IFn$_invoke$arity$1(sym) : attrs_a.call(null,sym))], null),datascript$query$sum_rel_$_iter__23321(cljs.core.rest(s__23322__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(attrs_b);\n})());\nvar tlen = (cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(cljs.core.max,cljs.core.vals(attrs_a)) + (1));\nvar tuples_SINGLEQUOTE_ = cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc,tuple_b){\nvar tuple_SINGLEQUOTE_ = me.tonsky.persistent_sorted_set.arrays.make_array(tlen);\nvar seq__23333_23706 = cljs.core.seq(idxb__GT_idxa);\nvar chunk__23334_23707 = null;\nvar count__23335_23708 = (0);\nvar i__23336_23709 = (0);\nwhile(true){\nif((i__23336_23709 < count__23335_23708)){\nvar vec__23343_23710 = chunk__23334_23707.cljs$core$IIndexed$_nth$arity$2(null,i__23336_23709);\nvar idx_b_23711 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23343_23710,(0),null);\nvar idx_a_23712 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23343_23710,(1),null);\n(tuple_SINGLEQUOTE_[idx_a_23712] = (tuple_b[idx_b_23711]));\n\n\nvar G__23713 = seq__23333_23706;\nvar G__23714 = chunk__23334_23707;\nvar G__23715 = count__23335_23708;\nvar G__23716 = (i__23336_23709 + (1));\nseq__23333_23706 = G__23713;\nchunk__23334_23707 = G__23714;\ncount__23335_23708 = G__23715;\ni__23336_23709 = G__23716;\ncontinue;\n} else {\nvar temp__5804__auto___23717 = cljs.core.seq(seq__23333_23706);\nif(temp__5804__auto___23717){\nvar seq__23333_23718__$1 = temp__5804__auto___23717;\nif(cljs.core.chunked_seq_QMARK_(seq__23333_23718__$1)){\nvar c__5568__auto___23719 = cljs.core.chunk_first(seq__23333_23718__$1);\nvar G__23720 = cljs.core.chunk_rest(seq__23333_23718__$1);\nvar G__23721 = c__5568__auto___23719;\nvar G__23722 = cljs.core.count(c__5568__auto___23719);\nvar G__23723 = (0);\nseq__23333_23706 = G__23720;\nchunk__23334_23707 = G__23721;\ncount__23335_23708 = G__23722;\ni__23336_23709 = G__23723;\ncontinue;\n} else {\nvar vec__23346_23724 = cljs.core.first(seq__23333_23718__$1);\nvar idx_b_23725 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23346_23724,(0),null);\nvar idx_a_23726 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23346_23724,(1),null);\n(tuple_SINGLEQUOTE_[idx_a_23726] = (tuple_b[idx_b_23725]));\n\n\nvar G__23727 = cljs.core.next(seq__23333_23718__$1);\nvar G__23728 = null;\nvar G__23729 = (0);\nvar G__23730 = (0);\nseq__23333_23706 = G__23727;\nchunk__23334_23707 = G__23728;\ncount__23335_23708 = G__23729;\ni__23336_23709 = G__23730;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(acc,tuple_SINGLEQUOTE_);\n}),cljs.core.transient$(cljs.core.vec(tuples_a)),tuples_b));\nreturn (new datascript.query.Relation(attrs_a,tuples_SINGLEQUOTE_,null,null,null));\n} else {\nvar all_attrs = cljs.core.zipmap(cljs.core.keys(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([attrs_a,attrs_b], 0))),cljs.core.range.cljs$core$IFn$_invoke$arity$0());\nvar G__23350 = (function (){var G__23352 = (new datascript.query.Relation(all_attrs,cljs.core.PersistentVector.EMPTY,null,null,null));\nvar G__23353 = a;\nreturn (datascript.query.sum_rel.cljs$core$IFn$_invoke$arity$2 ? datascript.query.sum_rel.cljs$core$IFn$_invoke$arity$2(G__23352,G__23353) : datascript.query.sum_rel.call(null,G__23352,G__23353));\n})();\nvar G__23351 = b;\nreturn (datascript.query.sum_rel.cljs$core$IFn$_invoke$arity$2 ? datascript.query.sum_rel.cljs$core$IFn$_invoke$arity$2(G__23350,G__23351) : datascript.query.sum_rel.call(null,G__23350,G__23351));\n\n}\n}\n}\n});\ndatascript.query.prod_rel = (function datascript$query$prod_rel(var_args){\nvar G__23356 = arguments.length;\nswitch (G__23356) {\ncase 0:\nreturn datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 2:\nreturn datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn (new datascript.query.Relation(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [me.tonsky.persistent_sorted_set.arrays.make_array((0))], null),null,null,null));\n}));\n\n(datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$2 = (function (rel1,rel2){\nvar attrs1 = cljs.core.keys(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel1));\nvar attrs2 = cljs.core.keys(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel2));\nvar idxs1 = cljs.core.to_array(cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel1),attrs1));\nvar idxs2 = cljs.core.to_array(cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel2),attrs2));\nreturn (new datascript.query.Relation(cljs.core.zipmap(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(attrs1,attrs2),cljs.core.range.cljs$core$IFn$_invoke$arity$0()),cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc,t1){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc__$1,t2){\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(acc__$1,datascript.query.join_tuples(t1,idxs1,t2,idxs2));\n}),acc,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(rel2));\n}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(rel1))),null,null,null));\n}));\n\n(datascript.query.prod_rel.cljs$lang$maxFixedArity = 2);\n\ndatascript.query.parse_rules = (function datascript$query$parse_rules(rules){\nvar rules__$1 = ((typeof rules === 'string')?cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1(rules):rules);\ndatascript.parser.parse_rules(rules__$1);\n\nreturn cljs.core.group_by(cljs.core.ffirst,rules__$1);\n});\ndatascript.query.empty_rel = (function datascript$query$empty_rel(binding){\nvar vars = cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"symbol\",\"symbol\",-1038572696),datascript.parser.collect_vars_distinct(binding));\nreturn (new datascript.query.Relation(cljs.core.zipmap(vars,cljs.core.range.cljs$core$IFn$_invoke$arity$0()),cljs.core.PersistentVector.EMPTY,null,null,null));\n});\n\n/**\n * @interface\n */\ndatascript.query.IBinding = function(){};\n\nvar datascript$query$IBinding$in__GT_rel$dyn_23734 = (function (binding,value){\nvar x__5393__auto__ = (((binding == null))?null:binding);\nvar m__5394__auto__ = (datascript.query.in__GT_rel[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ == null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(binding,value) : m__5394__auto__.call(null,binding,value));\n} else {\nvar m__5392__auto__ = (datascript.query.in__GT_rel[\"_\"]);\nif((!((m__5392__auto__ == null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(binding,value) : m__5392__auto__.call(null,binding,value));\n} else {\nthrow cljs.core.missing_protocol(\"IBinding.in->rel\",binding);\n}\n}\n});\ndatascript.query.in__GT_rel = (function datascript$query$in__GT_rel(binding,value){\nif((((!((binding == null)))) && ((!((binding.datascript$query$IBinding$in__GT_rel$arity$2 == null)))))){\nreturn binding.datascript$query$IBinding$in__GT_rel$arity$2(binding,value);\n} else {\nreturn datascript$query$IBinding$in__GT_rel$dyn_23734(binding,value);\n}\n});\n\n(datascript.parser.BindIgnore.prototype.datascript$query$IBinding$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.BindIgnore.prototype.datascript$query$IBinding$in__GT_rel$arity$2 = (function (_,___$1){\nvar ___$2 = this;\nreturn datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$0();\n}));\n\n(datascript.parser.BindScalar.prototype.datascript$query$IBinding$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.BindScalar.prototype.datascript$query$IBinding$in__GT_rel$arity$2 = (function (binding,value){\nvar binding__$1 = this;\nreturn (new datascript.query.Relation(cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(binding__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"variable\",\"variable\",-281346492),new cljs.core.Keyword(null,\"symbol\",\"symbol\",-1038572696)], null)),(0)]),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null))], null),null,null,null));\n}));\n\n(datascript.parser.BindColl.prototype.datascript$query$IBinding$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.BindColl.prototype.datascript$query$IBinding$in__GT_rel$arity$2 = (function (binding,coll){\nvar binding__$1 = this;\nif((!(datascript.db.seqable_QMARK_(coll)))){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Cannot bind value \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([coll], 0)),\" to collection \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([datascript.parser.source(binding__$1)], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"binding\",\"query/binding\",698240489),new cljs.core.Keyword(null,\"value\",\"value\",305978217),coll,new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),datascript.parser.source(binding__$1)], null));\n} else {\nif(cljs.core.empty_QMARK_(coll)){\nreturn datascript.query.empty_rel(binding__$1);\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.sum_rel,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__23360_SHARP_){\nreturn datascript.query.in__GT_rel(binding__$1.binding,p1__23360_SHARP_);\n}),coll));\n\n}\n}\n}));\n\n(datascript.parser.BindTuple.prototype.datascript$query$IBinding$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.BindTuple.prototype.datascript$query$IBinding$in__GT_rel$arity$2 = (function (binding,coll){\nvar binding__$1 = this;\nif((!(datascript.db.seqable_QMARK_(coll)))){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Cannot bind value \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([coll], 0)),\" to tuple \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([datascript.parser.source(binding__$1)], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"binding\",\"query/binding\",698240489),new cljs.core.Keyword(null,\"value\",\"value\",305978217),coll,new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),datascript.parser.source(binding__$1)], null));\n} else {\nif((cljs.core.count(coll) < cljs.core.count(binding__$1.bindings))){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Not enough elements in a collection \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([coll], 0)),\" to bind tuple \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([datascript.parser.source(binding__$1)], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"binding\",\"query/binding\",698240489),new cljs.core.Keyword(null,\"value\",\"value\",305978217),coll,new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),datascript.parser.source(binding__$1)], null));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.prod_rel,cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (p1__23361_SHARP_,p2__23362_SHARP_){\nreturn datascript.query.in__GT_rel(p1__23361_SHARP_,p2__23362_SHARP_);\n}),binding__$1.bindings,coll));\n\n}\n}\n}));\ndatascript.query.resolve_in = (function datascript$query$resolve_in(context,p__23366){\nvar vec__23367 = p__23366;\nvar binding = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23367,(0),null);\nvar value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23367,(1),null);\nif((((binding instanceof datascript.parser.BindScalar)) && ((new cljs.core.Keyword(null,\"variable\",\"variable\",-281346492).cljs$core$IFn$_invoke$arity$1(binding) instanceof datascript.parser.SrcVar)))){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$5(context,new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),cljs.core.assoc,cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(binding,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"variable\",\"variable\",-281346492),new cljs.core.Keyword(null,\"symbol\",\"symbol\",-1038572696)], null)),value);\n} else {\nif((((binding instanceof datascript.parser.BindScalar)) && ((new cljs.core.Keyword(null,\"variable\",\"variable\",-281346492).cljs$core$IFn$_invoke$arity$1(binding) instanceof datascript.parser.RulesVar)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366),datascript.query.parse_rules(value));\n} else {\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(context,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),cljs.core.conj,datascript.query.in__GT_rel(binding,value));\n\n}\n}\n});\ndatascript.query.resolve_ins = (function datascript$query$resolve_ins(context,bindings,values){\nvar cb = cljs.core.count(bindings);\nvar cv = cljs.core.count(values);\nif((cb < cv)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Extra inputs passed, expected: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__23370_SHARP_){\nreturn new cljs.core.Keyword(null,\"source\",\"source\",-433931539).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__23370_SHARP_));\n}),bindings)], 0)),\", got: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cv], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"inputs\",\"query/inputs\",1042810394),new cljs.core.Keyword(null,\"expected\",\"expected\",1583670997),bindings,new cljs.core.Keyword(null,\"got\",\"got\",-1674745710),values], null));\n} else {\nif((cb > cv)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Too few inputs passed, expected: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__23371_SHARP_){\nreturn new cljs.core.Keyword(null,\"source\",\"source\",-433931539).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__23371_SHARP_));\n}),bindings)], 0)),\", got: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cv], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"inputs\",\"query/inputs\",1042810394),new cljs.core.Keyword(null,\"expected\",\"expected\",1583670997),bindings,new cljs.core.Keyword(null,\"got\",\"got\",-1674745710),values], null));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(datascript.query.resolve_in,context,cljs.core.zipmap(bindings,values));\n\n}\n}\n});\n/**\n * List of symbols in current pattern that might potentiall be resolved to refs\n */\ndatascript.query._STAR_lookup_attrs_STAR_ = null;\n/**\n * Default pattern source. Lookup refs, patterns, rules will be resolved with it\n */\ndatascript.query._STAR_implicit_source_STAR_ = null;\ndatascript.query.getter_fn = (function datascript$query$getter_fn(attrs,attr){\nvar idx = (attrs.cljs$core$IFn$_invoke$arity$1 ? attrs.cljs$core$IFn$_invoke$arity$1(attr) : attrs.call(null,attr));\nif(cljs.core.contains_QMARK_(datascript.query._STAR_lookup_attrs_STAR_,attr)){\nif(cljs.core.int_QMARK_(idx)){\nvar idx__$1 = (idx | (0));\nreturn (function datascript$query$getter_fn_$_contained_int_getter_fn(tuple){\nvar eid = (tuple[idx__$1]);\nif(typeof eid === 'number'){\nreturn eid;\n} else {\nif(cljs.core.sequential_QMARK_(eid)){\nreturn datascript.db.entid(datascript.query._STAR_implicit_source_STAR_,eid);\n} else {\nif(me.tonsky.persistent_sorted_set.arrays.array_QMARK_(eid)){\nreturn datascript.db.entid(datascript.query._STAR_implicit_source_STAR_,eid);\n} else {\nreturn eid;\n\n}\n}\n}\n});\n} else {\nreturn (function datascript$query$getter_fn_$_contained_getter_fn(tuple){\nvar eid = (tuple[idx]);\nif(typeof eid === 'number'){\nreturn eid;\n} else {\nif(cljs.core.sequential_QMARK_(eid)){\nreturn datascript.db.entid(datascript.query._STAR_implicit_source_STAR_,eid);\n} else {\nif(me.tonsky.persistent_sorted_set.arrays.array_QMARK_(eid)){\nreturn datascript.db.entid(datascript.query._STAR_implicit_source_STAR_,eid);\n} else {\nreturn eid;\n\n}\n}\n}\n});\n}\n} else {\nif(cljs.core.int_QMARK_(idx)){\nvar idx__$1 = (idx | (0));\nreturn (function datascript$query$getter_fn_$_int_getter(tuple){\nreturn (tuple[idx__$1]);\n});\n} else {\nreturn (function datascript$query$getter_fn_$_getter(tuple){\nreturn (tuple[idx]);\n});\n}\n}\n});\ndatascript.query.tuple_key_fn = (function datascript$query$tuple_key_fn(attrs,common_attrs){\nvar n = cljs.core.count(common_attrs);\nif((n === (1))){\nreturn datascript.query.getter_fn(attrs,cljs.core.first(common_attrs));\n} else {\nvar getters_arr = cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(common_attrs);\nvar i = (0);\nwhile(true){\nif((i < n)){\n(getters_arr[i] = datascript.query.getter_fn(attrs,(getters_arr[i])));\n\nvar G__23737 = (i + (1));\ni = G__23737;\ncontinue;\n} else {\nreturn ((function (i,getters_arr,n){\nreturn (function (tuple){\nreturn cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(getters_arr.map(((function (i,getters_arr,n){\nreturn (function (p1__23376_SHARP_){\nreturn (p1__23376_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23376_SHARP_.cljs$core$IFn$_invoke$arity$1(tuple) : p1__23376_SHARP_.call(null,tuple));\n});})(i,getters_arr,n))\n));\n});\n;})(i,getters_arr,n))\n}\nbreak;\n}\n}\n});\ndatascript.query._group_by = (function datascript$query$_group_by(f,init,coll){\nreturn cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){\nvar k = (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null,x));\nreturn cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,init),x));\n}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));\n});\ndatascript.query.hash_attrs = (function datascript$query$hash_attrs(key_fn,tuples){\nreturn datascript.query._group_by(key_fn,cljs.core.List.EMPTY,tuples);\n});\ndatascript.query.hash_join = (function datascript$query$hash_join(rel1,rel2){\nvar tuples1 = new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(rel1);\nvar tuples2 = new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(rel2);\nvar attrs1 = new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel1);\nvar attrs2 = new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel2);\nvar common_attrs = cljs.core.vec(datascript.query.intersect_keys(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel1),new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel2)));\nvar keep_attrs1 = cljs.core.keys(attrs1);\nvar keep_attrs2 = cljs.core.persistent_BANG_(cljs.core.reduce_kv((function datascript$query$hash_join_$_keeper(vec,k,_){\nif(cljs.core.truth_((attrs1.cljs$core$IFn$_invoke$arity$1 ? attrs1.cljs$core$IFn$_invoke$arity$1(k) : attrs1.call(null,k)))){\nreturn vec;\n} else {\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(vec,k);\n}\n}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),attrs2));\nvar keep_idxs1 = cljs.core.to_array(cljs.core.vals(attrs1));\nvar keep_idxs2 = cljs.core.to_array(cljs.core.__GT_Eduction(cljs.core.map.cljs$core$IFn$_invoke$arity$1(attrs2),keep_attrs2));\nvar key_fn1 = datascript.query.tuple_key_fn(attrs1,common_attrs);\nvar key_fn2 = datascript.query.tuple_key_fn(attrs2,common_attrs);\nvar hash = datascript.query.hash_attrs(key_fn1,tuples1);\nvar new_tuples = cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function datascript$query$hash_join_$_outer(acc,tuple2){\nvar key = key_fn2(tuple2);\nvar temp__5806__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(hash,key);\nif((temp__5806__auto__ == null)){\nreturn acc;\n} else {\nvar tuples1__$1 = temp__5806__auto__;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function datascript$query$hash_join_$_outer_$_inner(acc__$1,tuple1){\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(acc__$1,datascript.query.join_tuples(tuple1,keep_idxs1,tuple2,keep_idxs2));\n}),acc,tuples1__$1);\n}\n}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),tuples2));\nreturn (new datascript.query.Relation(cljs.core.zipmap(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(keep_attrs1,keep_attrs2),cljs.core.range.cljs$core$IFn$_invoke$arity$0()),new_tuples,null,null,null));\n});\ndatascript.query.subtract_rel = (function datascript$query$subtract_rel(a,b){\nvar map__23380 = a;\nvar map__23380__$1 = cljs.core.__destructure_map(map__23380);\nvar attrs_a = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23380__$1,new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713));\nvar tuples_a = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23380__$1,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639));\nvar map__23381 = b;\nvar map__23381__$1 = cljs.core.__destructure_map(map__23381);\nvar attrs_b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23381__$1,new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713));\nvar tuples_b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23381__$1,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639));\nvar attrs = cljs.core.vec(datascript.query.intersect_keys(attrs_a,attrs_b));\nvar key_fn_b = datascript.query.tuple_key_fn(attrs_b,attrs);\nvar hash = datascript.query.hash_attrs(key_fn_b,tuples_b);\nvar key_fn_a = datascript.query.tuple_key_fn(attrs_a,attrs);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),cljs.core.filterv((function (p1__23379_SHARP_){\nreturn ((function (){var G__23382 = key_fn_a(p1__23379_SHARP_);\nreturn (hash.cljs$core$IFn$_invoke$arity$1 ? hash.cljs$core$IFn$_invoke$arity$1(G__23382) : hash.call(null,G__23382));\n})() == null);\n}),tuples_a));\n});\ndatascript.query.lookup_pattern_db = (function datascript$query$lookup_pattern_db(db,pattern){\nvar search_pattern = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__23383_SHARP_){\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p1__23383_SHARP_,new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null))) || (datascript.query.free_var_QMARK_(p1__23383_SHARP_)))){\nreturn null;\n} else {\nreturn p1__23383_SHARP_;\n}\n}),pattern);\nvar datoms = datascript.db._search(db,search_pattern);\nvar attr__GT_prop = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__23384){\nvar vec__23385 = p__23384;\nvar s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23385,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23385,(1),null);\nreturn datascript.query.free_var_QMARK_(s);\n}),cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,pattern,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"e\",\"a\",\"v\",\"tx\"], null))));\nreturn (new datascript.query.Relation(attr__GT_prop,datoms,null,null,null));\n});\ndatascript.query.matches_pattern_QMARK_ = (function datascript$query$matches_pattern_QMARK_(pattern,tuple){\nvar tuple__$1 = tuple;\nvar pattern__$1 = pattern;\nwhile(true){\nif(cljs.core.truth_((function (){var and__5043__auto__ = tuple__$1;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn pattern__$1;\n} else {\nreturn and__5043__auto__;\n}\n})())){\nvar t = cljs.core.first(tuple__$1);\nvar p = cljs.core.first(pattern__$1);\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p,new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null))) || (((datascript.query.free_var_QMARK_(p)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(t,p)))))){\nvar G__23739 = cljs.core.next(tuple__$1);\nvar G__23740 = cljs.core.next(pattern__$1);\ntuple__$1 = G__23739;\npattern__$1 = G__23740;\ncontinue;\n} else {\nreturn false;\n}\n} else {\nreturn true;\n}\nbreak;\n}\n});\ndatascript.query.lookup_pattern_coll = (function datascript$query$lookup_pattern_coll(coll,pattern){\nvar data = cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__23389_SHARP_){\nreturn datascript.query.matches_pattern_QMARK_(pattern,p1__23389_SHARP_);\n}),coll);\nvar attr__GT_idx = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__23390){\nvar vec__23391 = p__23390;\nvar s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23391,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23391,(1),null);\nreturn datascript.query.free_var_QMARK_(s);\n}),cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,pattern,cljs.core.range.cljs$core$IFn$_invoke$arity$0())));\nreturn (new datascript.query.Relation(attr__GT_idx,cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.to_array,data),null,null,null));\n});\ndatascript.query.normalize_pattern_clause = (function datascript$query$normalize_pattern_clause(clause){\nif(datascript.query.source_QMARK_(cljs.core.first(clause))){\nreturn clause;\n} else {\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"$\",\"$\",-1580747756,null)], null),clause);\n}\n});\ndatascript.query.lookup_pattern = (function datascript$query$lookup_pattern(source,pattern){\nif((((!((source == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === source.datascript$db$ISearch$))))?true:(((!source.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(datascript.db.ISearch,source):false)):cljs.core.native_satisfies_QMARK_(datascript.db.ISearch,source))){\nreturn datascript.query.lookup_pattern_db(source,pattern);\n} else {\nreturn datascript.query.lookup_pattern_coll(source,pattern);\n\n}\n});\ndatascript.query.collapse_rels = (function datascript$query$collapse_rels(rels,new_rel){\nvar rels__$1 = rels;\nvar new_rel__$1 = new_rel;\nvar acc = cljs.core.PersistentVector.EMPTY;\nwhile(true){\nvar temp__5806__auto__ = cljs.core.first(rels__$1);\nif((temp__5806__auto__ == null)){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,new_rel__$1);\n} else {\nvar rel = temp__5806__auto__;\nif(cljs.core.truth_(cljs.core.not_empty(datascript.query.intersect_keys(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(new_rel__$1),new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel))))){\nvar G__23743 = cljs.core.next(rels__$1);\nvar G__23744 = datascript.query.hash_join(rel,new_rel__$1);\nvar G__23745 = acc;\nrels__$1 = G__23743;\nnew_rel__$1 = G__23744;\nacc = G__23745;\ncontinue;\n} else {\nvar G__23746 = cljs.core.next(rels__$1);\nvar G__23747 = new_rel__$1;\nvar G__23748 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,rel);\nrels__$1 = G__23746;\nnew_rel__$1 = G__23747;\nacc = G__23748;\ncontinue;\n}\n}\nbreak;\n}\n});\ndatascript.query.rel_with_attr = (function datascript$query$rel_with_attr(context,sym){\nreturn cljs.core.some((function (p1__23398_SHARP_){\nif(cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(p1__23398_SHARP_),sym)){\nreturn p1__23398_SHARP_;\n} else {\nreturn null;\n}\n}),new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context));\n});\ndatascript.query.context_resolve_val = (function datascript$query$context_resolve_val(context,sym){\nvar temp__5808__auto__ = datascript.query.rel_with_attr(context,sym);\nif((temp__5808__auto__ == null)){\nreturn null;\n} else {\nvar rel = temp__5808__auto__;\nvar temp__5808__auto____$1 = cljs.core.first(new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(rel));\nif((temp__5808__auto____$1 == null)){\nreturn null;\n} else {\nvar tuple = temp__5808__auto____$1;\nreturn (tuple[(function (){var fexpr__23400 = new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel);\nreturn (fexpr__23400.cljs$core$IFn$_invoke$arity$1 ? fexpr__23400.cljs$core$IFn$_invoke$arity$1(sym) : fexpr__23400.call(null,sym));\n})()]);\n}\n}\n});\ndatascript.query.rel_contains_attrs_QMARK_ = (function datascript$query$rel_contains_attrs_QMARK_(rel,attrs){\nreturn cljs.core.some((function (p1__23401_SHARP_){\nreturn cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel),p1__23401_SHARP_);\n}),attrs);\n});\ndatascript.query.rel_prod_by_attrs = (function datascript$query$rel_prod_by_attrs(context,attrs){\nvar rels = cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__23402_SHARP_){\nreturn datascript.query.rel_contains_attrs_QMARK_(p1__23402_SHARP_,attrs);\n}),new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context));\nvar production = cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.prod_rel,rels);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.update.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),(function (p1__23403_SHARP_){\nreturn cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.set(rels),p1__23403_SHARP_);\n})),production], null);\n});\ndatascript.query._call_fn = (function datascript$query$_call_fn(context,rel,f,args){\nvar sources = new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424).cljs$core$IFn$_invoke$arity$1(context);\nvar attrs = new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel);\nvar len = cljs.core.count(args);\nvar static_args = me.tonsky.persistent_sorted_set.arrays.make_array(len);\nvar tuples_args = me.tonsky.persistent_sorted_set.arrays.make_array(len);\nvar n__5636__auto___23751 = len;\nvar i_23752 = (0);\nwhile(true){\nif((i_23752 < n__5636__auto___23751)){\nvar arg_23753 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(args,i_23752);\nif((arg_23753 instanceof cljs.core.Symbol)){\nvar temp__5806__auto___23754 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(sources,arg_23753);\nif((temp__5806__auto___23754 == null)){\n(tuples_args[i_23752] = cljs.core.get.cljs$core$IFn$_invoke$arity$2(attrs,arg_23753));\n} else {\nvar source_23755 = temp__5806__auto___23754;\n(static_args[i_23752] = source_23755);\n}\n} else {\n(static_args[i_23752] = arg_23753);\n}\n\nvar G__23756 = (i_23752 + (1));\ni_23752 = G__23756;\ncontinue;\n} else {\n}\nbreak;\n}\n\nif((f === cljs.core.vector)){\nreturn (function (tuple){\nvar args__$1 = me.tonsky.persistent_sorted_set.arrays.aclone(static_args);\nvar n__5636__auto___23757 = len;\nvar i_23758 = (0);\nwhile(true){\nif((i_23758 < n__5636__auto___23757)){\nvar temp__5808__auto___23759 = (tuples_args[i_23758]);\nif((temp__5808__auto___23759 == null)){\n} else {\nvar tuple_idx_23760 = temp__5808__auto___23759;\nvar v_23761 = (tuple[tuple_idx_23760]);\n(args__$1[i_23758] = v_23761);\n}\n\nvar G__23762 = (i_23758 + (1));\ni_23758 = G__23762;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args__$1);\n});\n} else {\nreturn (function (tuple){\nvar n__5636__auto___23763 = len;\nvar i_23764 = (0);\nwhile(true){\nif((i_23764 < n__5636__auto___23763)){\nvar temp__5808__auto___23765 = (tuples_args[i_23764]);\nif((temp__5808__auto___23765 == null)){\n} else {\nvar tuple_idx_23766 = temp__5808__auto___23765;\nvar v_23767 = (tuple[tuple_idx_23766]);\n(static_args[i_23764] = v_23767);\n}\n\nvar G__23768 = (i_23764 + (1));\ni_23764 = G__23768;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,static_args);\n});\n}\n});\ndatascript.query.resolve_sym = (function datascript$query$resolve_sym(sym){\nreturn null;\n});\ndatascript.query.filter_by_pred = (function datascript$query$filter_by_pred(context,clause){\nvar vec__23408 = clause;\nvar vec__23411 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23408,(0),null);\nvar seq__23412 = cljs.core.seq(vec__23411);\nvar first__23413 = cljs.core.first(seq__23412);\nvar seq__23412__$1 = cljs.core.next(seq__23412);\nvar f = first__23413;\nvar args = seq__23412__$1;\nvar pred = (function (){var or__5045__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(datascript.built_ins.query_fns,f);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 = datascript.query.context_resolve_val(context,f);\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nvar or__5045__auto____$2 = datascript.query.resolve_sym(f);\nif(cljs.core.truth_(or__5045__auto____$2)){\nreturn or__5045__auto____$2;\n} else {\nif((datascript.query.rel_with_attr(context,f) == null)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Unknown predicate '\",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0)),\" in \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([clause], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"where\",\"query/where\",-1935159429),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),clause,new cljs.core.Keyword(null,\"var\",\"var\",-769682797),f], null));\n} else {\nreturn null;\n}\n}\n}\n}\n})();\nvar vec__23414 = datascript.query.rel_prod_by_attrs(context,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol_QMARK_,args));\nvar context__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23414,(0),null);\nvar production = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23414,(1),null);\nvar new_rel = (cljs.core.truth_(pred)?(function (){var tuple_pred = datascript.query._call_fn(context__$1,production,pred,args);\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(production,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),(function (p1__23407_SHARP_){\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2(tuple_pred,p1__23407_SHARP_);\n}));\n})():cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(production,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),cljs.core.PersistentVector.EMPTY));\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(context__$1,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),cljs.core.conj,new_rel);\n});\ndatascript.query.bind_by_fn = (function datascript$query$bind_by_fn(context,clause){\nvar vec__23419 = clause;\nvar vec__23422 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23419,(0),null);\nvar seq__23423 = cljs.core.seq(vec__23422);\nvar first__23424 = cljs.core.first(seq__23423);\nvar seq__23423__$1 = cljs.core.next(seq__23423);\nvar f = first__23424;\nvar args = seq__23423__$1;\nvar out = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23419,(1),null);\nvar binding = datascript.parser.parse_binding(out);\nvar fun = (function (){var or__5045__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(datascript.built_ins.query_fns,f);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 = datascript.query.context_resolve_val(context,f);\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nvar or__5045__auto____$2 = datascript.query.resolve_sym(f);\nif(cljs.core.truth_(or__5045__auto____$2)){\nreturn or__5045__auto____$2;\n} else {\nif((datascript.query.rel_with_attr(context,f) == null)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Unknown function '\",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0)),\" in \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([clause], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"where\",\"query/where\",-1935159429),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),clause,new cljs.core.Keyword(null,\"var\",\"var\",-769682797),f], null));\n} else {\nreturn null;\n}\n}\n}\n}\n})();\nvar vec__23425 = datascript.query.rel_prod_by_attrs(context,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol_QMARK_,args));\nvar context__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23425,(0),null);\nvar production = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23425,(1),null);\nvar new_rel = (cljs.core.truth_(fun)?(function (){var tuple_fn = datascript.query._call_fn(context__$1,production,fun,args);\nvar rels = (function (){var iter__5523__auto__ = (function datascript$query$bind_by_fn_$_iter__23429(s__23430){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__23430__$1 = s__23430;\nwhile(true){\nvar temp__5804__auto__ = cljs.core.seq(s__23430__$1);\nif(temp__5804__auto__){\nvar s__23430__$2 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__23430__$2)){\nvar c__5521__auto__ = cljs.core.chunk_first(s__23430__$2);\nvar size__5522__auto__ = cljs.core.count(c__5521__auto__);\nvar b__23432 = cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__23431 = (0);\nwhile(true){\nif((i__23431 < size__5522__auto__)){\nvar tuple = cljs.core._nth(c__5521__auto__,i__23431);\nvar val = tuple_fn(tuple);\nif((!((val == null)))){\ncljs.core.chunk_append(b__23432,datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$2((new datascript.query.Relation(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(production),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [tuple], null),null,null,null)),datascript.query.in__GT_rel(binding,val)));\n\nvar G__23783 = (i__23431 + (1));\ni__23431 = G__23783;\ncontinue;\n} else {\nvar G__23787 = (i__23431 + (1));\ni__23431 = G__23787;\ncontinue;\n}\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__23432),datascript$query$bind_by_fn_$_iter__23429(cljs.core.chunk_rest(s__23430__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__23432),null);\n}\n} else {\nvar tuple = cljs.core.first(s__23430__$2);\nvar val = tuple_fn(tuple);\nif((!((val == null)))){\nreturn cljs.core.cons(datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$2((new datascript.query.Relation(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(production),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [tuple], null),null,null,null)),datascript.query.in__GT_rel(binding,val)),datascript$query$bind_by_fn_$_iter__23429(cljs.core.rest(s__23430__$2)));\n} else {\nvar G__23788 = cljs.core.rest(s__23430__$2);\ns__23430__$1 = G__23788;\ncontinue;\n}\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(production));\n})();\nif(cljs.core.empty_QMARK_(rels)){\nreturn datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$2(production,datascript.query.empty_rel(binding));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.sum_rel,rels);\n}\n})():datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$2(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(production,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),cljs.core.PersistentVector.EMPTY),datascript.query.empty_rel(binding)));\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(context__$1,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),datascript.query.collapse_rels,new_rel);\n});\ndatascript.query.rule_QMARK_ = (function datascript$query$rule_QMARK_(context,clause){\nif((!(cljs.core.sequential_QMARK_(clause)))){\nreturn false;\n} else {\nvar head = ((datascript.query.source_QMARK_(cljs.core.first(clause)))?cljs.core.second(clause):cljs.core.first(clause));\nif((!((head instanceof cljs.core.Symbol)))){\nreturn false;\n} else {\nif(datascript.query.free_var_QMARK_(head)){\nreturn false;\n} else {\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null,\"and\",\"and\",668631710,null),null,new cljs.core.Symbol(null,\"not\",\"not\",1044554643,null),null,new cljs.core.Symbol(null,\"not-join\",\"not-join\",-645515756,null),null,new cljs.core.Symbol(null,\"or-join\",\"or-join\",591375469,null),null,new cljs.core.Symbol(null,\"or\",\"or\",1876275696,null),null,new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null),null], null), null),head)){\nreturn false;\n} else {\nif((!(cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366).cljs$core$IFn$_invoke$arity$1(context),head)))){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Unknown rule '\",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([head], 0)),\" in \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([clause], 0))].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"where\",\"query/where\",-1935159429),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),clause], null));\n} else {\nreturn true;\n\n}\n}\n}\n}\n}\n});\ndatascript.query.rule_seqid = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\ndatascript.query.expand_rule = (function datascript$query$expand_rule(clause,context,used_args){\nvar vec__23436 = clause;\nvar seq__23437 = cljs.core.seq(vec__23436);\nvar first__23438 = cljs.core.first(seq__23437);\nvar seq__23437__$1 = cljs.core.next(seq__23437);\nvar rule = first__23438;\nvar call_args = seq__23437__$1;\nvar seqid = cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(datascript.query.rule_seqid,cljs.core.inc);\nvar branches = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366).cljs$core$IFn$_invoke$arity$1(context),rule);\nvar iter__5523__auto__ = (function datascript$query$expand_rule_$_iter__23439(s__23440){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__23440__$1 = s__23440;\nwhile(true){\nvar temp__5804__auto__ = cljs.core.seq(s__23440__$1);\nif(temp__5804__auto__){\nvar s__23440__$2 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__23440__$2)){\nvar c__5521__auto__ = cljs.core.chunk_first(s__23440__$2);\nvar size__5522__auto__ = cljs.core.count(c__5521__auto__);\nvar b__23442 = cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__23441 = (0);\nwhile(true){\nif((i__23441 < size__5522__auto__)){\nvar branch = cljs.core._nth(c__5521__auto__,i__23441);\nvar vec__23444 = branch;\nvar seq__23445 = cljs.core.seq(vec__23444);\nvar first__23446 = cljs.core.first(seq__23445);\nvar seq__23445__$1 = cljs.core.next(seq__23445);\nvar vec__23447 = first__23446;\nvar seq__23448 = cljs.core.seq(vec__23447);\nvar first__23449 = cljs.core.first(seq__23448);\nvar seq__23448__$1 = cljs.core.next(seq__23448);\nvar _ = first__23449;\nvar rule_args = seq__23448__$1;\nvar clauses = seq__23445__$1;\nvar replacements = cljs.core.zipmap(rule_args,call_args);\ncljs.core.chunk_append(b__23442,clojure.walk.postwalk(((function (i__23441,vec__23444,seq__23445,first__23446,seq__23445__$1,vec__23447,seq__23448,first__23449,seq__23448__$1,_,rule_args,clauses,replacements,branch,c__5521__auto__,size__5522__auto__,b__23442,s__23440__$2,temp__5804__auto__,vec__23436,seq__23437,first__23438,seq__23437__$1,rule,call_args,seqid,branches){\nreturn (function (p1__23435_SHARP_){\nif(datascript.query.free_var_QMARK_(p1__23435_SHARP_)){\nvar x__18649__auto__ = (replacements.cljs$core$IFn$_invoke$arity$1 ? replacements.cljs$core$IFn$_invoke$arity$1(p1__23435_SHARP_) : replacements.call(null,p1__23435_SHARP_));\nif((x__18649__auto__ == null)){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.name(p1__23435_SHARP_),\"__auto__\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(seqid)].join(''));\n} else {\nreturn x__18649__auto__;\n}\n} else {\nreturn p1__23435_SHARP_;\n}\n});})(i__23441,vec__23444,seq__23445,first__23446,seq__23445__$1,vec__23447,seq__23448,first__23449,seq__23448__$1,_,rule_args,clauses,replacements,branch,c__5521__auto__,size__5522__auto__,b__23442,s__23440__$2,temp__5804__auto__,vec__23436,seq__23437,first__23438,seq__23437__$1,rule,call_args,seqid,branches))\n,clauses));\n\nvar G__23799 = (i__23441 + (1));\ni__23441 = G__23799;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__23442),datascript$query$expand_rule_$_iter__23439(cljs.core.chunk_rest(s__23440__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__23442),null);\n}\n} else {\nvar branch = cljs.core.first(s__23440__$2);\nvar vec__23451 = branch;\nvar seq__23452 = cljs.core.seq(vec__23451);\nvar first__23453 = cljs.core.first(seq__23452);\nvar seq__23452__$1 = cljs.core.next(seq__23452);\nvar vec__23454 = first__23453;\nvar seq__23455 = cljs.core.seq(vec__23454);\nvar first__23456 = cljs.core.first(seq__23455);\nvar seq__23455__$1 = cljs.core.next(seq__23455);\nvar _ = first__23456;\nvar rule_args = seq__23455__$1;\nvar clauses = seq__23452__$1;\nvar replacements = cljs.core.zipmap(rule_args,call_args);\nreturn cljs.core.cons(clojure.walk.postwalk(((function (vec__23451,seq__23452,first__23453,seq__23452__$1,vec__23454,seq__23455,first__23456,seq__23455__$1,_,rule_args,clauses,replacements,branch,s__23440__$2,temp__5804__auto__,vec__23436,seq__23437,first__23438,seq__23437__$1,rule,call_args,seqid,branches){\nreturn (function (p1__23435_SHARP_){\nif(datascript.query.free_var_QMARK_(p1__23435_SHARP_)){\nvar x__18649__auto__ = (replacements.cljs$core$IFn$_invoke$arity$1 ? replacements.cljs$core$IFn$_invoke$arity$1(p1__23435_SHARP_) : replacements.call(null,p1__23435_SHARP_));\nif((x__18649__auto__ == null)){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.name(p1__23435_SHARP_),\"__auto__\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(seqid)].join(''));\n} else {\nreturn x__18649__auto__;\n}\n} else {\nreturn p1__23435_SHARP_;\n}\n});})(vec__23451,seq__23452,first__23453,seq__23452__$1,vec__23454,seq__23455,first__23456,seq__23455__$1,_,rule_args,clauses,replacements,branch,s__23440__$2,temp__5804__auto__,vec__23436,seq__23437,first__23438,seq__23437__$1,rule,call_args,seqid,branches))\n,clauses),datascript$query$expand_rule_$_iter__23439(cljs.core.rest(s__23440__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(branches);\n});\ndatascript.query.remove_pairs = (function datascript$query$remove_pairs(xs,ys){\nvar pairs = cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p__23457){\nvar vec__23458 = p__23457;\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23458,(0),null);\nvar y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23458,(1),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y);\n}),cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,xs,ys));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,pairs),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.second,pairs)], null);\n});\ndatascript.query.rule_gen_guards = (function datascript$query$rule_gen_guards(rule_clause,used_args){\nvar vec__23462 = rule_clause;\nvar seq__23463 = cljs.core.seq(vec__23462);\nvar first__23464 = cljs.core.first(seq__23463);\nvar seq__23463__$1 = cljs.core.next(seq__23463);\nvar rule = first__23464;\nvar call_args = seq__23463__$1;\nvar prev_call_args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(used_args,rule);\nvar iter__5523__auto__ = (function datascript$query$rule_gen_guards_$_iter__23465(s__23466){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__23466__$1 = s__23466;\nwhile(true){\nvar temp__5804__auto__ = cljs.core.seq(s__23466__$1);\nif(temp__5804__auto__){\nvar s__23466__$2 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__23466__$2)){\nvar c__5521__auto__ = cljs.core.chunk_first(s__23466__$2);\nvar size__5522__auto__ = cljs.core.count(c__5521__auto__);\nvar b__23468 = cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__23467 = (0);\nwhile(true){\nif((i__23467 < size__5522__auto__)){\nvar prev_args = cljs.core._nth(c__5521__auto__,i__23467);\nvar vec__23470 = datascript.query.remove_pairs(call_args,prev_args);\nvar call_args__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23470,(0),null);\nvar prev_args__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23470,(1),null);\ncljs.core.chunk_append(b__23468,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"-differ?\",\"-differ?\",1465687357,null)], null),call_args__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prev_args__$1], 0))], null));\n\nvar G__23814 = (i__23467 + (1));\ni__23467 = G__23814;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__23468),datascript$query$rule_gen_guards_$_iter__23465(cljs.core.chunk_rest(s__23466__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__23468),null);\n}\n} else {\nvar prev_args = cljs.core.first(s__23466__$2);\nvar vec__23473 = datascript.query.remove_pairs(call_args,prev_args);\nvar call_args__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23473,(0),null);\nvar prev_args__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23473,(1),null);\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"-differ?\",\"-differ?\",1465687357,null)], null),call_args__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prev_args__$1], 0))], null),datascript$query$rule_gen_guards_$_iter__23465(cljs.core.rest(s__23466__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(prev_call_args);\n});\ndatascript.query.walk_collect = (function datascript$query$walk_collect(form,pred){\nvar res = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);\nclojure.walk.postwalk((function (p1__23476_SHARP_){\nif(cljs.core.truth_((pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(p1__23476_SHARP_) : pred.call(null,p1__23476_SHARP_)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(res,cljs.core.conj,p1__23476_SHARP_);\n} else {\n}\n\nreturn p1__23476_SHARP_;\n}),form);\n\nreturn cljs.core.deref(res);\n});\ndatascript.query.collect_vars = (function datascript$query$collect_vars(clause){\nreturn cljs.core.set(datascript.query.walk_collect(clause,datascript.query.free_var_QMARK_));\n});\ndatascript.query.split_guards = (function datascript$query$split_guards(clauses,guards){\nvar bound_vars = datascript.query.collect_vars(clauses);\nvar pred = (function (p__23477){\nvar vec__23478 = p__23477;\nvar vec__23481 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23478,(0),null);\nvar seq__23482 = cljs.core.seq(vec__23481);\nvar first__23483 = cljs.core.first(seq__23482);\nvar seq__23482__$1 = cljs.core.next(seq__23482);\nvar _ = first__23483;\nvar vars = seq__23482__$1;\nreturn cljs.core.every_QMARK_(bound_vars,vars);\n});\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred,guards),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(pred,guards)], null);\n});\ndatascript.query.solve_rule = (function datascript$query$solve_rule(context,clause){\nvar final_attrs = cljs.core.filter.cljs$core$IFn$_invoke$arity$2(datascript.query.free_var_QMARK_,clause);\nvar final_attrs_map = cljs.core.zipmap(final_attrs,cljs.core.range.cljs$core$IFn$_invoke$arity$0());\nvar solve = (function (prefix_context,clauses){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(datascript.query._resolve_clause,prefix_context,clauses);\n});\nvar empty_rels_QMARK_ = (function (context__$1){\nreturn cljs.core.some((function (p1__23484_SHARP_){\nreturn cljs.core.empty_QMARK_(new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(p1__23484_SHARP_));\n}),new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context__$1));\n});\nvar stack = (new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"prefix-clauses\",\"prefix-clauses\",1294180028),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"prefix-context\",\"prefix-context\",-1269613591),context,new cljs.core.Keyword(null,\"clauses\",\"clauses\",1454841241),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null),new cljs.core.Keyword(null,\"used-args\",\"used-args\",23596256),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"pending-guards\",\"pending-guards\",-1255527308),cljs.core.PersistentArrayMap.EMPTY], null),null,(1),null));\nvar rel = (new datascript.query.Relation(final_attrs_map,cljs.core.PersistentVector.EMPTY,null,null,null));\nwhile(true){\nvar temp__5806__auto__ = cljs.core.first(stack);\nif((temp__5806__auto__ == null)){\nreturn rel;\n} else {\nvar frame = temp__5806__auto__;\nvar vec__23504 = cljs.core.split_with(((function (stack,rel,frame,temp__5806__auto__,final_attrs,final_attrs_map,solve,empty_rels_QMARK_){\nreturn (function (p1__23485_SHARP_){\nreturn (!(datascript.query.rule_QMARK_(context,p1__23485_SHARP_)));\n});})(stack,rel,frame,temp__5806__auto__,final_attrs,final_attrs_map,solve,empty_rels_QMARK_))\n,new cljs.core.Keyword(null,\"clauses\",\"clauses\",1454841241).cljs$core$IFn$_invoke$arity$1(frame));\nvar clauses = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23504,(0),null);\nvar vec__23507 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23504,(1),null);\nvar seq__23508 = cljs.core.seq(vec__23507);\nvar first__23509 = cljs.core.first(seq__23508);\nvar seq__23508__$1 = cljs.core.next(seq__23508);\nvar rule_clause = first__23509;\nvar next_clauses = seq__23508__$1;\nif((rule_clause == null)){\nvar context__$1 = solve(new cljs.core.Keyword(null,\"prefix-context\",\"prefix-context\",-1269613591).cljs$core$IFn$_invoke$arity$1(frame),clauses);\nvar tuples = (datascript.query._collect.cljs$core$IFn$_invoke$arity$2 ? datascript.query._collect.cljs$core$IFn$_invoke$arity$2(context__$1,final_attrs) : datascript.query._collect.call(null,context__$1,final_attrs));\nvar new_rel = (new datascript.query.Relation(final_attrs_map,tuples,null,null,null));\nvar G__23817 = cljs.core.next(stack);\nvar G__23818 = datascript.query.sum_rel(rel,new_rel);\nstack = G__23817;\nrel = G__23818;\ncontinue;\n} else {\nvar vec__23510 = rule_clause;\nvar seq__23511 = cljs.core.seq(vec__23510);\nvar first__23512 = cljs.core.first(seq__23511);\nvar seq__23511__$1 = cljs.core.next(seq__23511);\nvar rule = first__23512;\nvar call_args = seq__23511__$1;\nvar guards = datascript.query.rule_gen_guards(rule_clause,new cljs.core.Keyword(null,\"used-args\",\"used-args\",23596256).cljs$core$IFn$_invoke$arity$1(frame));\nvar vec__23513 = datascript.query.split_guards(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"prefix-clauses\",\"prefix-clauses\",1294180028).cljs$core$IFn$_invoke$arity$1(frame),clauses),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(guards,new cljs.core.Keyword(null,\"pending-guards\",\"pending-guards\",-1255527308).cljs$core$IFn$_invoke$arity$1(frame)));\nvar active_gs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23513,(0),null);\nvar pending_gs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23513,(1),null);\nif(cljs.core.truth_(cljs.core.some(((function (stack,rel,vec__23510,seq__23511,first__23512,seq__23511__$1,rule,call_args,guards,vec__23513,active_gs,pending_gs,vec__23504,clauses,vec__23507,seq__23508,first__23509,seq__23508__$1,rule_clause,next_clauses,frame,temp__5806__auto__,final_attrs,final_attrs_map,solve,empty_rels_QMARK_){\nreturn (function (p1__23486_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p1__23486_SHARP_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"-differ?\",\"-differ?\",1465687357,null))], null));\n});})(stack,rel,vec__23510,seq__23511,first__23512,seq__23511__$1,rule,call_args,guards,vec__23513,active_gs,pending_gs,vec__23504,clauses,vec__23507,seq__23508,first__23509,seq__23508__$1,rule_clause,next_clauses,frame,temp__5806__auto__,final_attrs,final_attrs_map,solve,empty_rels_QMARK_))\n,active_gs))){\nvar G__23819 = cljs.core.next(stack);\nvar G__23820 = rel;\nstack = G__23819;\nrel = G__23820;\ncontinue;\n} else {\nvar prefix_clauses = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(clauses,active_gs);\nvar prefix_context = solve(new cljs.core.Keyword(null,\"prefix-context\",\"prefix-context\",-1269613591).cljs$core$IFn$_invoke$arity$1(frame),prefix_clauses);\nif(cljs.core.truth_(empty_rels_QMARK_(prefix_context))){\nvar G__23821 = cljs.core.next(stack);\nvar G__23822 = rel;\nstack = G__23821;\nrel = G__23822;\ncontinue;\n} else {\nvar used_args = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"used-args\",\"used-args\",23596256).cljs$core$IFn$_invoke$arity$1(frame),rule,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"used-args\",\"used-args\",23596256).cljs$core$IFn$_invoke$arity$1(frame),rule,cljs.core.PersistentVector.EMPTY),call_args));\nvar branches = datascript.query.expand_rule(rule_clause,context,used_args);\nvar G__23827 = cljs.core.concat.cljs$core$IFn$_invoke$arity$2((function (){var iter__5523__auto__ = ((function (stack,rel,used_args,branches,prefix_clauses,prefix_context,vec__23510,seq__23511,first__23512,seq__23511__$1,rule,call_args,guards,vec__23513,active_gs,pending_gs,vec__23504,clauses,vec__23507,seq__23508,first__23509,seq__23508__$1,rule_clause,next_clauses,frame,temp__5806__auto__,final_attrs,final_attrs_map,solve,empty_rels_QMARK_){\nreturn (function datascript$query$solve_rule_$_iter__23517(s__23518){\nreturn (new cljs.core.LazySeq(null,((function (stack,rel,used_args,branches,prefix_clauses,prefix_context,vec__23510,seq__23511,first__23512,seq__23511__$1,rule,call_args,guards,vec__23513,active_gs,pending_gs,vec__23504,clauses,vec__23507,seq__23508,first__23509,seq__23508__$1,rule_clause,next_clauses,frame,temp__5806__auto__,final_attrs,final_attrs_map,solve,empty_rels_QMARK_){\nreturn (function (){\nvar s__23518__$1 = s__23518;\nwhile(true){\nvar temp__5804__auto__ = cljs.core.seq(s__23518__$1);\nif(temp__5804__auto__){\nvar s__23518__$2 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__23518__$2)){\nvar c__5521__auto__ = cljs.core.chunk_first(s__23518__$2);\nvar size__5522__auto__ = cljs.core.count(c__5521__auto__);\nvar b__23520 = cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__23519 = (0);\nwhile(true){\nif((i__23519 < size__5522__auto__)){\nvar branch = cljs.core._nth(c__5521__auto__,i__23519);\ncljs.core.chunk_append(b__23520,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"prefix-clauses\",\"prefix-clauses\",1294180028),prefix_clauses,new cljs.core.Keyword(null,\"prefix-context\",\"prefix-context\",-1269613591),prefix_context,new cljs.core.Keyword(null,\"clauses\",\"clauses\",1454841241),datascript.query.concatv.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([branch,next_clauses], 0)),new cljs.core.Keyword(null,\"used-args\",\"used-args\",23596256),used_args,new cljs.core.Keyword(null,\"pending-guards\",\"pending-guards\",-1255527308),pending_gs], null));\n\nvar G__23838 = (i__23519 + (1));\ni__23519 = G__23838;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__23520),datascript$query$solve_rule_$_iter__23517(cljs.core.chunk_rest(s__23518__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__23520),null);\n}\n} else {\nvar branch = cljs.core.first(s__23518__$2);\nreturn cljs.core.cons(new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"prefix-clauses\",\"prefix-clauses\",1294180028),prefix_clauses,new cljs.core.Keyword(null,\"prefix-context\",\"prefix-context\",-1269613591),prefix_context,new cljs.core.Keyword(null,\"clauses\",\"clauses\",1454841241),datascript.query.concatv.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([branch,next_clauses], 0)),new cljs.core.Keyword(null,\"used-args\",\"used-args\",23596256),used_args,new cljs.core.Keyword(null,\"pending-guards\",\"pending-guards\",-1255527308),pending_gs], null),datascript$query$solve_rule_$_iter__23517(cljs.core.rest(s__23518__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(stack,rel,used_args,branches,prefix_clauses,prefix_context,vec__23510,seq__23511,first__23512,seq__23511__$1,rule,call_args,guards,vec__23513,active_gs,pending_gs,vec__23504,clauses,vec__23507,seq__23508,first__23509,seq__23508__$1,rule_clause,next_clauses,frame,temp__5806__auto__,final_attrs,final_attrs_map,solve,empty_rels_QMARK_))\n,null,null));\n});})(stack,rel,used_args,branches,prefix_clauses,prefix_context,vec__23510,seq__23511,first__23512,seq__23511__$1,rule,call_args,guards,vec__23513,active_gs,pending_gs,vec__23504,clauses,vec__23507,seq__23508,first__23509,seq__23508__$1,rule_clause,next_clauses,frame,temp__5806__auto__,final_attrs,final_attrs_map,solve,empty_rels_QMARK_))\n;\nreturn iter__5523__auto__(branches);\n})(),cljs.core.next(stack));\nvar G__23828 = rel;\nstack = G__23827;\nrel = G__23828;\ncontinue;\n}\n}\n}\n}\nbreak;\n}\n});\ndatascript.query.resolve_pattern_lookup_refs = (function datascript$query$resolve_pattern_lookup_refs(source,pattern){\nif((((!((source == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === source.datascript$db$IDB$))))?true:(((!source.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(datascript.db.IDB,source):false)):cljs.core.native_satisfies_QMARK_(datascript.db.IDB,source))){\nvar vec__23524 = pattern;\nvar e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23524,(0),null);\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23524,(1),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23524,(2),null);\nvar tx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23524,(3),null);\nreturn cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.truth_((function (){var or__5045__auto__ = datascript.query.lookup_ref_QMARK_(e);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn datascript.query.attr_QMARK_(e);\n}\n})())?datascript.db.entid_strict(source,e):e),a,(cljs.core.truth_((function (){var and__5043__auto__ = v;\nif(cljs.core.truth_(and__5043__auto__)){\nvar and__5043__auto____$1 = datascript.query.attr_QMARK_(a);\nif(and__5043__auto____$1){\nvar and__5043__auto____$2 = datascript.db.ref_QMARK_(source,a);\nif(and__5043__auto____$2){\nvar or__5045__auto__ = datascript.query.lookup_ref_QMARK_(v);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn datascript.query.attr_QMARK_(v);\n}\n} else {\nreturn and__5043__auto____$2;\n}\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n})())?datascript.db.entid_strict(source,v):v),(cljs.core.truth_(datascript.query.lookup_ref_QMARK_(tx))?datascript.db.entid_strict(source,tx):tx)], null),(0),cljs.core.count(pattern));\n} else {\nreturn pattern;\n}\n});\ndatascript.query.dynamic_lookup_attrs = (function datascript$query$dynamic_lookup_attrs(source,pattern){\nvar vec__23527 = pattern;\nvar e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23527,(0),null);\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23527,(1),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23527,(2),null);\nvar tx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23527,(3),null);\nvar G__23530 = cljs.core.PersistentHashSet.EMPTY;\nvar G__23530__$1 = ((datascript.query.free_var_QMARK_(e))?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(G__23530,e):G__23530);\nvar G__23530__$2 = ((datascript.query.free_var_QMARK_(tx))?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(G__23530__$1,tx):G__23530__$1);\nif(((datascript.query.free_var_QMARK_(v)) && ((((!(datascript.query.free_var_QMARK_(a)))) && (datascript.db.ref_QMARK_(source,a)))))){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(G__23530__$2,v);\n} else {\nreturn G__23530__$2;\n}\n});\ndatascript.query.limit_rel = (function datascript$query$limit_rel(rel,vars){\nvar temp__5808__auto__ = cljs.core.not_empty(cljs.core.select_keys(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel),vars));\nif((temp__5808__auto__ == null)){\nreturn null;\n} else {\nvar attrs_SINGLEQUOTE_ = temp__5808__auto__;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(rel,new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713),attrs_SINGLEQUOTE_);\n}\n});\ndatascript.query.limit_context = (function datascript$query$limit_context(context,vars){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),cljs.core.keep.cljs$core$IFn$_invoke$arity$2((function (p1__23545_SHARP_){\nreturn datascript.query.limit_rel(p1__23545_SHARP_,vars);\n}),new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context)));\n});\ndatascript.query.bound_vars = (function datascript$query$bound_vars(context){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((function (p1__23546_SHARP_){\nreturn cljs.core.keys(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(p1__23546_SHARP_));\n}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context)], 0)));\n});\ndatascript.query.check_bound = (function datascript$query$check_bound(bound,vars,form){\nif(clojure.set.subset_QMARK_(vars,bound)){\nreturn null;\n} else {\nvar missing = clojure.set.difference.cljs$core$IFn$_invoke$arity$2(cljs.core.set(vars),bound);\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Insufficient bindings: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([missing], 0)),\" not bound in \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([form], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"where\",\"query/where\",-1935159429),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"vars\",\"vars\",-2046957217),missing], null));\n}\n});\ndatascript.query.check_free_same = (function datascript$query$check_free_same(bound,branches,form){\nvar free = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__23549_SHARP_){\nreturn clojure.set.difference.cljs$core$IFn$_invoke$arity$2(datascript.query.collect_vars(p1__23549_SHARP_),bound);\n}),branches);\nif(cljs.core.truth_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core._EQ_,free))){\nreturn null;\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"All clauses in 'or' must use same set of free vars, had \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([free], 0)),\" in \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([form], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"where\",\"query/where\",-1935159429),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"vars\",\"vars\",-2046957217),free], null));\n}\n});\ndatascript.query.check_free_subset = (function datascript$query$check_free_subset(bound,vars,branches){\nvar free = cljs.core.set(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(bound,vars));\nvar seq__23551 = cljs.core.seq(branches);\nvar chunk__23552 = null;\nvar count__23553 = (0);\nvar i__23554 = (0);\nwhile(true){\nif((i__23554 < count__23553)){\nvar branch = chunk__23552.cljs$core$IIndexed$_nth$arity$2(null,i__23554);\nvar temp__5808__auto___23846 = cljs.core.not_empty(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(free,datascript.query.collect_vars(branch)));\nif((temp__5808__auto___23846 == null)){\n} else {\nvar missing_23847 = temp__5808__auto___23846;\ncljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([branch,bound,vars,free], 0));\n\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"All clauses in 'or' must use same set of free vars, had \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([missing_23847], 0)),\" not bound in \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([branch], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"where\",\"query/where\",-1935159429),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),branch,new cljs.core.Keyword(null,\"vars\",\"vars\",-2046957217),missing_23847], null));\n}\n\n\nvar G__23851 = seq__23551;\nvar G__23852 = chunk__23552;\nvar G__23853 = count__23553;\nvar G__23854 = (i__23554 + (1));\nseq__23551 = G__23851;\nchunk__23552 = G__23852;\ncount__23553 = G__23853;\ni__23554 = G__23854;\ncontinue;\n} else {\nvar temp__5804__auto__ = cljs.core.seq(seq__23551);\nif(temp__5804__auto__){\nvar seq__23551__$1 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__23551__$1)){\nvar c__5568__auto__ = cljs.core.chunk_first(seq__23551__$1);\nvar G__23855 = cljs.core.chunk_rest(seq__23551__$1);\nvar G__23856 = c__5568__auto__;\nvar G__23857 = cljs.core.count(c__5568__auto__);\nvar G__23858 = (0);\nseq__23551 = G__23855;\nchunk__23552 = G__23856;\ncount__23553 = G__23857;\ni__23554 = G__23858;\ncontinue;\n} else {\nvar branch = cljs.core.first(seq__23551__$1);\nvar temp__5808__auto___23859 = cljs.core.not_empty(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(free,datascript.query.collect_vars(branch)));\nif((temp__5808__auto___23859 == null)){\n} else {\nvar missing_23860 = temp__5808__auto___23859;\ncljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([branch,bound,vars,free], 0));\n\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"All clauses in 'or' must use same set of free vars, had \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([missing_23860], 0)),\" not bound in \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([branch], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"where\",\"query/where\",-1935159429),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),branch,new cljs.core.Keyword(null,\"vars\",\"vars\",-2046957217),missing_23860], null));\n}\n\n\nvar G__23861 = cljs.core.next(seq__23551__$1);\nvar G__23862 = null;\nvar G__23863 = (0);\nvar G__23864 = (0);\nseq__23551 = G__23861;\nchunk__23552 = G__23862;\ncount__23553 = G__23863;\ni__23554 = G__23864;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ndatascript.query._resolve_clause = (function datascript$query$_resolve_clause(var_args){\nvar G__23584 = arguments.length;\nswitch (G__23584) {\ncase 2:\nreturn datascript.query._resolve_clause.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn datascript.query._resolve_clause.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(datascript.query._resolve_clause.cljs$core$IFn$_invoke$arity$2 = (function (context,clause){\nreturn datascript.query._resolve_clause.cljs$core$IFn$_invoke$arity$3(context,clause,clause);\n}));\n\n(datascript.query._resolve_clause.cljs$core$IFn$_invoke$arity$3 = (function (context,clause,orig_clause){\nwhile(true){\nvar pred__23585 = datascript.query.looks_like_QMARK_;\nvar expr__23586 = clause;\nif(cljs.core.truth_((function (){var G__23588 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol_QMARK_,new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null)], null);\nvar G__23589 = expr__23586;\nreturn (pred__23585.cljs$core$IFn$_invoke$arity$2 ? pred__23585.cljs$core$IFn$_invoke$arity$2(G__23588,G__23589) : pred__23585.call(null,G__23588,G__23589));\n})())){\ndatascript.query.check_bound(datascript.query.bound_vars(context),cljs.core.filter.cljs$core$IFn$_invoke$arity$2(datascript.query.free_var_QMARK_,cljs.core.nfirst(clause)),clause);\n\nreturn datascript.query.filter_by_pred(context,clause);\n} else {\nif(cljs.core.truth_((function (){var G__23590 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol_QMARK_,new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null),new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null)], null);\nvar G__23591 = expr__23586;\nreturn (pred__23585.cljs$core$IFn$_invoke$arity$2 ? pred__23585.cljs$core$IFn$_invoke$arity$2(G__23590,G__23591) : pred__23585.call(null,G__23590,G__23591));\n})())){\ndatascript.query.check_bound(datascript.query.bound_vars(context),cljs.core.filter.cljs$core$IFn$_invoke$arity$2(datascript.query.free_var_QMARK_,cljs.core.nfirst(clause)),clause);\n\nreturn datascript.query.bind_by_fn(context,clause);\n} else {\nif(cljs.core.truth_((function (){var G__23592 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [datascript.query.source_QMARK_,new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null);\nvar G__23593 = expr__23586;\nreturn (pred__23585.cljs$core$IFn$_invoke$arity$2 ? pred__23585.cljs$core$IFn$_invoke$arity$2(G__23592,G__23593) : pred__23585.call(null,G__23592,G__23593));\n})())){\nvar vec__23594 = clause;\nvar seq__23595 = cljs.core.seq(vec__23594);\nvar first__23596 = cljs.core.first(seq__23595);\nvar seq__23595__$1 = cljs.core.next(seq__23595);\nvar source_sym = first__23596;\nvar rest = seq__23595__$1;\nvar _STAR_implicit_source_STAR__orig_val__23597 = datascript.query._STAR_implicit_source_STAR_;\nvar _STAR_implicit_source_STAR__temp_val__23598 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424).cljs$core$IFn$_invoke$arity$1(context),source_sym);\n(datascript.query._STAR_implicit_source_STAR_ = _STAR_implicit_source_STAR__temp_val__23598);\n\ntry{return datascript.query._resolve_clause.cljs$core$IFn$_invoke$arity$3(context,rest,clause);\n}finally {(datascript.query._STAR_implicit_source_STAR_ = _STAR_implicit_source_STAR__orig_val__23597);\n}} else {\nif(cljs.core.truth_((function (){var G__23599 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"or\",\"or\",1876275696,null),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null);\nvar G__23600 = expr__23586;\nreturn (pred__23585.cljs$core$IFn$_invoke$arity$2 ? pred__23585.cljs$core$IFn$_invoke$arity$2(G__23599,G__23600) : pred__23585.call(null,G__23599,G__23600));\n})())){\nvar vec__23601 = clause;\nvar seq__23602 = cljs.core.seq(vec__23601);\nvar first__23603 = cljs.core.first(seq__23602);\nvar seq__23602__$1 = cljs.core.next(seq__23602);\nvar _ = first__23603;\nvar branches = seq__23602__$1;\nvar ___$1 = datascript.query.check_free_same(datascript.query.bound_vars(context),branches,clause);\nvar contexts = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (context,clause,orig_clause,vec__23601,seq__23602,first__23603,seq__23602__$1,_,branches,___$1,pred__23585,expr__23586){\nreturn (function (p1__23572_SHARP_){\nreturn (datascript.query.resolve_clause.cljs$core$IFn$_invoke$arity$2 ? datascript.query.resolve_clause.cljs$core$IFn$_invoke$arity$2(context,p1__23572_SHARP_) : datascript.query.resolve_clause.call(null,context,p1__23572_SHARP_));\n});})(context,clause,orig_clause,vec__23601,seq__23602,first__23603,seq__23602__$1,_,branches,___$1,pred__23585,expr__23586))\n,branches);\nvar rels = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (context,clause,orig_clause,vec__23601,seq__23602,first__23603,seq__23602__$1,_,branches,___$1,contexts,pred__23585,expr__23586){\nreturn (function (p1__23573_SHARP_){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.hash_join,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(p1__23573_SHARP_));\n});})(context,clause,orig_clause,vec__23601,seq__23602,first__23603,seq__23602__$1,_,branches,___$1,contexts,pred__23585,expr__23586))\n,contexts);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.first(contexts),new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.sum_rel,rels)], null));\n} else {\nif(cljs.core.truth_((function (){var G__23604 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"or-join\",\"or-join\",591375469,null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null);\nvar G__23605 = expr__23586;\nreturn (pred__23585.cljs$core$IFn$_invoke$arity$2 ? pred__23585.cljs$core$IFn$_invoke$arity$2(G__23604,G__23605) : pred__23585.call(null,G__23604,G__23605));\n})())){\nvar vec__23606 = clause;\nvar seq__23607 = cljs.core.seq(vec__23606);\nvar first__23608 = cljs.core.first(seq__23607);\nvar seq__23607__$1 = cljs.core.next(seq__23607);\nvar _ = first__23608;\nvar first__23608__$1 = cljs.core.first(seq__23607__$1);\nvar seq__23607__$2 = cljs.core.next(seq__23607__$1);\nvar vec__23609 = first__23608__$1;\nvar seq__23610 = cljs.core.seq(vec__23609);\nvar first__23611 = cljs.core.first(seq__23610);\nvar seq__23610__$1 = cljs.core.next(seq__23610);\nvar req_vars = first__23611;\nvar vars = seq__23610__$1;\nvar branches = seq__23607__$2;\nvar bound = datascript.query.bound_vars(context);\ndatascript.query.check_bound(bound,req_vars,orig_clause);\n\ndatascript.query.check_free_subset(bound,vars,branches);\n\nvar G__23869 = context;\nvar G__23870 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(new cljs.core.Symbol(null,\"or-join\",\"or-join\",591375469,null),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(req_vars,vars),branches);\nvar G__23871 = clause;\ncontext = G__23869;\nclause = G__23870;\norig_clause = G__23871;\ncontinue;\n} else {\nif(cljs.core.truth_((function (){var G__23612 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"or-join\",\"or-join\",591375469,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null);\nvar G__23613 = expr__23586;\nreturn (pred__23585.cljs$core$IFn$_invoke$arity$2 ? pred__23585.cljs$core$IFn$_invoke$arity$2(G__23612,G__23613) : pred__23585.call(null,G__23612,G__23613));\n})())){\nvar vec__23614 = clause;\nvar seq__23615 = cljs.core.seq(vec__23614);\nvar first__23616 = cljs.core.first(seq__23615);\nvar seq__23615__$1 = cljs.core.next(seq__23615);\nvar _ = first__23616;\nvar first__23616__$1 = cljs.core.first(seq__23615__$1);\nvar seq__23615__$2 = cljs.core.next(seq__23615__$1);\nvar vars = first__23616__$1;\nvar branches = seq__23615__$2;\nvar vars__$1 = cljs.core.set(vars);\nvar ___$1 = datascript.query.check_free_subset(datascript.query.bound_vars(context),vars__$1,branches);\nvar join_context = datascript.query.limit_context(context,vars__$1);\nvar contexts = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (context,clause,orig_clause,vec__23614,seq__23615,first__23616,seq__23615__$1,_,first__23616__$1,seq__23615__$2,vars,branches,vars__$1,___$1,join_context,pred__23585,expr__23586){\nreturn (function (p1__23574_SHARP_){\nreturn datascript.query.limit_context((datascript.query.resolve_clause.cljs$core$IFn$_invoke$arity$2 ? datascript.query.resolve_clause.cljs$core$IFn$_invoke$arity$2(join_context,p1__23574_SHARP_) : datascript.query.resolve_clause.call(null,join_context,p1__23574_SHARP_)),vars__$1);\n});})(context,clause,orig_clause,vec__23614,seq__23615,first__23616,seq__23615__$1,_,first__23616__$1,seq__23615__$2,vars,branches,vars__$1,___$1,join_context,pred__23585,expr__23586))\n,branches);\nvar rels = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (context,clause,orig_clause,vec__23614,seq__23615,first__23616,seq__23615__$1,_,first__23616__$1,seq__23615__$2,vars,branches,vars__$1,___$1,join_context,contexts,pred__23585,expr__23586){\nreturn (function (p1__23575_SHARP_){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.hash_join,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(p1__23575_SHARP_));\n});})(context,clause,orig_clause,vec__23614,seq__23615,first__23616,seq__23615__$1,_,first__23616__$1,seq__23615__$2,vars,branches,vars__$1,___$1,join_context,contexts,pred__23585,expr__23586))\n,contexts);\nvar sum_rel = cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.sum_rel,rels);\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(context,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),datascript.query.collapse_rels,sum_rel);\n} else {\nif(cljs.core.truth_((function (){var G__23617 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"and\",\"and\",668631710,null),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null);\nvar G__23618 = expr__23586;\nreturn (pred__23585.cljs$core$IFn$_invoke$arity$2 ? pred__23585.cljs$core$IFn$_invoke$arity$2(G__23617,G__23618) : pred__23585.call(null,G__23617,G__23618));\n})())){\nvar vec__23619 = clause;\nvar seq__23620 = cljs.core.seq(vec__23619);\nvar first__23621 = cljs.core.first(seq__23620);\nvar seq__23620__$1 = cljs.core.next(seq__23620);\nvar _ = first__23621;\nvar clauses = seq__23620__$1;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(datascript.query.resolve_clause,context,clauses);\n} else {\nif(cljs.core.truth_((function (){var G__23622 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"not\",\"not\",1044554643,null),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null);\nvar G__23623 = expr__23586;\nreturn (pred__23585.cljs$core$IFn$_invoke$arity$2 ? pred__23585.cljs$core$IFn$_invoke$arity$2(G__23622,G__23623) : pred__23585.call(null,G__23622,G__23623));\n})())){\nvar vec__23624 = clause;\nvar seq__23625 = cljs.core.seq(vec__23624);\nvar first__23626 = cljs.core.first(seq__23625);\nvar seq__23625__$1 = cljs.core.next(seq__23625);\nvar _ = first__23626;\nvar clauses = seq__23625__$1;\nvar bound = datascript.query.bound_vars(context);\nvar negation_vars = datascript.query.collect_vars(clauses);\nvar ___$1 = ((cljs.core.empty_QMARK_(clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(bound,negation_vars)))?(function(){throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Insufficient bindings: none of \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([negation_vars], 0)),\" is bound in \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([orig_clause], 0))].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"where\",\"query/where\",-1935159429),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),orig_clause], null))})():null);\nvar context_SINGLEQUOTE_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.hash_join,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context))], null));\nvar negation_context = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(datascript.query.resolve_clause,context_SINGLEQUOTE_,clauses);\nvar negation = datascript.query.subtract_rel(datascript.query.single(new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context_SINGLEQUOTE_)),cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.hash_join,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(negation_context)));\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(context_SINGLEQUOTE_,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [negation], null));\n} else {\nif(cljs.core.truth_((function (){var G__23627 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"not-join\",\"not-join\",-645515756,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null);\nvar G__23628 = expr__23586;\nreturn (pred__23585.cljs$core$IFn$_invoke$arity$2 ? pred__23585.cljs$core$IFn$_invoke$arity$2(G__23627,G__23628) : pred__23585.call(null,G__23627,G__23628));\n})())){\nvar vec__23629 = clause;\nvar seq__23630 = cljs.core.seq(vec__23629);\nvar first__23631 = cljs.core.first(seq__23630);\nvar seq__23630__$1 = cljs.core.next(seq__23630);\nvar _ = first__23631;\nvar first__23631__$1 = cljs.core.first(seq__23630__$1);\nvar seq__23630__$2 = cljs.core.next(seq__23630__$1);\nvar vars = first__23631__$1;\nvar clauses = seq__23630__$2;\nvar bound = datascript.query.bound_vars(context);\nvar ___$1 = datascript.query.check_bound(bound,vars,orig_clause);\nvar context_SINGLEQUOTE_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.hash_join,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context))], null));\nvar join_context = datascript.query.limit_context(context_SINGLEQUOTE_,vars);\nvar negation_context = datascript.query.limit_context(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(datascript.query.resolve_clause,join_context,clauses),vars);\nvar negation = datascript.query.subtract_rel(datascript.query.single(new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context_SINGLEQUOTE_)),cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.hash_join,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(negation_context)));\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(context_SINGLEQUOTE_,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [negation], null));\n} else {\nif(cljs.core.truth_((function (){var G__23632 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null);\nvar G__23633 = expr__23586;\nreturn (pred__23585.cljs$core$IFn$_invoke$arity$2 ? pred__23585.cljs$core$IFn$_invoke$arity$2(G__23632,G__23633) : pred__23585.call(null,G__23632,G__23633));\n})())){\nvar source = datascript.query._STAR_implicit_source_STAR_;\nvar pattern = datascript.query.resolve_pattern_lookup_refs(source,clause);\nvar relation = datascript.query.lookup_pattern(source,pattern);\nvar _STAR_lookup_attrs_STAR__orig_val__23634 = datascript.query._STAR_lookup_attrs_STAR_;\nvar _STAR_lookup_attrs_STAR__temp_val__23635 = (((((!((source == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === source.datascript$db$IDB$))))?true:(((!source.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(datascript.db.IDB,source):false)):cljs.core.native_satisfies_QMARK_(datascript.db.IDB,source)))?datascript.query.dynamic_lookup_attrs(source,pattern):datascript.query._STAR_lookup_attrs_STAR_);\n(datascript.query._STAR_lookup_attrs_STAR_ = _STAR_lookup_attrs_STAR__temp_val__23635);\n\ntry{return cljs.core.update.cljs$core$IFn$_invoke$arity$4(context,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),datascript.query.collapse_rels,relation);\n}finally {(datascript.query._STAR_lookup_attrs_STAR_ = _STAR_lookup_attrs_STAR__orig_val__23634);\n}} else {\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__23586)].join('')));\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\nbreak;\n}\n}));\n\n(datascript.query._resolve_clause.cljs$lang$maxFixedArity = 3);\n\ndatascript.query.resolve_clause = (function datascript$query$resolve_clause(context,clause){\nif(datascript.query.rule_QMARK_(context,clause)){\nif(datascript.query.source_QMARK_(cljs.core.first(clause))){\nvar _STAR_implicit_source_STAR__orig_val__23637 = datascript.query._STAR_implicit_source_STAR_;\nvar _STAR_implicit_source_STAR__temp_val__23638 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424).cljs$core$IFn$_invoke$arity$1(context),cljs.core.first(clause));\n(datascript.query._STAR_implicit_source_STAR_ = _STAR_implicit_source_STAR__temp_val__23638);\n\ntry{var G__23639 = context;\nvar G__23640 = cljs.core.next(clause);\nreturn (datascript.query.resolve_clause.cljs$core$IFn$_invoke$arity$2 ? datascript.query.resolve_clause.cljs$core$IFn$_invoke$arity$2(G__23639,G__23640) : datascript.query.resolve_clause.call(null,G__23639,G__23640));\n}finally {(datascript.query._STAR_implicit_source_STAR_ = _STAR_implicit_source_STAR__orig_val__23637);\n}} else {\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(context,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),datascript.query.collapse_rels,datascript.query.solve_rule(context,clause));\n}\n} else {\nreturn datascript.query._resolve_clause.cljs$core$IFn$_invoke$arity$2(context,clause);\n}\n});\ndatascript.query._q = (function datascript$query$_q(context,clauses){\nvar _STAR_implicit_source_STAR__orig_val__23641 = datascript.query._STAR_implicit_source_STAR_;\nvar _STAR_implicit_source_STAR__temp_val__23642 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424).cljs$core$IFn$_invoke$arity$1(context),new cljs.core.Symbol(null,\"$\",\"$\",-1580747756,null));\n(datascript.query._STAR_implicit_source_STAR_ = _STAR_implicit_source_STAR__temp_val__23642);\n\ntry{return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(datascript.query.resolve_clause,context,clauses);\n}finally {(datascript.query._STAR_implicit_source_STAR_ = _STAR_implicit_source_STAR__orig_val__23641);\n}});\ndatascript.query._collect_tuples = (function datascript$query$_collect_tuples(acc,rel,len,copy_map){\nreturn cljs.core.__GT_Eduction(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (t1){\nreturn cljs.core.__GT_Eduction(cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (t2){\nvar res = cljs.core.aclone(t1);\nvar n__5636__auto___23874 = len;\nvar i_23875 = (0);\nwhile(true){\nif((i_23875 < n__5636__auto___23874)){\nvar temp__5808__auto___23876 = (copy_map[i_23875]);\nif((temp__5808__auto___23876 == null)){\n} else {\nvar idx_23877 = temp__5808__auto___23876;\n(res[i_23875] = (t2[idx_23877]));\n}\n\nvar G__23878 = (i_23875 + (1));\ni_23875 = G__23878;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn res;\n})),new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(rel));\n})),cljs.core.cat),acc);\n});\ndatascript.query._collect = (function datascript$query$_collect(var_args){\nvar G__23645 = arguments.length;\nswitch (G__23645) {\ncase 2:\nreturn datascript.query._collect.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn datascript.query._collect.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(datascript.query._collect.cljs$core$IFn$_invoke$arity$2 = (function (context,symbols){\nvar rels = new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context);\nreturn datascript.query._collect.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [me.tonsky.persistent_sorted_set.arrays.make_array(cljs.core.count(symbols))], null),rels,symbols);\n}));\n\n(datascript.query._collect.cljs$core$IFn$_invoke$arity$3 = (function (acc,rels,symbols){\nwhile(true){\nvar rel = cljs.core.first(rels);\nif((rel == null)){\nreturn acc;\n} else {\nif(cljs.core.empty_QMARK_(new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(rel))){\nreturn cljs.core.PersistentVector.EMPTY;\n} else {\nvar keep_attrs = cljs.core.select_keys(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel),symbols);\nif(cljs.core.empty_QMARK_(keep_attrs)){\nvar G__23880 = acc;\nvar G__23881 = cljs.core.next(rels);\nvar G__23882 = symbols;\nacc = G__23880;\nrels = G__23881;\nsymbols = G__23882;\ncontinue;\n} else {\nvar copy_map = cljs.core.to_array(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (acc,rels,symbols,keep_attrs,rel){\nreturn (function (p1__23643_SHARP_){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(keep_attrs,p1__23643_SHARP_);\n});})(acc,rels,symbols,keep_attrs,rel))\n,symbols));\nvar len = cljs.core.count(symbols);\nvar G__23884 = datascript.query._collect_tuples(acc,rel,len,copy_map);\nvar G__23885 = cljs.core.next(rels);\nvar G__23886 = symbols;\nacc = G__23884;\nrels = G__23885;\nsymbols = G__23886;\ncontinue;\n\n}\n}\n}\nbreak;\n}\n}));\n\n(datascript.query._collect.cljs$lang$maxFixedArity = 3);\n\ndatascript.query.collect = (function datascript$query$collect(context,symbols){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs.core.vec),datascript.query._collect.cljs$core$IFn$_invoke$arity$2(context,symbols));\n});\n\n/**\n * @interface\n */\ndatascript.query.IContextResolve = function(){};\n\nvar datascript$query$IContextResolve$_context_resolve$dyn_23888 = (function (var$,context){\nvar x__5393__auto__ = (((var$ == null))?null:var$);\nvar m__5394__auto__ = (datascript.query._context_resolve[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ == null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(var$,context) : m__5394__auto__.call(null,var$,context));\n} else {\nvar m__5392__auto__ = (datascript.query._context_resolve[\"_\"]);\nif((!((m__5392__auto__ == null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(var$,context) : m__5392__auto__.call(null,var$,context));\n} else {\nthrow cljs.core.missing_protocol(\"IContextResolve.-context-resolve\",var$);\n}\n}\n});\ndatascript.query._context_resolve = (function datascript$query$_context_resolve(var$,context){\nif((((!((var$ == null)))) && ((!((var$.datascript$query$IContextResolve$_context_resolve$arity$2 == null)))))){\nreturn var$.datascript$query$IContextResolve$_context_resolve$arity$2(var$,context);\n} else {\nreturn datascript$query$IContextResolve$_context_resolve$dyn_23888(var$,context);\n}\n});\n\n(datascript.parser.Variable.prototype.datascript$query$IContextResolve$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.Variable.prototype.datascript$query$IContextResolve$_context_resolve$arity$2 = (function (var$,context){\nvar var$__$1 = this;\nreturn datascript.query.context_resolve_val(context,var$__$1.symbol);\n}));\n\n(datascript.parser.SrcVar.prototype.datascript$query$IContextResolve$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.SrcVar.prototype.datascript$query$IContextResolve$_context_resolve$arity$2 = (function (var$,context){\nvar var$__$1 = this;\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),var$__$1.symbol], null));\n}));\n\n(datascript.parser.PlainSymbol.prototype.datascript$query$IContextResolve$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.PlainSymbol.prototype.datascript$query$IContextResolve$_context_resolve$arity$2 = (function (var$,_){\nvar var$__$1 = this;\nvar or__5045__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(datascript.built_ins.aggregates,var$__$1.symbol);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn datascript.query.resolve_sym(var$__$1.symbol);\n}\n}));\n\n(datascript.parser.Constant.prototype.datascript$query$IContextResolve$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.Constant.prototype.datascript$query$IContextResolve$_context_resolve$arity$2 = (function (var$,_){\nvar var$__$1 = this;\nreturn var$__$1.value;\n}));\ndatascript.query._aggregate = (function datascript$query$_aggregate(find_elements,context,tuples){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$4((function (element,fixed_value,i){\nif(datascript.parser.aggregate_QMARK_(element)){\nvar f = datascript.query._context_resolve(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204).cljs$core$IFn$_invoke$arity$1(element),context);\nvar args = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__23646_SHARP_){\nreturn datascript.query._context_resolve(p1__23646_SHARP_,context);\n}),cljs.core.butlast(new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(element)));\nvar vals = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__23647_SHARP_){\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(p1__23647_SHARP_,i);\n}),tuples);\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(args,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [vals], null)));\n} else {\nreturn fixed_value;\n}\n}),find_elements,cljs.core.first(tuples),cljs.core.range.cljs$core$IFn$_invoke$arity$0());\n});\ndatascript.query.idxs_of = (function datascript$query$idxs_of(pred,coll){\nreturn cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (p1__23648_SHARP_,p2__23649_SHARP_){\nif(cljs.core.truth_((pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(p1__23648_SHARP_) : pred.call(null,p1__23648_SHARP_)))){\nreturn p2__23649_SHARP_;\n} else {\nreturn null;\n}\n}),coll,cljs.core.range.cljs$core$IFn$_invoke$arity$0()));\n});\ndatascript.query.aggregate = (function datascript$query$aggregate(find_elements,context,resultset){\nvar group_idxs = datascript.query.idxs_of(cljs.core.complement(datascript.parser.aggregate_QMARK_),find_elements);\nvar group_fn = (function (tuple){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__23650_SHARP_){\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(tuple,p1__23650_SHARP_);\n}),group_idxs);\n});\nvar grouped = cljs.core.group_by(group_fn,resultset);\nvar iter__5523__auto__ = (function datascript$query$aggregate_$_iter__23651(s__23652){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__23652__$1 = s__23652;\nwhile(true){\nvar temp__5804__auto__ = cljs.core.seq(s__23652__$1);\nif(temp__5804__auto__){\nvar s__23652__$2 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__23652__$2)){\nvar c__5521__auto__ = cljs.core.chunk_first(s__23652__$2);\nvar size__5522__auto__ = cljs.core.count(c__5521__auto__);\nvar b__23654 = cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__23653 = (0);\nwhile(true){\nif((i__23653 < size__5522__auto__)){\nvar vec__23655 = cljs.core._nth(c__5521__auto__,i__23653);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23655,(0),null);\nvar tuples = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23655,(1),null);\ncljs.core.chunk_append(b__23654,datascript.query._aggregate(find_elements,context,tuples));\n\nvar G__23891 = (i__23653 + (1));\ni__23653 = G__23891;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__23654),datascript$query$aggregate_$_iter__23651(cljs.core.chunk_rest(s__23652__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__23654),null);\n}\n} else {\nvar vec__23658 = cljs.core.first(s__23652__$2);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23658,(0),null);\nvar tuples = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23658,(1),null);\nreturn cljs.core.cons(datascript.query._aggregate(find_elements,context,tuples),datascript$query$aggregate_$_iter__23651(cljs.core.rest(s__23652__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(grouped);\n});\ndatascript.query.map_STAR_ = (function datascript$query$map_STAR_(f,xs){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__23661_SHARP_,p2__23662_SHARP_){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23661_SHARP_,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p2__23662_SHARP_) : f.call(null,p2__23662_SHARP_)));\n}),cljs.core.empty(xs),xs);\n});\ndatascript.query.tuples__GT_return_map = (function datascript$query$tuples__GT_return_map(return_map,tuples){\nvar symbols = new cljs.core.Keyword(null,\"symbols\",\"symbols\",1211743).cljs$core$IFn$_invoke$arity$1(return_map);\nvar idxs = cljs.core.range.cljs$core$IFn$_invoke$arity$2((0),cljs.core.count(symbols));\nreturn datascript.query.map_STAR_((function (tuple){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,i){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(symbols,i),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(tuple,i));\n}),cljs.core.PersistentArrayMap.EMPTY,idxs);\n}),tuples);\n});\n\n/**\n * @interface\n */\ndatascript.query.IPostProcess = function(){};\n\nvar datascript$query$IPostProcess$_post_process$dyn_23895 = (function (find,return_map,tuples){\nvar x__5393__auto__ = (((find == null))?null:find);\nvar m__5394__auto__ = (datascript.query._post_process[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ == null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$3(find,return_map,tuples) : m__5394__auto__.call(null,find,return_map,tuples));\n} else {\nvar m__5392__auto__ = (datascript.query._post_process[\"_\"]);\nif((!((m__5392__auto__ == null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$3(find,return_map,tuples) : m__5392__auto__.call(null,find,return_map,tuples));\n} else {\nthrow cljs.core.missing_protocol(\"IPostProcess.-post-process\",find);\n}\n}\n});\ndatascript.query._post_process = (function datascript$query$_post_process(find,return_map,tuples){\nif((((!((find == null)))) && ((!((find.datascript$query$IPostProcess$_post_process$arity$3 == null)))))){\nreturn find.datascript$query$IPostProcess$_post_process$arity$3(find,return_map,tuples);\n} else {\nreturn datascript$query$IPostProcess$_post_process$dyn_23895(find,return_map,tuples);\n}\n});\n\n(datascript.parser.FindRel.prototype.datascript$query$IPostProcess$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.FindRel.prototype.datascript$query$IPostProcess$_post_process$arity$3 = (function (_,return_map,tuples){\nvar ___$1 = this;\nif((return_map == null)){\nreturn tuples;\n} else {\nreturn datascript.query.tuples__GT_return_map(return_map,tuples);\n}\n}));\n\n(datascript.parser.FindColl.prototype.datascript$query$IPostProcess$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.FindColl.prototype.datascript$query$IPostProcess$_post_process$arity$3 = (function (_,return_map,tuples){\nvar ___$1 = this;\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs.core.first),tuples);\n}));\n\n(datascript.parser.FindScalar.prototype.datascript$query$IPostProcess$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.FindScalar.prototype.datascript$query$IPostProcess$_post_process$arity$3 = (function (_,return_map,tuples){\nvar ___$1 = this;\nreturn cljs.core.ffirst(tuples);\n}));\n\n(datascript.parser.FindTuple.prototype.datascript$query$IPostProcess$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.FindTuple.prototype.datascript$query$IPostProcess$_post_process$arity$3 = (function (_,return_map,tuples){\nvar ___$1 = this;\nif((!((return_map == null)))){\nreturn cljs.core.first(datascript.query.tuples__GT_return_map(return_map,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(tuples)], null)));\n} else {\nreturn cljs.core.first(tuples);\n}\n}));\ndatascript.query.pull = (function datascript$query$pull(find_elements,context,resultset){\nvar resolved = (function (){var iter__5523__auto__ = (function datascript$query$pull_$_iter__23663(s__23664){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__23664__$1 = s__23664;\nwhile(true){\nvar temp__5804__auto__ = cljs.core.seq(s__23664__$1);\nif(temp__5804__auto__){\nvar s__23664__$2 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__23664__$2)){\nvar c__5521__auto__ = cljs.core.chunk_first(s__23664__$2);\nvar size__5522__auto__ = cljs.core.count(c__5521__auto__);\nvar b__23666 = cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__23665 = (0);\nwhile(true){\nif((i__23665 < size__5522__auto__)){\nvar find = cljs.core._nth(c__5521__auto__,i__23665);\ncljs.core.chunk_append(b__23666,((datascript.parser.pull_QMARK_(find))?(function (){var db = datascript.query._context_resolve(new cljs.core.Keyword(null,\"source\",\"source\",-433931539).cljs$core$IFn$_invoke$arity$1(find),context);\nvar pattern = datascript.query._context_resolve(new cljs.core.Keyword(null,\"pattern\",\"pattern\",242135423).cljs$core$IFn$_invoke$arity$1(find),context);\nreturn datascript.pull_api.parse_opts.cljs$core$IFn$_invoke$arity$2(db,pattern);\n})():null));\n\nvar G__23898 = (i__23665 + (1));\ni__23665 = G__23898;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__23666),datascript$query$pull_$_iter__23663(cljs.core.chunk_rest(s__23664__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__23666),null);\n}\n} else {\nvar find = cljs.core.first(s__23664__$2);\nreturn cljs.core.cons(((datascript.parser.pull_QMARK_(find))?(function (){var db = datascript.query._context_resolve(new cljs.core.Keyword(null,\"source\",\"source\",-433931539).cljs$core$IFn$_invoke$arity$1(find),context);\nvar pattern = datascript.query._context_resolve(new cljs.core.Keyword(null,\"pattern\",\"pattern\",242135423).cljs$core$IFn$_invoke$arity$1(find),context);\nreturn datascript.pull_api.parse_opts.cljs$core$IFn$_invoke$arity$2(db,pattern);\n})():null),datascript$query$pull_$_iter__23663(cljs.core.rest(s__23664__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(find_elements);\n})();\nvar iter__5523__auto__ = (function datascript$query$pull_$_iter__23667(s__23668){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__23668__$1 = s__23668;\nwhile(true){\nvar temp__5804__auto__ = cljs.core.seq(s__23668__$1);\nif(temp__5804__auto__){\nvar s__23668__$2 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__23668__$2)){\nvar c__5521__auto__ = cljs.core.chunk_first(s__23668__$2);\nvar size__5522__auto__ = cljs.core.count(c__5521__auto__);\nvar b__23670 = cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__23669 = (0);\nwhile(true){\nif((i__23669 < size__5522__auto__)){\nvar tuple = cljs.core._nth(c__5521__auto__,i__23669);\ncljs.core.chunk_append(b__23670,cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(((function (i__23669,tuple,c__5521__auto__,size__5522__auto__,b__23670,s__23668__$2,temp__5804__auto__,resolved){\nreturn (function (parsed_opts,el){\nif(cljs.core.truth_(parsed_opts)){\nreturn datascript.pull_api.pull_impl(parsed_opts,el);\n} else {\nreturn el;\n}\n});})(i__23669,tuple,c__5521__auto__,size__5522__auto__,b__23670,s__23668__$2,temp__5804__auto__,resolved))\n,resolved,tuple));\n\nvar G__23899 = (i__23669 + (1));\ni__23669 = G__23899;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__23670),datascript$query$pull_$_iter__23667(cljs.core.chunk_rest(s__23668__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__23670),null);\n}\n} else {\nvar tuple = cljs.core.first(s__23668__$2);\nreturn cljs.core.cons(cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(((function (tuple,s__23668__$2,temp__5804__auto__,resolved){\nreturn (function (parsed_opts,el){\nif(cljs.core.truth_(parsed_opts)){\nreturn datascript.pull_api.pull_impl(parsed_opts,el);\n} else {\nreturn el;\n}\n});})(tuple,s__23668__$2,temp__5804__auto__,resolved))\n,resolved,tuple),datascript$query$pull_$_iter__23667(cljs.core.rest(s__23668__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(resultset);\n});\ndatascript.query.q = (function datascript$query$q(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___23901 = arguments.length;\nvar i__5770__auto___23903 = (0);\nwhile(true){\nif((i__5770__auto___23903 < len__5769__auto___23901)){\nargs__5775__auto__.push((arguments[i__5770__auto___23903]));\n\nvar G__23904 = (i__5770__auto___23903 + (1));\ni__5770__auto___23903 = G__23904;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((1) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn datascript.query.q.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(datascript.query.q.cljs$core$IFn$_invoke$arity$variadic = (function (q,inputs){\nvar parsed_q = datascript.lru._get(datascript.query._STAR_query_cache_STAR_,q,(function (){\nreturn datascript.parser.parse_query(q);\n}));\nvar find = new cljs.core.Keyword(null,\"qfind\",\"qfind\",1529332972).cljs$core$IFn$_invoke$arity$1(parsed_q);\nvar find_elements = datascript.parser.find_elements(find);\nvar find_vars = datascript.parser.find_vars(find);\nvar result_arity = cljs.core.count(find_elements);\nvar with$ = new cljs.core.Keyword(null,\"qwith\",\"qwith\",-45809392).cljs$core$IFn$_invoke$arity$1(parsed_q);\nvar all_vars = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(find_vars,cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"symbol\",\"symbol\",-1038572696),with$));\nvar q__$1 = (function (){var G__23674 = q;\nif(cljs.core.sequential_QMARK_(q)){\nreturn datascript.parser.query__GT_map(G__23674);\n} else {\nreturn G__23674;\n}\n})();\nvar wheres = new cljs.core.Keyword(null,\"where\",\"where\",-2044795965).cljs$core$IFn$_invoke$arity$1(q__$1);\nvar context = datascript.query.resolve_ins((new datascript.query.Context(cljs.core.PersistentVector.EMPTY,cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentArrayMap.EMPTY,null,null,null)),new cljs.core.Keyword(null,\"qin\",\"qin\",1372651151).cljs$core$IFn$_invoke$arity$1(parsed_q),inputs);\nvar resultset = datascript.query.collect(datascript.query._q(context,wheres),all_vars);\nvar G__23675 = resultset;\nvar G__23675__$1 = (cljs.core.truth_(new cljs.core.Keyword(null,\"with\",\"with\",-1536296876).cljs$core$IFn$_invoke$arity$1(q__$1))?cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__23671_SHARP_){\nreturn cljs.core.vec(cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(p1__23671_SHARP_,(0),result_arity));\n}),G__23675):G__23675);\nvar G__23675__$2 = (cljs.core.truth_(cljs.core.some(datascript.parser.aggregate_QMARK_,find_elements))?datascript.query.aggregate(find_elements,context,G__23675__$1):G__23675__$1);\nvar G__23675__$3 = (cljs.core.truth_(cljs.core.some(datascript.parser.pull_QMARK_,find_elements))?datascript.query.pull(find_elements,context,G__23675__$2):G__23675__$2);\nreturn datascript.query._post_process(find,new cljs.core.Keyword(null,\"qreturn-map\",\"qreturn-map\",1841215994).cljs$core$IFn$_invoke$arity$1(parsed_q),G__23675__$3);\n\n}));\n\n(datascript.query.q.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(datascript.query.q.cljs$lang$applyTo = (function (seq23672){\nvar G__23673 = cljs.core.first(seq23672);\nvar seq23672__$1 = cljs.core.next(seq23672);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23673,seq23672__$1);\n}));\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","datascript/query.cljc","~:line",1,"~:column",14,"~:end-line",1,"~:end-column",30,"~:no-doc",true],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$raise","~$datascript.db","~$cond+","^I"],"~:excludes",["~#set",[]],"~:name","~$datascript.query","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$da","~$me.tonsky.persistent-sorted-set.arrays","~$set","~$clojure.set","~$built-ins","~$datascript.built-ins","~$dpa","~$datascript.pull-api","~$cljs.core","^10","~$goog","^11","~$walk","~$clojure.walk","~$datascript.parser","^14","~$db","^I","^W","^W","~$lru","~$datascript.lru","^17","^17","^Y","^Y","^I","^I","^U","^U","^[","^[","~$str","~$clojure.string","^19","^19","~$de","~$datascript.impl.entity","~$dp","^14","~$cljs.reader","^1=","^13","^13","~$edn","^1=","^1;","^1;"],"~:seen",["^L",["~:require"]],"~:uses",["^ ","~$Constant","^14","~$BindIgnore","^14","~$FindTuple","^14","~$SrcVar","^14","~$FindColl","^14","~$BindTuple","^14","~$BindColl","^14","~$BindScalar","^14","~$PlainSymbol","^14","~$FindRel","^14","~$FindScalar","^14","~$RulesVar","^14","~$Variable","^14"],"~:require-macros",["^ ","^T","^U","^10","^10","^14","^14","^15","^I","^I","^I","^U","^U","^1<","^14","^1=","^1=","^1>","^1="],"~:form",["~#list",["~$ns","^N",["^1Q",["^1@",["^1=","~:as","^1>"],["^W","^1S","^V"],["^19","^1S","^18"],["^13","^1S","^12"],["^Y","^1S","^X"],["^I","^1S","^15","~:refer-macros",["^H","^J"]],["^U","^1S","^T"],["^17","^1S","^16"],["^1;","^1S","^1:"],["^14","^1S","^1<","~:refer",["^1H","^1C","^1I","^1G","^1B","^1F","^1K","^1L","^1D","^1J","^1M","^1E","^1N"]],["^[","^1S","^Z"]]]]],"~:flags",["^ ","^1@",["^L",[]]],"~:js-deps",["^ "],"~:deps",["^11","^10","^1=","^W","^19","^13","^Y","^I","^U","^17","^1;","^14","^["]],"^Q","^N","~:resource-id",["~:shadow.build.classpath/resource","datascript/query.cljc"],"~:compiled-at",1696770187760,"^O",["^ ","^T","^U","^V","^W","^X","^Y","^Z","^[","^10","^10","^11","^11","^12","^13","^14","^14","^15","^I","^W","^W","^16","^17","^17","^17","^Y","^Y","^I","^I","^U","^U","^[","^[","^18","^19","^19","^19","^1:","^1;","^1<","^14","^1=","^1=","^13","^13","^1>","^1=","^1;","^1;"],"~:resource-name","datascript/query.cljc","~:warnings",[],"~:source","(ns ^:no-doc datascript.query\n  (:require\n   [#?(:cljs cljs.reader :clj clojure.edn) :as edn]\n   [clojure.set :as set]\n   [clojure.string :as str]\n   [clojure.walk :as walk]\n   [datascript.built-ins :as built-ins]\n   [datascript.db :as db #?(:cljs :refer-macros :clj :refer) [raise cond+]]\n   [me.tonsky.persistent-sorted-set.arrays :as da]\n   [datascript.lru :as lru]\n   [datascript.impl.entity :as de]\n   [datascript.parser :as dp #?@(:cljs [:refer [BindColl BindIgnore BindScalar BindTuple Constant\n                                                FindColl FindRel FindScalar FindTuple PlainSymbol\n                                                RulesVar SrcVar Variable]])]\n   [datascript.pull-api :as dpa])\n  #?(:clj\n     (:import\n      [clojure.lang ILookup LazilyPersistentVector]\n      [datascript.parser BindColl BindIgnore BindScalar BindTuple\n       Constant FindColl FindRel FindScalar FindTuple PlainSymbol\n       RulesVar SrcVar Variable])))\n\n#?(:clj (set! *warn-on-reflection* true))\n\n;; ----------------------------------------------------------------------------\n\n(def ^:dynamic *query-cache* (lru/cache 100))\n\n(declare -collect -resolve-clause resolve-clause)\n\n;; Records\n\n(defrecord Context [rels sources rules])\n\n;; attrs:\n;;    {?e 0, ?v 1} or {?e2 \"a\", ?age \"v\"}\n;; tuples:\n;;    [ #js [1 \"Ivan\" 5 14] ... ]\n;; or [ (Datom. 2 \"Oleg\" 1 55) ... ]\n(defrecord Relation [attrs tuples])\n\n\n;; Utilities\n\n(defn single [coll]\n  (assert (nil? (next coll)) \"Expected single element\")\n  (first coll))\n\n(defn intersect-keys [attrs1 attrs2]\n  (set/intersection (set (keys attrs1))\n                    (set (keys attrs2))))\n\n(defn concatv [& xs]\n  (into [] cat xs))\n\n(defn zip\n  ([a b] (mapv vector a b))\n  ([a b & rest] (apply mapv vector a b rest)))\n\n(defn same-keys? [a b]\n  (and (= (count a) (count b))\n       (every? #(contains? b %) (keys a))\n       (every? #(contains? b %) (keys a))))\n\n(defn- looks-like? [pattern form]\n  (cond\n    (= '_ pattern)\n      true\n    (= '[*] pattern)\n      (sequential? form)\n    (symbol? pattern)\n      (= form pattern)\n    (sequential? pattern)\n      (if (= (last pattern) '*)\n        (and (sequential? form)\n             (every? (fn [[pattern-el form-el]] (looks-like? pattern-el form-el))\n                     (map vector (butlast pattern) form)))\n        (and (sequential? form)\n             (= (count form) (count pattern))\n             (every? (fn [[pattern-el form-el]] (looks-like? pattern-el form-el))\n                     (map vector pattern form))))\n    :else ;; (predicate? pattern)\n      (pattern form)))\n\n(defn source? [sym]\n  (and (symbol? sym)\n       (= \\$ (first (name sym)))))\n\n(defn free-var? [sym]\n  (and (symbol? sym)\n       (= \\? (first (name sym)))))\n\n(defn attr? [form]\n  (or (keyword? form) (string? form)))\n\n(defn lookup-ref? [form]\n  (looks-like? [attr? '_] form))\n\n;; Relation algebra\n\n#?(:clj (set! *unchecked-math* true))\n\n#?(:clj\n   (defn join-tuples [t1 ^{:tag \"[[Ljava.lang.Object;\"} idxs1\n                      t2 ^{:tag \"[[Ljava.lang.Object;\"} idxs2]\n     (let [l1  (alength idxs1)\n           l2  (alength idxs2)\n           res (da/make-array (+ l1 l2))]\n       (if (.isArray (.getClass ^Object t1))\n         (dotimes [i l1] (aset res i (aget ^objects t1 (aget idxs1 i))))\n         (dotimes [i l1] (aset res i (get t1 (aget idxs1 i)))))\n       (if (.isArray (.getClass ^Object t2))\n         (dotimes [i l2] (aset res (+ l1 i) (get ^objects t2 (aget idxs2 i))))\n         (dotimes [i l2] (aset res (+ l1 i) (get t2 (aget idxs2 i)))))\n       res))\n   :cljs\n   (defn join-tuples [t1 idxs1\n                      t2 idxs2]\n     (let [l1  (alength idxs1)\n           l2  (alength idxs2)\n           res (da/make-array (+ l1 l2))]\n       (dotimes [i l1] (aset res i (da/aget t1 (aget idxs1 i))))\n       (dotimes [i l2] (aset res (+ l1 i) (da/aget t2 (aget idxs2 i))))\n       res)))\n\n#?(:clj (set! *unchecked-math* false))\n\n(defn sum-rel [a b]\n  (let [{attrs-a :attrs, tuples-a :tuples} a\n        {attrs-b :attrs, tuples-b :tuples} b]\n    (cond\n      (= attrs-a attrs-b)\n      (Relation. attrs-a (into (vec tuples-a) tuples-b))\n\n      (not (same-keys? attrs-a attrs-b))\n      (raise \"Can’t sum relations with different attrs: \" attrs-a \" and \" attrs-b\n             {:error :query/where})\n\n      (every? number? (vals attrs-a)) ;; can’t conj into BTSetIter\n      (let [idxb->idxa (vec (for [[sym idx-b] attrs-b]\n                              [idx-b (attrs-a sym)]))\n            tlen    (->> (vals attrs-a) (reduce max) (inc)) \n            tuples' (persistent!\n                      (reduce\n                        (fn [acc tuple-b]\n                          (let [tuple' (da/make-array tlen)]\n                            (doseq [[idx-b idx-a] idxb->idxa]\n                              (aset tuple' idx-a (#?(:cljs da/aget :clj get) tuple-b idx-b)))\n                            (conj! acc tuple')))\n                        (transient (vec tuples-a))\n                        tuples-b))]\n        (Relation. attrs-a tuples'))\n\n      :else\n      (let [all-attrs (zipmap (keys (merge attrs-a attrs-b)) (range))]\n        (-> (Relation. all-attrs [])\n            (sum-rel a)\n            (sum-rel b))))))\n\n(defn prod-rel\n  ([] (Relation. {} [(da/make-array 0)]))\n  ([rel1 rel2]\n    (let [attrs1 (keys (:attrs rel1))\n          attrs2 (keys (:attrs rel2))\n          idxs1  (to-array (map (:attrs rel1) attrs1))\n          idxs2  (to-array (map (:attrs rel2) attrs2))]\n      (Relation.\n        (zipmap (concat attrs1 attrs2) (range))\n        (persistent!\n          (reduce\n            (fn [acc t1]\n              (reduce (fn [acc t2]\n                        (conj! acc (join-tuples t1 idxs1 t2 idxs2)))\n                      acc (:tuples rel2)))\n            (transient []) (:tuples rel1)))\n        ))))\n\n;;\n\n(defn parse-rules [rules]\n  (let [rules (if (string? rules) (edn/read-string rules) rules)] ;; for datascript.js interop\n    (dp/parse-rules rules) ;; validation\n    (group-by ffirst rules)))\n\n(defn empty-rel [binding]\n  (let [vars (->> (dp/collect-vars-distinct binding)\n               (map :symbol))]\n    (Relation. (zipmap vars (range)) [])))\n\n(defprotocol IBinding\n  (in->rel [binding value]))\n\n(extend-protocol IBinding\n  BindIgnore\n  (in->rel [_ _]\n    (prod-rel))\n  \n  BindScalar\n  (in->rel [binding value]\n    (Relation. {(get-in binding [:variable :symbol]) 0} [(into-array [value])]))\n  \n  BindColl\n  (in->rel [binding coll]\n    (cond\n      (not (db/seqable? coll))\n        (raise \"Cannot bind value \" coll \" to collection \" (dp/source binding)\n               {:error :query/binding, :value coll, :binding (dp/source binding)})\n      (empty? coll)\n        (empty-rel binding)\n      :else\n        (->> coll\n          (map #(in->rel (:binding binding) %))\n          (reduce sum-rel))))\n  \n  BindTuple\n  (in->rel [binding coll]\n    (cond\n      (not (db/seqable? coll))\n        (raise \"Cannot bind value \" coll \" to tuple \" (dp/source binding)\n               {:error :query/binding, :value coll, :binding (dp/source binding)})\n      (< (count coll) (count (:bindings binding)))\n        (raise \"Not enough elements in a collection \" coll \" to bind tuple \" (dp/source binding)\n               {:error :query/binding, :value coll, :binding (dp/source binding)})\n      :else\n        (reduce prod-rel\n          (map #(in->rel %1 %2) (:bindings binding) coll)))))\n\n(defn resolve-in [context [binding value]]\n  (cond\n    (and (instance? BindScalar binding)\n         (instance? SrcVar (:variable binding)))\n      (update context :sources assoc (get-in binding [:variable :symbol]) value)\n    (and (instance? BindScalar binding)\n         (instance? RulesVar (:variable binding)))\n      (assoc context :rules (parse-rules value))\n    :else\n      (update context :rels conj (in->rel binding value))))\n\n(defn resolve-ins [context bindings values]\n  (let [cb (count bindings)\n        cv (count values)]\n    (cond\n      (< cb cv)\n      (raise \"Extra inputs passed, expected: \" (mapv #(:source (meta %)) bindings) \", got: \" cv\n        {:error :query/inputs :expected bindings :got values})\n\n      (> cb cv)\n      (raise \"Too few inputs passed, expected: \" (mapv #(:source (meta %)) bindings) \", got: \" cv\n        {:error :query/inputs :expected bindings :got values})\n\n      :else\n      (reduce resolve-in context (zipmap bindings values)))))\n\n;;\n\n(def ^{:dynamic true\n       :doc \"List of symbols in current pattern that might potentiall be resolved to refs\"}\n  *lookup-attrs* nil)\n\n(def ^{:dynamic true\n       :doc \"Default pattern source. Lookup refs, patterns, rules will be resolved with it\"}\n  *implicit-source* nil)\n\n(defn getter-fn [attrs attr]\n  (let [idx (attrs attr)]\n    (if (contains? *lookup-attrs* attr)\n      (if (int? idx)\n        (let [idx (int idx)]\n          (fn contained-int-getter-fn [tuple]\n            (let [eid #?(:cljs (da/aget tuple idx)\n                         :clj (if (.isArray (.getClass ^Object tuple))\n                                (aget ^objects tuple idx)\n                                (nth tuple idx)))]\n              (cond\n                (number? eid)     eid ;; quick path to avoid fn call\n                (sequential? eid) (db/entid *implicit-source* eid)\n                (da/array? eid)   (db/entid *implicit-source* eid)\n                :else             eid))))\n        ;; If the index is not an int?, the target can never be an array\n        (fn contained-getter-fn [tuple]\n          (let [eid #?(:cljs (da/aget tuple idx)\n                       :clj (.valAt ^ILookup tuple idx))]\n            (cond\n              (number? eid)     eid ;; quick path to avoid fn call\n              (sequential? eid) (db/entid *implicit-source* eid)\n              (da/array? eid)   (db/entid *implicit-source* eid)\n              :else             eid))))\n      (if (int? idx)\n        (let [idx (int idx)]\n          (fn int-getter [tuple]\n            #?(:cljs (da/aget tuple idx)\n               :clj (if (.isArray (.getClass ^Object tuple))\n                      (aget ^objects tuple idx)\n                      (nth tuple idx)))))\n        ;; If the index is not an int?, the target can never be an array\n        (fn getter [tuple]\n          #?(:cljs (da/aget tuple idx)\n             :clj (.valAt ^ILookup tuple idx)))))))\n\n\n(defn tuple-key-fn\n  [attrs common-attrs]\n  (let [n (count common-attrs)]\n    (if (== n 1)\n      (getter-fn attrs (first common-attrs))\n      (let [^objects getters-arr #?(:clj (into-array Object common-attrs)\n                                    :cljs (into-array common-attrs))]\n        (loop [i 0]\n          (if (< i n)\n            (do\n              (aset getters-arr i (getter-fn attrs (aget getters-arr i)))\n              (recur (unchecked-inc i)))\n            #?(:clj\n               (fn [tuple]\n                 (let [^objects arr (make-array Object n)]\n                   (loop [i 0]\n                     (if (< i n)\n                       (do\n                         (aset arr i ((aget getters-arr i) tuple))\n                         (recur (unchecked-inc i)))\n                       (LazilyPersistentVector/createOwning arr)))))\n               :cljs (fn [tuple]\n                       (list* (.map getters-arr #(% tuple)))))))))))\n\n(defn -group-by\n  [f init coll]\n  (persistent!\n   (reduce\n    (fn [ret x]\n      (let [k (f x)]\n        (assoc! ret k (conj (get ret k init) x))))\n    (transient {}) coll)))\n\n(defn hash-attrs [key-fn tuples]\n  (-group-by key-fn '() tuples))\n\n(defn hash-join [rel1 rel2]\n  (let [tuples1       (:tuples rel1)\n        tuples2       (:tuples rel2)\n        attrs1        (:attrs rel1)\n        attrs2        (:attrs rel2)\n        common-attrs  (vec (intersect-keys (:attrs rel1) (:attrs rel2)))\n        keep-attrs1   (keys attrs1)\n        keep-attrs2   (->> attrs2\n                           (reduce-kv (fn keeper [vec k _]\n                                        (if (attrs1 k)\n                                          vec\n                                          (conj! vec k)))\n                                      (transient []))\n                           persistent!) ; keys in attrs2-attrs1\n        keep-idxs1    (to-array (vals attrs1))\n        keep-idxs2    (to-array (->Eduction (map attrs2) keep-attrs2)) ; vals in attrs2-attrs1 by keys\n        key-fn1       (tuple-key-fn attrs1 common-attrs)\n        key-fn2       (tuple-key-fn attrs2 common-attrs)\n        hash          (hash-attrs key-fn1 tuples1)\n        new-tuples    (->>\n                       tuples2\n                       (reduce (fn outer [acc tuple2]\n                                 (let [key (key-fn2 tuple2)]\n                                   (if-some [tuples1 #?(:clj (hash key) :cljs (get hash key))]\n                                     (reduce (fn inner [acc tuple1]\n                                               (conj! acc (join-tuples tuple1 keep-idxs1 tuple2 keep-idxs2)))\n                                             acc tuples1)\n                                     acc)))\n                               (transient []) )\n                       (persistent!))]\n    (Relation. (zipmap (concat keep-attrs1 keep-attrs2) (range))\n               new-tuples)))\n\n(defn subtract-rel [a b]\n  (let [{attrs-a :attrs, tuples-a :tuples} a\n        {attrs-b :attrs, tuples-b :tuples} b\n        attrs     (vec (intersect-keys attrs-a attrs-b))\n        key-fn-b  (tuple-key-fn attrs-b attrs)\n        hash      (hash-attrs key-fn-b tuples-b)\n        key-fn-a  (tuple-key-fn attrs-a attrs)]\n    (assoc a\n      :tuples (filterv #(nil? (hash (key-fn-a %))) tuples-a))))\n\n(defn lookup-pattern-db [db pattern]\n  ;; TODO optimize with bound attrs min/max values here\n  (let [search-pattern (mapv #(if (or (= % '_) (free-var? %)) nil %) pattern)\n        datoms         (db/-search db search-pattern)\n        attr->prop     (->> (map vector pattern [\"e\" \"a\" \"v\" \"tx\"])\n                            (filter (fn [[s _]] (free-var? s)))\n                            (into {}))]\n    (Relation. attr->prop datoms)))\n\n(defn matches-pattern? [pattern tuple]\n  (loop [tuple   tuple\n         pattern pattern]\n    (if (and tuple pattern)\n      (let [t (first tuple)\n            p (first pattern)]\n        (if (or (= p '_) (free-var? p) (= t p))\n          (recur (next tuple) (next pattern))\n          false))\n      true)))\n\n(defn lookup-pattern-coll [coll pattern]\n  (let [data       (filter #(matches-pattern? pattern %) coll)\n        attr->idx  (->> (map vector pattern (range))\n                        (filter (fn [[s _]] (free-var? s)))\n                        (into {}))]\n    (Relation. attr->idx (mapv to-array data)))) ;; FIXME to-array\n\n(defn normalize-pattern-clause [clause]\n  (if (source? (first clause))\n    clause\n    (concat ['$] clause)))\n\n(defn lookup-pattern [source pattern]\n  (cond\n    (satisfies? db/ISearch source)\n      (lookup-pattern-db source pattern)\n    :else\n      (lookup-pattern-coll source pattern)))\n\n(defn collapse-rels [rels new-rel]\n  (loop [rels    rels\n         new-rel new-rel\n         acc     []]\n    (if-some [rel (first rels)]\n      (if (not-empty (intersect-keys (:attrs new-rel) (:attrs rel)))\n        (recur (next rels) (hash-join rel new-rel) acc)\n        (recur (next rels) new-rel (conj acc rel)))\n      (conj acc new-rel))))\n\n(defn- rel-with-attr [context sym]\n  (some #(when (contains? (:attrs %) sym) %) (:rels context)))\n\n(defn- context-resolve-val [context sym]\n  (when-some [rel (rel-with-attr context sym)]\n    (when-some [tuple (first (:tuples rel))]\n      (#?(:cljs da/aget :clj get) tuple ((:attrs rel) sym)))))\n\n(defn- rel-contains-attrs? [rel attrs]\n  (some #(contains? (:attrs rel) %) attrs))\n\n(defn- rel-prod-by-attrs [context attrs]\n  (let [rels       (filter #(rel-contains-attrs? % attrs) (:rels context))\n        production (reduce prod-rel rels)]\n    [(update context :rels #(remove (set rels) %)) production]))\n\n(defn -call-fn [context rel f args]\n  (let [sources     (:sources context)\n        attrs       (:attrs rel)\n        len         (count args)\n        static-args (da/make-array len)\n        tuples-args (da/make-array len)]\n    (dotimes [i len]\n      (let [arg (nth args i)]\n        (if (symbol? arg) \n          (if-some [source (get sources arg)]\n            (da/aset static-args i source)\n            (da/aset tuples-args i (get attrs arg)))\n          (da/aset static-args i arg))))\n    ;; CLJS `apply` + `vector` will hold onto mutable array of arguments directly\n    ;; https://github.com/tonsky/datascript/issues/262\n    (if #?(:clj  false\n           :cljs (identical? f vector))\n      (fn [tuple]\n        ;; TODO raise if not all args are bound\n        (let [args (da/aclone static-args)]\n          (dotimes [i len]\n            (when-some [tuple-idx (aget tuples-args i)]\n              (let [v (#?(:cljs da/aget :clj get) tuple tuple-idx)]\n                (da/aset args i v))))\n          (apply f args)))\n      (fn [tuple]\n        ;; TODO raise if not all args are bound\n        (dotimes [i len]\n          (when-some [tuple-idx (aget tuples-args i)]\n            (let [v (#?(:cljs da/aget :clj get) tuple tuple-idx)]\n              (da/aset static-args i v))))\n        (apply f static-args)))))\n\n(defn- resolve-sym [sym]\n  #?(:cljs nil\n     :clj (when (namespace sym)\n            (when-some [v (resolve sym)] @v))))\n\n(defn filter-by-pred [context clause]\n  (let [[[f & args]] clause\n        pred         (or (get built-ins/query-fns f)\n                         (context-resolve-val context f)\n                         (resolve-sym f)\n                         (when (nil? (rel-with-attr context f))\n                           (raise \"Unknown predicate '\" f \" in \" clause\n                                  {:error :query/where, :form clause, :var f})))\n        [context production] (rel-prod-by-attrs context (filter symbol? args))\n        new-rel      (if pred\n                       (let [tuple-pred (-call-fn context production pred args)]\n                         (update production :tuples #(filter tuple-pred %)))\n                       (assoc production :tuples []))]\n    (update context :rels conj new-rel)))\n\n(defn bind-by-fn [context clause]\n  (let [[[f & args] out] clause\n        binding  (dp/parse-binding out)\n        fun      (or (get built-ins/query-fns f)\n                     (context-resolve-val context f)\n                     (resolve-sym f)\n                     (when (nil? (rel-with-attr context f))\n                       (raise \"Unknown function '\" f \" in \" clause\n                              {:error :query/where, :form clause, :var f})))\n        [context production] (rel-prod-by-attrs context (filter symbol? args))\n        new-rel  (if fun\n                   (let [tuple-fn (-call-fn context production fun args)\n                        rels     (for [tuple (:tuples production)\n                                       :let  [val (tuple-fn tuple)]\n                                       :when (not (nil? val))]\n                                   (prod-rel (Relation. (:attrs production) [tuple])\n                                             (in->rel binding val)))]\n                     (if (empty? rels)\n                       (prod-rel production (empty-rel binding))\n                       (reduce sum-rel rels)))\n                   (prod-rel (assoc production :tuples []) (empty-rel binding)))]\n    (update context :rels collapse-rels new-rel)))\n\n;;; RULES\n\n(defn rule? [context clause]\n  (cond+\n    (not (sequential? clause))\n    false\n\n    :let [head (if (source? (first clause))\n                  (second clause)\n                  (first clause))]\n\n    (not (symbol? head))\n    false\n\n    (free-var? head)\n    false\n\n    (contains? #{'_ 'or 'or-join 'and 'not 'not-join} head)\n    false\n\n    (not (contains? (:rules context) head))\n    (raise \"Unknown rule '\" head \" in \" clause\n      {:error :query/where\n       :form  clause})\n\n    :else true))\n\n(def rule-seqid (atom 0))\n\n(defn expand-rule [clause context used-args]\n  (let [[rule & call-args] clause\n        seqid              (swap! rule-seqid inc)\n        branches           (get (:rules context) rule)]\n    (for [branch branches\n          :let [[[_ & rule-args] & clauses] branch\n                replacements (zipmap rule-args call-args)]]\n      (walk/postwalk\n       #(if (free-var? %)\n          (db/some-of\n            (replacements %)\n            (symbol (str (name %) \"__auto__\" seqid)))\n          %)\n        clauses))))\n\n(defn remove-pairs [xs ys]\n  (let [pairs (->> (map vector xs ys)\n                   (remove (fn [[x y]] (= x y))))]\n    [(map first pairs)\n     (map second pairs)]))\n\n(defn rule-gen-guards [rule-clause used-args]\n  (let [[rule & call-args] rule-clause\n        prev-call-args     (get used-args rule)]\n    (for [prev-args prev-call-args\n          :let [[call-args prev-args] (remove-pairs call-args prev-args)]]\n      [(concat ['-differ?] call-args prev-args)])))\n\n(defn walk-collect [form pred]\n  (let [res (atom [])]\n    (walk/postwalk #(do (when (pred %) (swap! res conj %)) %) form)\n    @res))\n\n(defn collect-vars [clause]\n  (set (walk-collect clause free-var?)))\n\n(defn split-guards [clauses guards]\n  (let [bound-vars (collect-vars clauses)\n        pred       (fn [[[_ & vars]]] (every? bound-vars vars))]\n    [(filter pred guards)\n     (remove pred guards)]))\n\n(defn solve-rule [context clause]\n  (let [final-attrs     (filter free-var? clause)\n        final-attrs-map (zipmap final-attrs (range))\n;;         clause-cache    (atom {}) ;; TODO\n        solve           (fn [prefix-context clauses]\n                          (reduce -resolve-clause prefix-context clauses))\n        empty-rels?     (fn [context]\n                          (some #(empty? (:tuples %)) (:rels context)))]\n    (loop [stack (list {:prefix-clauses []\n                        :prefix-context context\n                        :clauses        [clause]\n                        :used-args      {}\n                        :pending-guards {}})\n           rel   (Relation. final-attrs-map [])]\n      (if-some [frame (first stack)]\n        (let [[clauses [rule-clause & next-clauses]] (split-with #(not (rule? context %)) (:clauses frame))]\n          (if (nil? rule-clause)\n\n            ;; no rules -> expand, collect, sum\n            (let [context (solve (:prefix-context frame) clauses)\n                  tuples  (-collect context final-attrs)\n                  new-rel (Relation. final-attrs-map tuples)]\n              (recur (next stack) (sum-rel rel new-rel)))\n\n            ;; has rule -> add guards -> check if dead -> expand rule -> push to stack, recur\n            (let [[rule & call-args]     rule-clause\n                  guards                 (rule-gen-guards rule-clause (:used-args frame))\n                  [active-gs pending-gs] (split-guards (concat (:prefix-clauses frame) clauses)\n                                                       (concat guards (:pending-guards frame)))]\n              (if (some #(= % '[(-differ?)]) active-gs) ;; trivial always false case like [(not= [?a ?b] [?a ?b])]\n\n                ;; this branch has no data, just drop it from stack\n                (recur (next stack) rel)\n\n                (let [prefix-clauses (concat clauses active-gs)\n                      prefix-context (solve (:prefix-context frame) prefix-clauses)]\n                  (if (empty-rels? prefix-context)\n\n                    ;; this branch has no data, just drop it from stack\n                    (recur (next stack) rel)\n\n                    ;; need to expand rule to branches\n                    (let [used-args  (assoc (:used-args frame) rule\n                                       (conj (get (:used-args frame) rule []) call-args))\n                          branches   (expand-rule rule-clause context used-args)]\n                      (recur (concat\n                               (for [branch branches]\n                                 {:prefix-clauses prefix-clauses\n                                  :prefix-context prefix-context\n                                  :clauses        (concatv branch next-clauses)\n                                  :used-args      used-args\n                                  :pending-guards pending-gs})\n                               (next stack))\n                             rel))))))))\n        rel))))\n\n(defn resolve-pattern-lookup-refs [source pattern]\n  (if (satisfies? db/IDB source)\n    (let [[e a v tx] pattern]\n      (->\n        [(if (or (lookup-ref? e) (attr? e)) (db/entid-strict source e) e)\n         a\n         (if (and v (attr? a) (db/ref? source a) (or (lookup-ref? v) (attr? v))) (db/entid-strict source v) v)\n         (if (lookup-ref? tx) (db/entid-strict source tx) tx)]\n        (subvec 0 (count pattern))))\n    pattern))\n\n(defn dynamic-lookup-attrs [source pattern]\n  (let [[e a v tx] pattern]\n    (cond-> #{}\n      (free-var? e) (conj e)\n      (free-var? tx) (conj tx)\n      (and\n        (free-var? v)\n        (not (free-var? a))\n        (db/ref? source a)) (conj v))))\n\n(defn limit-rel [rel vars]\n  (when-some [attrs' (not-empty (select-keys (:attrs rel) vars))]\n    (assoc rel :attrs attrs')))\n\n(defn limit-context [context vars]\n  (assoc context\n    :rels (->> (:rels context)\n               (keep #(limit-rel % vars)))))\n\n(defn bound-vars [context]\n  (into #{} (mapcat #(keys (:attrs %)) (:rels context))))\n\n(defn check-bound [bound vars form]\n  (when-not (set/subset? vars bound)\n    (let [missing (set/difference (set vars) bound)]\n      (raise \"Insufficient bindings: \" missing \" not bound in \" form\n             {:error :query/where\n              :form  form\n              :vars  missing}))))\n\n(defn check-free-same [bound branches form]\n  (let [free (mapv #(set/difference (collect-vars %) bound) branches)]\n    (when-not (apply = free)\n      (raise \"All clauses in 'or' must use same set of free vars, had \" free \" in \" form\n             {:error :query/where\n              :form  form\n              :vars  free}))))\n\n(defn check-free-subset [bound vars branches]\n  (let [free (set (remove bound vars))]\n    (doseq [branch branches]\n      (when-some [missing (not-empty (set/difference free (collect-vars branch)))]\n        (prn branch bound vars free)\n        (raise \"All clauses in 'or' must use same set of free vars, had \" missing \" not bound in \" branch\n          {:error :query/where\n           :form  branch\n           :vars  missing})))))\n\n(defn -resolve-clause\n  ([context clause]\n    (-resolve-clause context clause clause))\n  ([context clause orig-clause]\n   (condp looks-like? clause\n     [[symbol? '*]] ;; predicate [(pred ?a ?b ?c)]\n     (do\n       (check-bound (bound-vars context) (filter free-var? (nfirst clause)) clause)\n       (filter-by-pred context clause))\n     \n     [[symbol? '*] '_] ;; function [(fn ?a ?b) ?res]\n     (do\n       (check-bound (bound-vars context) (filter free-var? (nfirst clause)) clause)\n       (bind-by-fn context clause))\n     \n     [source? '*] ;; source + anything\n     (let [[source-sym & rest] clause]\n       (binding [*implicit-source* (get (:sources context) source-sym)]\n         (-resolve-clause context rest clause)))\n     \n     '[or *] ;; (or ...)\n     (let [[_ & branches] clause\n           _        (check-free-same (bound-vars context) branches clause)\n           contexts (map #(resolve-clause context %) branches)\n           rels     (map #(reduce hash-join (:rels %)) contexts)]\n       (assoc (first contexts) :rels [(reduce sum-rel rels)]))\n     \n     '[or-join [[*] *] *] ;; (or-join [[req-vars] vars] ...)\n     (let [[_ [req-vars & vars] & branches] clause\n           bound (bound-vars context)]\n       (check-bound bound req-vars orig-clause)\n       (check-free-subset bound vars branches)\n       (recur context (list* 'or-join (concat req-vars vars) branches) clause))\n     \n     '[or-join [*] *] ;; (or-join [vars] ...)\n     (let [[_ vars & branches] clause\n           vars         (set vars)\n           _            (check-free-subset (bound-vars context) vars branches)\n           join-context (limit-context context vars)\n           contexts     (map #(-> join-context (resolve-clause %) (limit-context vars)) branches)\n           rels         (map #(reduce hash-join (:rels %)) contexts)\n           sum-rel      (reduce sum-rel rels)]\n       (update context :rels collapse-rels sum-rel))\n     \n     '[and *] ;; (and ...)\n     (let [[_ & clauses] clause]\n       (reduce resolve-clause context clauses))\n     \n     '[not *] ;; (not ...)\n     (let [[_ & clauses] clause\n           bound            (bound-vars context)\n           negation-vars    (collect-vars clauses)\n           _                (when (empty? (set/intersection bound negation-vars))\n                              (raise \"Insufficient bindings: none of \" negation-vars \" is bound in \" orig-clause\n                                {:error :query/where\n                                 :form  orig-clause}))\n           context'         (assoc context :rels [(reduce hash-join (:rels context))])\n           negation-context (reduce resolve-clause context' clauses)\n           negation         (subtract-rel\n                              (single (:rels context'))\n                              (reduce hash-join (:rels negation-context)))]\n       (assoc context' :rels [negation]))\n     \n     '[not-join [*] *] ;; (not-join [vars] ...)\n     (let [[_ vars & clauses] clause\n           bound            (bound-vars context)\n           _                (check-bound bound vars orig-clause)\n           context'         (assoc context :rels [(reduce hash-join (:rels context))])\n           join-context     (limit-context context' vars)\n           negation-context (-> (reduce resolve-clause join-context clauses)\n                                (limit-context vars))\n           negation         (subtract-rel\n                              (single (:rels context'))\n                              (reduce hash-join (:rels negation-context)))]\n       (assoc context' :rels [negation]))\n     \n     '[*] ;; pattern\n     (let [source   *implicit-source*\n           pattern  (resolve-pattern-lookup-refs source clause)\n           relation (lookup-pattern source pattern)]\n       (binding [*lookup-attrs* (if (satisfies? db/IDB source)\n                                  (dynamic-lookup-attrs source pattern)\n                                  *lookup-attrs*)]\n         (update context :rels collapse-rels relation))))))\n\n(defn resolve-clause [context clause]\n  (if (rule? context clause)\n    (if (source? (first clause))\n      (binding [*implicit-source* (get (:sources context) (first clause))]\n        (resolve-clause context (next clause)))\n      (update context :rels collapse-rels (solve-rule context clause)))\n    (-resolve-clause context clause)))\n\n(defn -q [context clauses]\n  (binding [*implicit-source* (get (:sources context) '$)]\n    (reduce resolve-clause context clauses)))\n\n(defn -collect-tuples\n  [acc rel ^long len copy-map]\n  (->Eduction\n   (comp\n    (map\n     (fn [#?(:cljs t1\n            :clj ^{:tag \"[[Ljava.lang.Object;\"} t1)]\n       (->Eduction\n        (map\n         (fn [t2]\n           (let [res (aclone t1)]\n             #?(:clj\n                (if (.isArray (.getClass ^Object t2))\n                  (dotimes [i len]\n                    (when-some [idx (aget ^objects copy-map i)]\n                      (aset res i (aget ^objects t2 idx))))\n                  (dotimes [i len]\n                    (when-some [idx (aget ^objects copy-map i)]\n                      (aset res i (get t2 idx)))))\n                :cljs\n                (dotimes [i len]\n                  (when-some [idx (aget ^objects copy-map i)]\n                    (aset res i (da/aget ^objects t2 idx)))))\n             res)))\n        (:tuples rel))))\n    cat)\n   acc))\n\n(defn -collect\n  ([context symbols]\n    (let [rels (:rels context)]\n      (-collect [(da/make-array (count symbols))] rels symbols)))\n  ([acc rels symbols]\n   (cond+\n     :let [rel (first rels)]\n \n     (nil? rel) acc\n \n     ;; one empty rel means final set has to be empty\n     (empty? (:tuples rel)) []\n \n     :let [keep-attrs (select-keys (:attrs rel) symbols)]\n \n     (empty? keep-attrs) (recur acc (next rels) symbols)\n \n     :let [copy-map (to-array (map #(get keep-attrs %) symbols))\n           len      (count symbols)]\n\n     :else\n     (recur (-collect-tuples acc rel len copy-map) (next rels) symbols))))\n\n(defn collect [context symbols]\n  (into #{} (map vec) (-collect context symbols)))\n\n(defprotocol IContextResolve\n  (-context-resolve [var context]))\n\n(extend-protocol IContextResolve\n  Variable\n  (-context-resolve [var context]\n    (context-resolve-val context (.-symbol var)))\n  SrcVar\n  (-context-resolve [var context]\n    (get-in context [:sources (.-symbol var)]))\n  PlainSymbol\n  (-context-resolve [var _]\n    (or (get built-ins/aggregates (.-symbol var))\n        (resolve-sym (.-symbol var))))\n  Constant\n  (-context-resolve [var _]\n    (.-value var)))\n\n(defn -aggregate [find-elements context tuples]\n  (mapv (fn [element fixed-value i]\n          (if (dp/aggregate? element)\n            (let [f    (-context-resolve (:fn element) context)\n                  args (map #(-context-resolve % context) (butlast (:args element)))\n                  vals (map #(nth % i) tuples)]\n              (apply f (concat args [vals])))\n            fixed-value))\n    find-elements\n    (first tuples)\n    (range)))\n\n(defn- idxs-of [pred coll]\n  (->> (map #(when (pred %1) %2) coll (range))\n       (remove nil?)))\n\n(defn aggregate [find-elements context resultset]\n  (let [group-idxs (idxs-of (complement dp/aggregate?) find-elements)\n        group-fn   (fn [tuple]\n                     (map #(nth tuple %) group-idxs))\n        grouped    (group-by group-fn resultset)]\n    (for [[_ tuples] grouped]\n      (-aggregate find-elements context tuples))))\n\n(defn map* [f xs]\n  (reduce #(conj %1 (f %2)) (empty xs) xs))\n\n(defn tuples->return-map [return-map tuples]\n  (let [symbols (:symbols return-map)\n        idxs    (range 0 (count symbols))]\n    (map*\n      (fn [tuple]\n        (reduce\n          (fn [m i] (assoc m (nth symbols i) (nth tuple i)))\n          {} idxs))\n      tuples)))\n\n(defprotocol IPostProcess\n  (-post-process [find return-map tuples]))\n\n(extend-protocol IPostProcess\n  FindRel\n  (-post-process [_ return-map tuples]\n    (if (nil? return-map)\n      tuples\n      (tuples->return-map return-map tuples)))\n\n  FindColl\n  (-post-process [_ return-map tuples]\n    (into [] (map first) tuples))\n\n  FindScalar\n  (-post-process [_ return-map tuples]\n    (ffirst tuples))\n\n  FindTuple\n  (-post-process [_ return-map tuples]\n    (if (some? return-map)\n      (first (tuples->return-map return-map [(first tuples)]))\n      (first tuples))))\n\n(defn- pull [find-elements context resultset]\n  (let [resolved (for [find find-elements]\n                   (when (dp/pull? find)\n                     (let [db (-context-resolve (:source find) context)\n                           pattern (-context-resolve (:pattern find) context)]\n                       (dpa/parse-opts db pattern))))]\n    (for [tuple resultset]\n      (mapv\n        (fn [parsed-opts el]\n          (if parsed-opts\n            (dpa/pull-impl parsed-opts el)\n            el))\n        resolved\n        tuple))))\n\n(defn q [q & inputs]\n  (let [parsed-q      (lru/-get *query-cache* q #(dp/parse-query q))\n        find          (:qfind parsed-q)\n        find-elements (dp/find-elements find)\n        find-vars     (dp/find-vars find)\n        result-arity  (count find-elements)\n        with          (:qwith parsed-q)\n        ;; TODO utilize parser\n        all-vars      (concat find-vars (map :symbol with))\n        q             (cond-> q\n                        (sequential? q) dp/query->map)\n        wheres        (:where q)\n        context       (-> (Context. [] {} {})\n                        (resolve-ins (:qin parsed-q) inputs))\n        resultset     (-> context\n                        (-q wheres)\n                        (collect all-vars))]\n    (cond->> resultset\n      (:with q)\n        (mapv #(vec (subvec % 0 result-arity)))\n      (some dp/aggregate? find-elements)\n        (aggregate find-elements context)\n      (some dp/pull? find-elements)\n        (pull find-elements context)\n      true\n        (-post-process find (:qreturn-map parsed-q)))))\n","~:reader-features",["^L",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["datascript.query/*query-cache*","datascript.lru/cache","this__5343__auto__","k__5344__auto__","this__5345__auto__","k23252","else__5346__auto__","G__23256","cljs.core/Keyword","rels","sources","rules","cljs.core.get","__extmap","this__5363__auto__","f__5364__auto__","init__5365__auto__","cljs.core.reduce","ret__5366__auto__","p__23257","vec__23258","k__5367__auto__","cljs.core.nth","v__5368__auto__","this__5358__auto__","writer__5359__auto__","opts__5360__auto__","pr-pair__5361__auto__","keyval__5362__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","cljs.core/PersistentVector","G__23251","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__5341__auto__","__meta","this__5338__auto__","__hash","this__5347__auto__","cljs.core/count","this__5339__auto__","h__5154__auto__","coll__5340__auto__","cljs.core/hash-unordered-coll","this23253","other23254","cljs.core._EQ_","this__5353__auto__","k__5354__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__5350__auto__","G__23268","this__5351__auto__","k__5352__auto__","pred__23269","cljs.core/keyword-identical?","expr__23270","cljs.core.assoc","this__5356__auto__","cljs.core/seq","cljs.core/MapEntry","this__5342__auto__","this__5348__auto__","entry__5349__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","datascript.query/Context","this__5389__auto__","cljs.core/List","writer__5390__auto__","cljs.core/-write","G__23255","extmap__5385__auto__","G__23275","cljs.core/record?","datascript.query/->Context","datascript.query/map->Context","k23277","G__23282","attrs","tuples","p__23283","vec__23284","G__23276","this23278","other23279","G__23290","pred__23291","expr__23292","datascript.query/Relation","G__23280","G__23295","datascript.query/->Relation","datascript.query/map->Relation","datascript.query/single","coll","js/Error","cljs.core/next","cljs.core/first","datascript.query/intersect-keys","attrs1","attrs2","clojure.set.intersection","cljs.core/set","cljs.core/keys","var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","datascript.query/concatv","seq23297","self__5755__auto__","xs","cljs.core/cat","G__23303","datascript.query/zip","args-arr__5794__auto__","argseq__5795__auto__","seq23300","G__23301","G__23302","self__5754__auto__","a","b","cljs.core.mapv","cljs.core/vector","rest","cljs.core.apply","cljs.core/mapv","datascript.query/same-keys?","p1__23305#","cljs.core/every?","p1__23306#","datascript.query/looks-like?","pattern","form","cljs.core/sequential?","cljs.core/Symbol","cljs.core/last","p__23307","vec__23308","pattern-el","form-el","cljs.core.map","cljs.core/butlast","p__23312","vec__23313","datascript.query/source?","sym","cljs.core/name","datascript.query/free-var?","datascript.query/attr?","datascript.query/lookup-ref?","datascript.query/join-tuples","t1","idxs1","t2","idxs2","l1","l2","res","me.tonsky.persistent-sorted-set.arrays/make-array","n__5636__auto__","i","datascript.query/sum-rel","map__23319","cljs.core/--destructure-map","map__23320","attrs-a","tuples-a","attrs-b","tuples-b","cljs.core/vec","cljs.core.ex_info","cljs.core.pr_str","cljs.core/number?","cljs.core/vals","idxb->idxa","iter__5523__auto__","s__23322","cljs.core/LazySeq","temp__5804__auto__","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","b__23324","cljs.core/chunk-buffer","i__23323","vec__23326","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__23321","cljs.core/chunk-rest","vec__23329","cljs.core/cons","cljs.core/rest","idx-b","tlen","cljs.core/max","tuples'","cljs.core/persistent!","acc","tuple-b","tuple'","seq__23333","chunk__23334","count__23335","i__23336","vec__23343","c__5568__auto__","cljs.core/chunk-first","vec__23346","idx-a","cljs.core.conj_BANG_","cljs.core/transient","all-attrs","cljs.core/zipmap","cljs.core.merge","cljs.core.range","G__23352","G__23353","G__23350","G__23351","G__23356","datascript.query/prod-rel","rel1","rel2","cljs.core/to-array","datascript.query/parse-rules","cljs.reader.read_string","datascript.parser/parse-rules","cljs.core/group-by","cljs.core/ffirst","datascript.query/empty-rel","binding","vars","datascript.parser/collect-vars-distinct","datascript$query$IBinding$in__GT_rel$dyn","x__5393__auto__","m__5394__auto__","datascript.query/in->rel","goog/typeOf","m__5392__auto__","cljs.core/missing-protocol","datascript.query/IBinding","value","cljs.core/PROTOCOL_SENTINEL","datascript.parser/BindIgnore","_","datascript.query.prod_rel","datascript.parser/BindScalar","cljs.core.get_in","cljs.core.into_array","datascript.parser/BindColl","datascript.db/seqable?","datascript.parser/source","cljs.core/empty?","p1__23360#","datascript.parser/BindTuple","p1__23361#","p2__23362#","p__23366","vec__23367","datascript.query/resolve-in","context","datascript.parser/SrcVar","cljs.core.update","cljs.core/assoc","datascript.parser/RulesVar","cljs.core/conj","datascript.query/resolve-ins","bindings","values","cb","cv","p1__23370#","cljs.core/meta","p1__23371#","datascript.query/*lookup-attrs*","datascript.query/*implicit-source*","datascript.query/getter-fn","attr","idx","cljs.core/int?","tuple","eid","datascript.db/entid","me.tonsky.persistent-sorted-set.arrays/array?","datascript.query/tuple-key-fn","common-attrs","n","getters-arr","cljs.core.list_STAR_","p1__23376#","datascript.query/-group-by","f","init","ret","x","k","cljs.core.assoc_BANG_","cljs.core.conj","datascript.query/hash-attrs","key-fn","datascript.query/hash-join","tuples1","tuples2","keep-attrs1","keep-attrs2","cljs.core/reduce-kv","vec","keep-idxs1","keep-idxs2","cljs.core/->Eduction","key-fn1","key-fn2","hash","new-tuples","tuple2","key","temp__5806__auto__","tuple1","datascript.query/subtract-rel","map__23380","map__23381","key-fn-b","key-fn-a","p1__23379#","cljs.core/filterv","G__23382","datascript.query/lookup-pattern-db","db","search-pattern","p1__23383#","datoms","datascript.db/-search","attr->prop","cljs.core.filter","p__23384","vec__23385","s","datascript.query/matches-pattern?","and__5043__auto__","t","p","datascript.query/lookup-pattern-coll","data","p1__23389#","attr->idx","p__23390","vec__23391","datascript.query/normalize-pattern-clause","clause","datascript.query/lookup-pattern","source","cljs.core/native-satisfies?","datascript.db/ISearch","datascript.query/collapse-rels","new-rel","rel","datascript.query/rel-with-attr","p1__23398#","cljs.core/some","datascript.query/context-resolve-val","temp__5808__auto__","fexpr__23400","datascript.query/rel-contains-attrs?","p1__23401#","datascript.query/rel-prod-by-attrs","p1__23402#","production","p1__23403#","cljs.core.remove","datascript.query/-call-fn","args","len","static-args","tuples-args","arg","me.tonsky.persistent-sorted-set.arrays/aclone","tuple-idx","v","datascript.query/resolve-sym","datascript.query/filter-by-pred","vec__23408","vec__23411","seq__23412","first__23413","vec__23414","pred","or__5045__auto__","datascript.built-ins/query-fns","cljs.core/symbol?","tuple-pred","p1__23407#","datascript.query/bind-by-fn","vec__23419","vec__23422","seq__23423","first__23424","vec__23425","out","datascript.parser/parse-binding","fun","tuple-fn","s__23430","b__23432","i__23431","iter__23429","val","datascript.query/rule?","head","cljs.core/second","datascript.query/rule-seqid","cljs.core.atom","datascript.query/expand-rule","used-args","vec__23436","seq__23437","first__23438","rule","call-args","seqid","cljs.core.swap_BANG_","cljs.core/inc","branches","s__23440","b__23442","i__23441","vec__23444","seq__23445","first__23446","vec__23447","seq__23448","first__23449","iter__23439","vec__23451","seq__23452","first__23453","vec__23454","seq__23455","first__23456","branch","rule-args","clauses","replacements","p1__23435#","clojure.walk/postwalk","x__18649__auto__","cljs.core.symbol","datascript.query/remove-pairs","ys","pairs","p__23457","vec__23458","y","datascript.query/rule-gen-guards","rule-clause","vec__23462","seq__23463","first__23464","prev-call-args","s__23466","b__23468","i__23467","vec__23470","iter__23465","vec__23473","prev-args","datascript.query/walk-collect","cljs.core/deref","p1__23476#","datascript.query/collect-vars","datascript.query/split-guards","guards","bound-vars","p__23477","vec__23478","vec__23481","seq__23482","first__23483","datascript.query/solve-rule","final-attrs","final-attrs-map","solve","prefix-context","datascript.query/-resolve-clause","empty-rels?","p1__23484#","stack","frame","vec__23504","vec__23507","seq__23508","first__23509","next-clauses","p1__23485#","cljs.core/split-with","datascript.query/-collect","vec__23510","seq__23511","first__23512","vec__23513","active-gs","pending-gs","p1__23486#","prefix-clauses","s__23518","b__23520","i__23519","iter__23517","datascript.query.concatv","datascript.query/resolve-pattern-lookup-refs","datascript.db/IDB","vec__23524","e","tx","datascript.db/entid-strict","datascript.db/ref?","cljs.core.subvec","datascript.query/dynamic-lookup-attrs","vec__23527","G__23530","datascript.query/limit-rel","attrs'","cljs.core/select-keys","datascript.query/limit-context","p1__23545#","cljs.core.keep","datascript.query/bound-vars","p1__23546#","cljs.core.mapcat","datascript.query/check-bound","bound","clojure.set/subset?","missing","clojure.set.difference","datascript.query/check-free-same","free","p1__23549#","cljs.core/=","datascript.query/check-free-subset","seq__23551","chunk__23552","count__23553","i__23554","cljs.core.prn","G__23584","datascript.query._resolve_clause","orig-clause","pred__23585","expr__23586","G__23588","G__23589","G__23590","G__23591","G__23592","G__23593","G__23599","G__23600","G__23604","G__23605","G__23612","G__23613","G__23617","G__23618","G__23622","G__23623","G__23627","G__23628","G__23632","G__23633","cljs.core/nfirst","vec__23594","seq__23595","first__23596","source-sym","*implicit-source*-orig-val__23597","*implicit-source*-temp-val__23598","vec__23601","seq__23602","first__23603","contexts","p1__23572#","datascript.query/resolve-clause","p1__23573#","vec__23606","seq__23607","first__23608","vec__23609","seq__23610","first__23611","req-vars","vec__23614","seq__23615","first__23616","join-context","p1__23574#","p1__23575#","sum-rel","vec__23619","seq__23620","first__23621","vec__23624","seq__23625","first__23626","negation-vars","context'","negation-context","negation","vec__23629","seq__23630","first__23631","relation","*lookup-attrs*-orig-val__23634","*lookup-attrs*-temp-val__23635","*implicit-source*-orig-val__23637","*implicit-source*-temp-val__23638","G__23639","G__23640","datascript.query/-q","*implicit-source*-orig-val__23641","*implicit-source*-temp-val__23642","datascript.query/-collect-tuples","copy-map","cljs.core.comp","cljs.core/aclone","G__23645","symbols","datascript.query._collect","keep-attrs","p1__23643#","datascript.query/collect","datascript$query$IContextResolve$_context_resolve$dyn","datascript.query/-context-resolve","datascript.query/IContextResolve","var","datascript.parser/Variable","datascript.parser/PlainSymbol","datascript.built-ins/aggregates","datascript.parser/Constant","datascript.query/-aggregate","find-elements","element","fixed-value","datascript.parser/aggregate?","p1__23646#","vals","p1__23647#","datascript.query/idxs-of","p1__23648#","p2__23649#","cljs.core/nil?","datascript.query/aggregate","resultset","group-idxs","cljs.core/complement","group-fn","p1__23650#","grouped","s__23652","b__23654","i__23653","vec__23655","iter__23651","vec__23658","datascript.query/map*","p1__23661#","p2__23662#","cljs.core/empty","datascript.query/tuples->return-map","return-map","idxs","m","datascript$query$IPostProcess$_post_process$dyn","datascript.query/-post-process","datascript.query/IPostProcess","find","datascript.parser/FindRel","datascript.parser/FindColl","datascript.parser/FindScalar","datascript.parser/FindTuple","datascript.query/pull","resolved","s__23664","b__23666","i__23665","iter__23663","datascript.parser/pull?","datascript.pull_api.parse_opts","s__23668","b__23670","i__23669","iter__23667","parsed-opts","el","datascript.pull-api/pull-impl","datascript.query/q","seq23672","G__23673","q","inputs","parsed-q","datascript.lru/-get","datascript.parser/parse-query","datascript.parser/find-elements","find-vars","datascript.parser/find-vars","result-arity","with","all-vars","G__23674","datascript.parser/query->map","wheres","G__23675","p1__23671#"]],"~:used-vars",["^L",["~$cljs.core/to-array","~$cljs.core/mapcat","~$datascript.query/expand-rule","~$cljs.core/--destructure-map","~$datascript.query/looks-like?","~$datascript.query/IPostProcess","~$cljs.core/keep","~$me.tonsky.persistent-sorted-set.arrays/make-array","~$datascript.query/-resolve-clause","~$datascript.parser/find-elements","~$cljs.core/PROTOCOL_SENTINEL","~$cljs.core/comp","~$cljs.core/rest","~$clojure.set/intersection","~$datascript.built-ins/query-fns","~$datascript.query/lookup-pattern","~$datascript.query/*implicit-source*","~$datascript.query/->Relation","~$cljs.core/sequential?","~$datascript.query/in->rel","~$datascript.parser/PlainSymbol","~$cljs.core/pr-sequential-writer","~$datascript.query/*query-cache*","~$datascript.query/free-var?","~$datascript.query/parse-rules","~$datascript.query/limit-context","~$cljs.core/vector?","~$cljs.core/filter","~$cljs.core/=","~$datascript.query/hash-join","~$datascript.query/-call-fn","~$datascript.parser/FindScalar","~$cljs.core/keys","~$cljs.core/-assoc","~$cljs.core/into-array","~$datascript.query/lookup-ref?","~$cljs.core/-write","~$datascript.query/dynamic-lookup-attrs","~$datascript.query/same-keys?","~$cljs.core/IndexedSeq","~$datascript.db/-search","~$datascript.parser/RulesVar","~$cljs.core/-iterator","~$datascript.query/rel-with-attr","~$cljs.core/count","~$cljs.core/deref","~$datascript.parser/SrcVar","~$goog/typeOf","~$datascript.parser/collect-vars-distinct","~$datascript.query/sum-rel","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/chunk-first","~$datascript.query/join-tuples","~$cljs.core/apply","~$datascript.lru/cache","~$datascript.query/Context","~$cljs.core/Keyword","~$cljs.core/prn","~$cljs.core/int?","~$datascript.query/check-free-subset","~$datascript.query/split-guards","~$cljs.core/aclone","~$cljs.core/group-by","~$datascript.db/ref?","~$cljs.core/last","~$cljs.core/chunk","~$cljs.core/mapv","~$cljs.core/MapEntry","~$cljs.core/dissoc","~$cljs.core/keyword-identical?","~$datascript.query/filter-by-pred","~$cljs.core/LazySeq","~$cljs.core/chunk-rest","~$datascript.query/normalize-pattern-clause","~$cljs.core/atom","~$datascript.parser/find-vars","~$datascript.query/map->Context","~$cljs.core/->Eduction","~$cljs.core/-with-meta","~$datascript.query/map->Relation","~$datascript.db/IDB","~$cljs.core/concat","~$datascript.query/zip","~$cljs.core/pr-str","~$datascript.query/collect","~$datascript.query/-context-resolve","~$datascript.query/resolve-clause","~$datascript.built-ins/aggregates","~$cljs.core/set","~$datascript.query/lookup-pattern-db","~$datascript.query/-post-process","~$cljs.core/native-satisfies?","~$cljs.core/empty?","~$datascript.query/getter-fn","~$datascript.parser/parse-rules","~$datascript.parser/pull?","~$cljs.core/contains?","~$datascript.query/collapse-rels","~$datascript.query/-collect-tuples","~$cljs.core/into","~$cljs.core/conj","~$datascript.query/idxs-of","~$cljs.core/zipmap","~$cljs.core/-conj","~$datascript.parser/query->map","~$cljs.core/update","~$datascript.parser/BindColl","~$cljs.core/map","~$datascript.query/Relation","~$datascript.parser/Constant","~$datascript.query/-group-by","~$cljs.core/filterv","~$cljs.core/PersistentVector","~$cljs.core/nfirst","~$datascript.query/matches-pattern?","~$cljs.core/get-in","~$datascript.pull-api/pull-impl","~$datascript.pull-api/parse-opts","~$cljs.core/List","~$cljs.core/empty","~$datascript.parser/BindIgnore","~$cljs.core/vals","~$cljs.core/swap!","~$datascript.query/empty-rel","~$datascript.parser/BindScalar","~$datascript.query/bound-vars","~$cljs.core/number?","~$datascript.parser/parse-binding","~$cljs.core/get","~$me.tonsky.persistent-sorted-set.arrays/array?","~$datascript.query/hash-attrs","~$datascript.query/check-bound","~$datascript.query/solve-rule","~$datascript.db/entid-strict","~$cljs.core/chunk-append","~$cljs.core/-nth","~$cljs.core/remove","~$datascript.query/pull","~$cljs.core/not-empty","~$clojure.set/difference","~$datascript.query/limit-rel","~$cljs.core/cat","~$cljs.core/symbol","~$cljs.core/conj!","~$datascript.query/bind-by-fn","~$datascript.db/ISearch","~$cljs.core/record?","~$datascript.query/resolve-pattern-lookup-refs","~$cljs.core/missing-protocol","~$datascript.db/entid","~$datascript.parser/FindRel","~$cljs.core/persistent!","~$datascript.query/rel-prod-by-attrs","~$datascript.query/->Context","~$datascript.query/tuples->return-map","~$cljs.core/subvec","~$datascript.query/resolve-in","~$cljs.core/-lookup","~$clojure.walk/postwalk","~$datascript.query/tuple-key-fn","~$datascript.query/source?","~$cljs.core/nil?","~$datascript.parser/FindTuple","~$cljs.core/nth","~$cljs.core/ex-info","~$cljs.core/meta","~$datascript.query/check-free-same","~$datascript.query/-q","~$datascript.parser/Variable","~$datascript.db/seqable?","~$cljs.core/max","~$datascript.query/aggregate","~$cljs.core/second","~$cljs.core/nil-iter","~$clojure.set/subset?","~$cljs.core/split-with","~$datascript.query/rule?","~$cljs.core/next","~$cljs.core/vec","~$cljs.core/ffirst","~$cljs.core/RecordIter","~$cljs.core/select-keys","~$cljs.core/transient","~$datascript.query/resolve-sym","~$cljs.core/chunk-cons","~$datascript.query/remove-pairs","~$datascript.parser/FindColl","~$datascript.query/intersect-keys","~$cljs.core/not","~$cljs.core/complement","~$datascript.query/walk-collect","~$datascript.parser/aggregate?","~$datascript.query/attr?","~$datascript.parser/BindTuple","~$datascript.lru/-get","~$datascript.query/-collect","~$cljs.core/cons","~$datascript.query/IBinding","~$cljs.core/assoc","~$me.tonsky.persistent-sorted-set.arrays/aclone","~$datascript.query/IContextResolve","~$datascript.query/rule-seqid","~$datascript.query/lookup-pattern-coll","~$cljs.core/chunk-buffer","~$cljs.core/Symbol","~$cljs.core/symbol?","~$cljs.core/range","~$cljs.reader/read-string","~$cljs.core/reduce-kv","~$cljs.core/hash-unordered-coll","~$datascript.query/rule-gen-guards","~$datascript.query/concatv","~$datascript.query/*lookup-attrs*","~$cljs.core/first","~$cljs.core/butlast","~$datascript.parser/source","~$datascript.query/resolve-ins","~$cljs.core/assoc!","~$datascript.query/single","~$datascript.parser/parse-query","~$cljs.core/name","~$cljs.core/merge","~$cljs.core/every?","~$datascript.query/subtract-rel","~$js/Error","~$cljs.core/list*","~$cljs.core/vector","~$datascript.query/-aggregate","~$cljs.core/inc","~$datascript.query/prod-rel","~$cljs.core/some","~$datascript.query/rel-contains-attrs?","~$datascript.query/q","~$datascript.query/context-resolve-val","~$cljs.core/chunked-seq?","~$datascript.query/map*","~$datascript.query/collect-vars"]]],"~:cache-keys",["~#cmap",[["^1Z","datascript/db.cljc"],["ea08a8bf28b1a0f941624d63fc53b9941874f836","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^L",[]],"~:deps-syms",["^11","^10","~$goog.array","^13","~$clojure.data","^17","~$me.tonsky.persistent-sorted-set","^U"]]],["^1Z","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","~$goog.dom.HtmlElement"]]],["^1Z","datascript/parser.cljc"],["ea08a8bf28b1a0f941624d63fc53b9941874f836","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^10","^W","^I"]]],["^1Z","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^10","^19","~$goog.string"]]],["^1Z","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11"]]],["^1Z","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.asserts","~$goog.string.internal","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^1Z","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^7Y","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^7Z"]]],["^1Z","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^7Y"]]],["^1Z","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11"]]],["^1Z","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11"]]],["^1Z","cljs/tools/reader/edn.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^10","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^7V","~$goog.string.StringBuffer"]]],["^1Z","datascript/query.cljc"],["ea08a8bf28b1a0f941624d63fc53b9941874f836","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^10","^1=","^W","^19","^13","^Y","^I","^U","^17","^1;","^14","^["]]],["^1Z","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11"]]],["^1Z","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^10"]]],["^1Z","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^7W","^7Z"]]],["^1Z","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^10","^86","^87","^88","^85","^7R","^7V","^8:"]]],["^1Z","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11"]]],["^1Z","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11"]]],["^1Z","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^7Y"]]],"~:SHADOW-TIMESTAMP",[1696742661000,1696742661000,1685338599000],["^1Z","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^7Y","~$goog.reflect"]]],["^1Z","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^7Y","~$goog.fs.blob","^81","~$goog.html.SafeScript","~$goog.html.trustedtypes","^83","^84"]]],["^1Z","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11"]]],["^1Z","datascript/pull_api.cljc"],["ea08a8bf28b1a0f941624d63fc53b9941874f836","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^10","^19","~$datascript.pull-parser","^I","^17","^7T"]]],["^1Z","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11"]]],["^1Z","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^83","~$goog.html.SafeUrl","^84","^7Y","^7Z"]]],["^1Z","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^7Y","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^8>","~$goog.html.SafeStyle","^8A","^82","~$goog.html.uncheckedconversions","^83","^7Z"]]],["^1Z","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","~$goog.dom.TagName","^7Y","~$goog.dom.element"]]],["^1Z","clojure/walk.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^10"]]],["^1Z","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^83","^8>","^8F","~$goog.html.SafeStyleSheet","^8A","^8H","^82","^84","^7Y","~$goog.labs.userAgent.browser","^7R","~$goog.object","^7Z","~$goog.dom.tags","^8?"]]],["^1Z","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^8L"]]],["^1Z","datascript/impl/entity.cljc"],["ea08a8bf28b1a0f941624d63fc53b9941874f836","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^10","^I"]]],["^1Z","me/tonsky/persistent_sorted_set/arrays.cljc"],["7c8a2fc60577be456d69a471e6da9fa6e36b3cd0","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^10","^19"]]],["^1Z","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11"]]],["^1Z","cljs/reader.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^10","^8L","^89","~$cljs.tools.reader.edn","^8:"]]],["^1Z","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1Z","me/tonsky/persistent_sorted_set.cljs"],["7c8a2fc60577be456d69a471e6da9fa6e36b3cd0","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^10","^U"]]],["^1Z","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^7R","^7Y","~$goog.collections.maps","^7V","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1Z","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^7X"]]],["^1Z","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11"]]],["^1Z","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11"]]],["^1Z","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",[]]],["^1Z","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^7R","^8L"]]],["^1Z","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^10","^86","^19","~$cljs.tools.reader.impl.inspect"]]],["^1Z","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^10","^7V","^8:"]]],["^1Z","datascript/pull_parser.cljc"],["ea08a8bf28b1a0f941624d63fc53b9941874f836","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^10","^Y","^I"]]],["^1Z","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","~$goog.dom.safe","^8G","^83","^7Z"]]],["^1Z","clojure/data.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^10","^W"]]],["^1Z","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11"]]],["^1Z","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^7Z","^80"]]],["^1Z","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11"]]],["^1Z","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^10","^87","^7V","^8:"]]],["^1Z","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","~$goog.flags"]]],["^1Z","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^8P","^8H"]]],["^1Z","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^7Y","^8E","^8>","^8F","^8J","^8A","^82","^83","^7Z"]]],["^1Z","datascript/lru.cljc"],["ea08a8bf28b1a0f941624d63fc53b9941874f836","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^10"]]],["^1Z","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^10","^85","^86","^87"]]],["^1Z","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11"]]],["^1Z","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","~$goog.math.Long","~$goog.math.Integer","^7V","^8L","^7R","~$goog.Uri","^8:"]]],["^1Z","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^83","^84","^8?","^7Y"]]],["^1Z","datascript/built_ins.cljc"],["ea08a8bf28b1a0f941624d63fc53b9941874f836","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^10","^19","^I","^1;"]]],["^1Z","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^83","^8F","^84","^8L","^7Y","^7Z"]]],["^1Z","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^8<"]]],["^1Z","clojure/set.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^10"]]],["^1Z","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^7Y","^7V"]]],["^1Z","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^7N",["^ ","^7O",null,"^7P",["^L",[]],"^7Q",["^11","^7Y","^84"]]]]],"~:clj-info",["^ ","jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/reader.clj",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1685338599000,"jar:file:/home/neromous/.m2/repository/datascript/datascript/1.5.3/datascript-1.5.3.jar!/datascript/parser.cljc",1696747362000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1685338598000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1685338599000,"jar:file:/home/neromous/.m2/repository/datascript/datascript/1.5.3/datascript-1.5.3.jar!/datascript/db.cljc",1696747362000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1685338598000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1685338598000,"jar:file:/home/neromous/.m2/repository/persistent-sorted-set/persistent-sorted-set/0.3.0/persistent-sorted-set-0.3.0.jar!/me/tonsky/persistent_sorted_set/arrays.cljc",1696747361000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1685338599000,"jar:file:/home/neromous/.m2/repository/datascript/datascript/1.5.3/datascript-1.5.3.jar!/datascript/lru.cljc",1696747362000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1685338598000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1685338599000,"jar:file:/home/neromous/.m2/repository/persistent-sorted-set/persistent-sorted-set/0.3.0/persistent-sorted-set-0.3.0.jar!/me/tonsky/persistent_sorted_set.clj",1696747361000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1685338598000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1685338598000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1685338598000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1685338598000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1685338599000,"jar:file:/home/neromous/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1685338599000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","datascript/query.cljc","^7",1,"^8",14,"^9",1,"^:",30,"^;",true],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F"],"~:shadow/protocol-prefixes",["^L",["datascript$query$IContextResolve$","datascript$query$IBinding$","datascript$query$IPostProcess$"]],"^G",["^ ","^H","^I","^J","^I"],"^K",["^L",[]],"^M","^N","^O",["^ "],"^R",null,"^S",["^ ","^T","^U","^V","^W","^X","^Y","^Z","^[","^10","^10","^11","^11","^12","^13","^14","^14","^15","^I","^W","^W","^16","^17","^17","^17","^Y","^Y","^I","^I","^U","^U","^[","^[","^18","^19","^19","^19","^1:","^1;","^1<","^14","^1=","^1=","^13","^13","^1>","^1=","^1;","^1;"],"^1?",["^L",["^1@"]],"~:shadow/js-access-global",["^L",["Error"]],"^1A",["^ ","^1B","^14","^1C","^14","^1D","^14","^1E","^14","^1F","^14","^1G","^14","^1H","^14","^1I","^14","^1J","^14","^1K","^14","^1L","^14","^1M","^14","^1N","^14"],"~:defs",["^ ","~$bound-vars",["^ ","~:protocol-inline",null,"^5",["^ ","^6","datascript/query.cljc","^7",678,"^8",7,"^9",678,"^:",17,"~:arglists",["^1Q",["~$quote",["^1Q",[["~$context"]]]]]],"^M","^54","^6","datascript/query.cljc","^:",17,"~:method-params",["^1Q",[["^:1"]]],"~:protocol-impl",null,"~:arglists-meta",["^1Q",[null,null]],"^8",1,"~:root-source-info",["^ ","~:source-type","~:fragment","~:source-form",["^1Q",["~$defn","^9Y",["^:1"],["^1Q",["~$into",["^L",[]],["^1Q",["~$mapcat",["^1Q",["~$fn*",["~$p1__23546#"],["^1Q",["~$keys",["^1Q",["~:attrs","^:="]]]]]],["^1Q",["~:rels","^:1"]]]]]]]]],"~:variadic?",false,"^7",678,"~:ret-tag",["^L",[null,"~$clj","~$any"]],"^9",678,"~:max-fixed-arity",1,"~:fn-var",true,"^9[",["^1Q",["^:0",["^1Q",[["^:1"]]]]]],"~$solve-rule",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",592,"^8",7,"^9",592,"^:",17,"^9[",["^1Q",["^:0",["^1Q",[["^:1","~$clause"]]]]]],"^M","^5;","^6","datascript/query.cljc","^:",17,"^:2",["^1Q",[["^:1","^:H"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^:G",["^:1","^:H"],["^1Q",["~$let",["~$final-attrs",["^1Q",["~$filter","~$free-var?","^:H"]],"~$final-attrs-map",["^1Q",["~$zipmap","^:J",["^1Q",["~$range"]]]],"~$solve",["^1Q",["~$fn",["~$prefix-context","~$clauses"],["^1Q",["~$reduce","~$-resolve-clause","^:R","^:S"]]]],"~$empty-rels?",["^1Q",["^:Q",["^:1"],["^1Q",["~$some",["^1Q",["^:<",["~$p1__23484#"],["^1Q",["~$empty?",["^1Q",["~:tuples","^:X"]]]]]],["^1Q",["^:@","^:1"]]]]]]],["^1Q",["~$loop",["~$stack",["^1Q",["~$list",["^ ","~:prefix-clauses",[],"~:prefix-context","^:1","~:clauses",["^:H"],"~:used-args",["^ "],"~:pending-guards",["^ "]]]],"~$rel",["^1Q",["~$Relation.","^:M",[]]]],["^1Q",["~$if-some",["~$frame",["^1Q",["~$first","^;0"]]],["^1Q",["^:I",[["^:S",["~$rule-clause","~$&","~$next-clauses"]],["^1Q",["~$split-with",["^1Q",["^:<",["~$p1__23485#"],["^1Q",["~$not",["^1Q",["~$rule?","^:1","^;?"]]]]]],["^1Q",["^;4","^;:"]]]]],["^1Q",["~$if",["^1Q",["~$nil?","^;<"]],["^1Q",["^:I",["^:1",["^1Q",["^:P",["^1Q",["^;3","^;:"]],"^:S"]],"~$tuples",["^1Q",["~$-collect","^:1","^:J"]],"~$new-rel",["^1Q",["^;8","^:M","^;D"]]],["^1Q",["~$recur",["^1Q",["~$next","^;0"]],["^1Q",["~$sum-rel","^;7","^;F"]]]]]],["^1Q",["^:I",[["~$rule","~$&","~$call-args"],"^;<","~$guards",["^1Q",["~$rule-gen-guards","^;<",["^1Q",["^;5","^;:"]]]],["~$active-gs","~$pending-gs"],["^1Q",["~$split-guards",["^1Q",["~$concat",["^1Q",["^;2","^;:"]],"^:S"]],["^1Q",["^;Q","^;L",["^1Q",["^;6","^;:"]]]]]]],["^1Q",["^;B",["^1Q",["^:W",["^1Q",["^:<",["~$p1__23486#"],["^1Q",["~$=","^;R",["^1Q",["^:0",[["^1Q",["~$-differ?"]]]]]]]]],"^;N"]],["^1Q",["^;G",["^1Q",["^;H","^;0"]],"^;7"]],["^1Q",["^:I",["~$prefix-clauses",["^1Q",["^;Q","^:S","^;N"]],"^:R",["^1Q",["^:P",["^1Q",["^;3","^;:"]],"^;T"]]],["^1Q",["^;B",["^1Q",["^:V","^:R"]],["^1Q",["^;G",["^1Q",["^;H","^;0"]],"^;7"]],["^1Q",["^:I",["~$used-args",["^1Q",["~$assoc",["^1Q",["^;5","^;:"]],"^;J",["^1Q",["~$conj",["^1Q",["~$get",["^1Q",["^;5","^;:"]],"^;J",[]]],"^;K"]]]],"~$branches",["^1Q",["~$expand-rule","^;<","^:1","^;U"]]],["^1Q",["^;G",["^1Q",["^;Q",["^1Q",["~$for",["~$branch","^;Y"],["^ ","^;2","^;T","^;3","^:R","^;4",["^1Q",["~$concatv","^<0","^;="]],"^;5","^;U","^;6","^;O"]]],["^1Q",["^;H","^;0"]]]],"^;7"]]]]]]]]]]]]]]]],"^;7"]]]]]]]]],"^:A",false,"^7",592,"^:B","^:D","^9",592,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^:H"]]]]]],"~$matches-pattern?",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",389,"^8",7,"^9",389,"^:",23,"^9[",["^1Q",["^:0",["^1Q",[["~$pattern","~$tuple"]]]]]],"^M","^4U","^6","datascript/query.cljc","^:",23,"^:2",["^1Q",[["^<3","^<4"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^<2",["^<3","^<4"],["^1Q",["^:[",["^<4","^<4","^<3","^<3"],["^1Q",["^;B",["^1Q",["~$and","^<4","^<3"]],["^1Q",["^:I",["~$t",["^1Q",["^;;","^<4"]],"~$p",["^1Q",["^;;","^<3"]]],["^1Q",["^;B",["^1Q",["~$or",["^1Q",["~$=","~$p",["^1Q",["^:0","~$_"]]]],["^1Q",["^:L","~$p"]],["^1Q",["~$=","~$t","~$p"]]]],["^1Q",["^;G",["^1Q",["^;H","^<4"]],["^1Q",["^;H","^<3"]]]],false]]]],true]]]]]]],"^:A",false,"^7",389,"^:B","~$boolean","^9",389,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^<3","^<4"]]]]]],"~$aggregate",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",892,"^8",7,"^9",892,"^:",16,"^9[",["^1Q",["^:0",["^1Q",[["~$find-elements","^:1","~$resultset"]]]]]],"^M","^66","^6","datascript/query.cljc","^:",16,"^:2",["^1Q",[["^<9","^:1","^<:"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^<8",["^<9","^:1","^<:"],["^1Q",["^:I",["~$group-idxs",["^1Q",["~$idxs-of",["^1Q",["~$complement","~$dp/aggregate?"]],"^<9"]],"~$group-fn",["^1Q",["^:Q",["^<4"],["^1Q",["~$map",["^1Q",["^:<",["~$p1__23650#"],["^1Q",["~$nth","^<4","^<A"]]]],"^<;"]]]],"~$grouped",["^1Q",["~$group-by","^<?","^<:"]]],["^1Q",["^;[",[["~$_","^;D"],"^<C"],["^1Q",["~$-aggregate","^<9","^:1","^;D"]]]]]]]]],"^:A",false,"^7",892,"^:B","^3V","^9",892,"^:E",3,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^<9","^:1","^<:"]]]]]],"~$rel-prod-by-attrs",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",440,"^8",8,"^9",440,"^:",25,"~:private",true,"^9[",["^1Q",["^:0",["^1Q",[["^:1","~$attrs"]]]]]],"^<G",true,"^M","^5O","^6","datascript/query.cljc","^:",25,"^:2",["^1Q",[["^:1","^<H"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["~$defn-","^<F",["^:1","^<H"],["^1Q",["^:I",["~$rels",["^1Q",["^:K",["^1Q",["^:<",["~$p1__23402#"],["^1Q",["~$rel-contains-attrs?","^<K","^<H"]]]],["^1Q",["^:@","^:1"]]]],"~$production",["^1Q",["^:T","~$prod-rel","^<J"]]],[["^1Q",["~$update","^:1","^:@",["^1Q",["^:<",["~$p1__23403#"],["^1Q",["~$remove",["^1Q",["^V","^<J"]],"^<P"]]]]]],"^<M"]]]]]],"^:A",false,"^7",440,"^:B","~$cljs.core/IVector","^9",440,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^<H"]]]]]],"~$limit-rel",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",669,"^8",7,"^9",669,"^:",16,"^9[",["^1Q",["^:0",["^1Q",[["^;7","~$vars"]]]]]],"^M","^5C","^6","datascript/query.cljc","^:",16,"^:2",["^1Q",[["^;7","^<T"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^<S",["^;7","^<T"],["^1Q",["~$when-some",["~$attrs'",["^1Q",["~$not-empty",["^1Q",["~$select-keys",["^1Q",["^:?","^;7"]],"^<T"]]]]],["^1Q",["^;V","^;7","^:?","^<V"]]]]]]],"^:A",false,"^7",669,"^:B",["^L",["^:C","^:D","~$clj-nil"]],"^9",669,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^;7","^<T"]]]]]],"~$empty-rel",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",185,"^8",7,"^9",185,"^:",16,"^9[",["^1Q",["^:0",["^1Q",[["~$binding"]]]]]],"^M","^52","^6","datascript/query.cljc","^:",16,"^:2",["^1Q",[["^<["]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^<Z",["^<["],["^1Q",["^:I",["^<T",["^1Q",["~$->>",["^1Q",["~$dp/collect-vars-distinct","^<["]],["^1Q",["^<@","~:symbol"]]]]],["^1Q",["^;8",["^1Q",["^:N","^<T",["^1Q",["^:O"]]]],[]]]]]]]],"^:A",false,"^7",185,"^:B","^4O","^9",185,"^:E",1,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^<["]]]]]],"~$pull",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",937,"^8",8,"^9",937,"^:",12,"^<G",true,"^9[",["^1Q",["^:0",["^1Q",[["^<9","^:1","^<:"]]]]]],"^<G",true,"^M","^5@","^6","datascript/query.cljc","^:",12,"^:2",["^1Q",[["^<9","^:1","^<:"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^<I","^=3",["^<9","^:1","^<:"],["^1Q",["^:I",["~$resolved",["^1Q",["^;[",["~$find","^<9"],["^1Q",["~$when",["^1Q",["~$dp/pull?","^=5"]],["^1Q",["^:I",["^15",["^1Q",["~$-context-resolve",["^1Q",["^22","^=5"]],"^:1"]],"^<3",["^1Q",["^=8",["^1Q",["~:pattern","^=5"]],"^:1"]]],["^1Q",["~$dpa/parse-opts","^15","^<3"]]]]]]]]],["^1Q",["^;[",["^<4","^<:"],["^1Q",["~$mapv",["^1Q",["^:Q",["~$parsed-opts","~$el"],["^1Q",["^;B","^=<",["^1Q",["~$dpa/pull-impl","^=<","^=="]],"^=="]]]],"^=4","^<4"]]]]]]]]],"^:A",false,"^7",937,"^:B","^3V","^9",937,"^:E",3,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^<9","^:1","^<:"]]]]]],"~$->Context",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^:",19,"^8",12,"~:internal-ctor",true,"~:factory","~:positional","^7",33,"^9",33,"^9[",["^1Q",["^:0",["^1Q",[["^<J","~$sources","~$rules"]]]]],"~:doc","Positional factory function for datascript.query/Context."],"^M","^5P","^6","datascript/query.cljc","^:",19,"^:2",["^1Q",[["^<J","^=C","^=D"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^=@",true,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["~$defrecord","~$Context",["^<J","^=C","^=D"]]]],"^:A",false,"^=A","^=B","^7",33,"^:B","^3F","^9",33,"^:E",3,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^<J","^=C","^=D"]]]]],"^=E","Positional factory function for datascript.query/Context."],"~$tuple-key-fn",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",301,"^8",7,"^9",301,"^:",19,"^9[",["^1Q",["^:0",["^1Q",[["^<H","~$common-attrs"]]]]]],"^M","^5V","^6","datascript/query.cljc","^:",19,"^:2",["^1Q",[["^<H","^=I"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^=H",["^<H","^=I"],["^1Q",["^:I",["~$n",["^1Q",["~$count","^=I"]]],["^1Q",["^;B",["^1Q",["~$==","~$n",1]],["^1Q",["~$getter-fn","^<H",["^1Q",["^;;","^=I"]]]],["^1Q",["^:I",["~$getters-arr",["^1Q",["~$into-array","^=I"]]],["^1Q",["^:[",["~$i",0],["^1Q",["^;B",["^1Q",["~$<","~$i","~$n"]],["^1Q",["~$do",["^1Q",["~$aset","^=M","~$i",["^1Q",["^=L","^<H",["^1Q",["~$aget","^=M","~$i"]]]]]],["^1Q",["^;G",["^1Q",["~$unchecked-inc","~$i"]]]]]],["^1Q",["^:Q",["^<4"],["^1Q",["~$list*",["^1Q",["~$.map","^=M",["^1Q",["^:<",["~$p1__23376#"],["^1Q",["^=U","^<4"]]]]]]]]]]]]]]]]]]]]]]],"^:A",false,"^7",301,"^:B","~$function","^9",301,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^<H","^=I"]]]]]],"~$tuples->return-map",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",903,"^8",7,"^9",903,"^:",25,"^9[",["^1Q",["^:0",["^1Q",[["~$return-map","^;D"]]]]]],"^M","^5Q","^6","datascript/query.cljc","^:",25,"^:2",["^1Q",[["^=X","^;D"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^=W",["^=X","^;D"],["^1Q",["^:I",["~$symbols",["^1Q",["~:symbols","^=X"]],"~$idxs",["^1Q",["^:O",0,["^1Q",["^=J","^=Y"]]]]],["^1Q",["~$map*",["^1Q",["^:Q",["^<4"],["^1Q",["^:T",["^1Q",["^:Q",["~$m","~$i"],["^1Q",["^;V","~$m",["^1Q",["^<B","^=Y","~$i"]],["^1Q",["^<B","^<4","~$i"]]]]]],["^ "],"^=["]]]],"^;D"]]]]]]],"^:A",false,"^7",903,"^:B",["^L",[null,"^:D"]],"^9",903,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^=X","^;D"]]]]]],"~$resolve-pattern-lookup-refs",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",648,"^8",7,"^9",648,"^:",34,"^9[",["^1Q",["^:0",["^1Q",[["~$source","^<3"]]]]]],"^M","^5J","^6","datascript/query.cljc","^:",34,"^:2",["^1Q",[["^>2","^<3"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^>1",["^>2","^<3"],["^1Q",["^;B",["^1Q",["~$satisfies?","~$db/IDB","^>2"]],["^1Q",["^:I",[["~$e","~$a","~$v","~$tx"],"^<3"],["^1Q",["~$->",[["^1Q",["^;B",["^1Q",["^<6",["^1Q",["~$lookup-ref?","~$e"]],["^1Q",["~$attr?","~$e"]]]],["^1Q",["~$db/entid-strict","^>2","~$e"]],"~$e"]],"~$a",["^1Q",["^;B",["^1Q",["^<5","~$v",["^1Q",["^>8","~$a"]],["^1Q",["~$db/ref?","^>2","~$a"]],["^1Q",["^<6",["^1Q",["^>7","~$v"]],["^1Q",["^>8","~$v"]]]]]],["^1Q",["^>9","^>2","~$v"]],"~$v"]],["^1Q",["^;B",["^1Q",["^>7","^>5"]],["^1Q",["^>9","^>2","^>5"]],"^>5"]]],["^1Q",["~$subvec",0,["^1Q",["^=J","^<3"]]]]]]]],"^<3"]]]]],"^:A",false,"^7",648,"^:B",["^L",[null,"~$cljs.core/Subvec"]],"^9",648,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^>2","^<3"]]]]]],"~$bind-by-fn",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",498,"^8",7,"^9",498,"^:",17,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^:H"]]]]]],"^M","^5G","^6","datascript/query.cljc","^:",17,"^:2",["^1Q",[["^:1","^:H"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^>=",["^:1","^:H"],["^1Q",["^:I",[[["~$f","~$&","~$args"],"~$out"],"^:H","^<[",["^1Q",["~$dp/parse-binding","^>?"]],"~$fun",["^1Q",["^<6",["^1Q",["^;X","~$built-ins/query-fns","~$f"]],["^1Q",["~$context-resolve-val","^:1","~$f"]],["^1Q",["~$resolve-sym","~$f"]],["^1Q",["^=6",["^1Q",["^;C",["^1Q",["~$rel-with-attr","^:1","~$f"]]]],["^1Q",["^H","Unknown function '","~$f"," in ","^:H",["^ ","~:error","~:query/where","^1P","^:H","~:var","~$f"]]]]]]],["^:1","^<M"],["^1Q",["^<F","^:1",["^1Q",["^:K","~$symbol?","^>>"]]]],"^;F",["^1Q",["^;B","^>A",["^1Q",["^:I",["~$tuple-fn",["^1Q",["~$-call-fn","^:1","^<M","^>A","^>>"]],"^<J",["^1Q",["^;[",["^<4",["^1Q",["^:Z","^<M"]],"~:let",["~$val",["^1Q",["^>J","^<4"]]],"~:when",["^1Q",["^;@",["^1Q",["^;C","^>M"]]]]],["^1Q",["^<N",["^1Q",["^;8",["^1Q",["^:?","^<M"]],["^<4"]]],["^1Q",["~$in->rel","^<[","^>M"]]]]]]],["^1Q",["^;B",["^1Q",["^:Y","^<J"]],["^1Q",["^<N","^<M",["^1Q",["^<Z","^<["]]]],["^1Q",["^:T","^;I","^<J"]]]]]],["^1Q",["^<N",["^1Q",["^;V","^<M","^:Z",[]]],["^1Q",["^<Z","^<["]]]]]]],["^1Q",["^<O","^:1","^:@","~$collapse-rels","^;F"]]]]]]],"^:A",false,"^7",498,"^:B",["^L",["^:C","^:D"]],"^9",498,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^:H"]]]]]],"~$check-free-same",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",689,"^8",7,"^9",689,"^:",22,"^9[",["^1Q",["^:0",["^1Q",[["~$bound","^;Y","~$form"]]]]]],"^M","^61","^6","datascript/query.cljc","^:",22,"^:2",["^1Q",[["^>R","^;Y","^>S"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^>Q",["^>R","^;Y","^>S"],["^1Q",["^:I",["~$free",["^1Q",["^=;",["^1Q",["^:<",["~$p1__23549#"],["^1Q",["~$set/difference",["^1Q",["~$collect-vars","^>U"]],"^>R"]]]],"^;Y"]]],["^1Q",["~$when-not",["^1Q",["~$apply","~$=","^>T"]],["^1Q",["^H","All clauses in 'or' must use same set of free vars, had ","^>T"," in ","^>S",["^ ","^>F","^>G","^1P","^>S","~:vars","^>T"]]]]]]]]]],"^:A",false,"^7",689,"^:B","^<Y","^9",689,"^:E",3,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^>R","^;Y","^>S"]]]]]],"~$resolve-in",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",228,"^8",7,"^9",228,"^:",17,"^9[",["^1Q",["^:0",["^1Q",[["^:1",["^<[","~$value"]]]]]]],"^M","^5S","^6","datascript/query.cljc","^:",17,"^:2",["^1Q",[["^:1","~$p__23366"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^>[",["^:1",["^<[","^?0"]],["^1Q",["~$cond",["^1Q",["^<5",["^1Q",["~$instance?","^1I","^<["]],["^1Q",["^?3","^1E",["^1Q",["~:variable","^<["]]]]]],["^1Q",["^<O","^:1","~:sources","^;V",["^1Q",["~$get-in","^<[",["^?4","^=2"]]],"^?0"]],["^1Q",["^<5",["^1Q",["^?3","^1I","^<["]],["^1Q",["^?3","^1M",["^1Q",["^?4","^<["]]]]]],["^1Q",["^;V","^:1","~:rules",["^1Q",["~$parse-rules","^?0"]]]],"~:else",["^1Q",["^<O","^:1","^:@","^;W",["^1Q",["^>O","^<[","^?0"]]]]]]]]],"^:A",false,"^7",228,"^:B",["^L",["^:C","^:D"]],"^9",228,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^:1",["^<[","^?0"]]]]]]],"^;A",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",523,"^8",7,"^9",523,"^:",12,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^:H"]]]]]],"^M","^6;","^6","datascript/query.cljc","^:",12,"^:2",["^1Q",[["^:1","^:H"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^;A",["^:1","^:H"],["^1Q",["^J",["^1Q",["^;@",["^1Q",["~$sequential?","^:H"]]]],false,"^>L",["~$head",["^1Q",["^;B",["^1Q",["~$source?",["^1Q",["^;;","^:H"]]]],["^1Q",["~$second","^:H"]],["^1Q",["^;;","^:H"]]]]],["^1Q",["^;@",["^1Q",["^>I","^?;"]]]],false,["^1Q",["^:L","^?;"]],false,["^1Q",["~$contains?",["^L",[["^1Q",["^:0","^<5"]],["^1Q",["^:0","^;@"]],["^1Q",["^:0","~$not-join"]],["^1Q",["^:0","~$or-join"]],["^1Q",["^:0","^<6"]],["^1Q",["^:0","~$_"]]]],"^?;"]],false,["^1Q",["^;@",["^1Q",["^?>",["^1Q",["^?7","^:1"]],"^?;"]]]],["^1Q",["^H","Unknown rule '","^?;"," in ","^:H",["^ ","^>F","^>G","^1P","^:H"]]],"^?9",true]]]]],"^:A",false,"^7",523,"^:B","^<7","^9",523,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^:H"]]]]]],"^?<",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",85,"^8",7,"^9",85,"^:",14,"^9[",["^1Q",["^:0",["^1Q",[["~$sym"]]]]]],"^M","^5W","^6","datascript/query.cljc","^:",14,"^:2",["^1Q",[["^?A"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^?<",["^?A"],["^1Q",["^<5",["^1Q",["^>I","^?A"]],["^1Q",["~$=","~c$",["^1Q",["^;;",["^1Q",["~$name","^?A"]]]]]]]]]]],"^:A",false,"^7",85,"^:B","^<7","^9",85,"^:E",1,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^?A"]]]]]],"~$-q",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",800,"^8",7,"^9",800,"^:",9,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^:S"]]]]]],"^M","^62","^6","datascript/query.cljc","^:",9,"^:2",["^1Q",[["^:1","^:S"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^?C",["^:1","^:S"],["^1Q",["^<[",["~$*implicit-source*",["^1Q",["^;X",["^1Q",["^?5","^:1"]],["^1Q",["^:0","~$$"]]]]],["^1Q",["^:T","~$resolve-clause","^:1","^:S"]]]]]]],"^:A",false,"^7",800,"^9",800,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^:S"]]]]]],"^>8",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",93,"^8",7,"^9",93,"^:",12,"^9[",["^1Q",["^:0",["^1Q",[["^>S"]]]]]],"^M","^6K","^6","datascript/query.cljc","^:",12,"^:2",["^1Q",[["^>S"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^>8",["^>S"],["^1Q",["^<6",["^1Q",["~$keyword?","^>S"]],["^1Q",["~$string?","^>S"]]]]]]],"^:A",false,"^7",93,"^:B","^<7","^9",93,"^:E",1,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^>S"]]]]]],"~$intersect-keys",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",49,"^8",7,"^9",49,"^:",21,"^9[",["^1Q",["^:0",["^1Q",[["~$attrs1","~$attrs2"]]]]]],"^M","^6F","^6","datascript/query.cljc","^:",21,"^:2",["^1Q",[["^?I","^?J"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^?H",["^?I","^?J"],["^1Q",["~$set/intersection",["^1Q",["^V",["^1Q",["^:>","^?I"]]]],["^1Q",["^V",["^1Q",["^:>","^?J"]]]]]]]]],"^:A",false,"^7",49,"^:B",["^L",[null,"^:D"]],"^9",49,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^?I","^?J"]]]]]],"^>0",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",900,"^8",7,"^9",900,"^:",11,"^9[",["^1Q",["^:0",["^1Q",[["~$f","~$xs"]]]]]],"^M","^7J","^6","datascript/query.cljc","^:",11,"^:2",["^1Q",[["~$f","^?L"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^>0",["~$f","^?L"],["^1Q",["^:T",["^1Q",["^:<",["~$p1__23661#","~$p2__23662#"],["^1Q",["^;W","^?M",["^1Q",["~$f","^?N"]]]]]],["^1Q",["~$empty","^?L"]],"^?L"]]]]],"^:A",false,"^7",900,"^:B",["^L",[null,"^:D"]],"^9",900,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["~$f","^?L"]]]]]],"~$rule-seqid",["^ ","^5",["^ ","^6","datascript/query.cljc","^7",548,"^8",6,"^9",548,"^:",16],"^M","^6T","^6","datascript/query.cljc","^:",16,"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["~$def","^?P",["^1Q",["~$atom",0]]]]],"^7",548,"^9",548,"~:tag","~$cljs.core/Atom"],"^;E",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",832,"^8",7,"^9",832,"^:",15,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^=Y"],["~$acc","^<J","^=Y"]]]]],"~:top-fn",["^ ","^:A",false,"~:fixed-arity",3,"^:E",3,"^:2",[["^:1","^=Y"],["^?U","^<J","^=Y"]],"^9[",["^1Q",[["^:1","^=Y"],["^?U","^<J","^=Y"]]],"^:4",["^1Q",[null,null]]]],"^M","^6N","^6","datascript/query.cljc","^:",15,"^?V",["^ ","^:A",false,"^?W",3,"^:E",3,"^:2",[["^:1","^=Y"],["^?U","^<J","^=Y"]],"^9[",["^1Q",[["^:1","^=Y"],["^?U","^<J","^=Y"]]],"^:4",["^1Q",[null,null]]],"^:2",[["^:1","^=Y"],["^?U","^<J","^=Y"]],"^:3",null,"^?W",3,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^;E",["^1Q",[["^:1","^=Y"],["^1Q",["^:I",["^<J",["^1Q",["^:@","^:1"]]],["^1Q",["^;E",[["^1Q",["~$da/make-array",["^1Q",["^=J","^=Y"]]]]],"^<J","^=Y"]]]]]],["^1Q",[["^?U","^<J","^=Y"],["^1Q",["^J","^>L",["^;7",["^1Q",["^;;","^<J"]]],["^1Q",["^;C","^;7"]],"^?U",["^1Q",["^:Y",["^1Q",["^:Z","^;7"]]]],[],"^>L",["~$keep-attrs",["^1Q",["^<X",["^1Q",["^:?","^;7"]],"^=Y"]]],["^1Q",["^:Y","^?Y"]],["^1Q",["^;G","^?U",["^1Q",["^;H","^<J"]],"^=Y"]],"^>L",["~$copy-map",["^1Q",["~$to-array",["^1Q",["^<@",["^1Q",["^:<",["~$p1__23643#"],["^1Q",["^;X","^?Y","^@0"]]]],"^=Y"]]]],"~$len",["^1Q",["^=J","^=Y"]]],"^?9",["^1Q",["^;G",["^1Q",["~$-collect-tuples","^?U","^;7","^@1","^?Z"]],["^1Q",["^;H","^<J"]],"^=Y"]]]]]]]]],"^:A",false,"~:methods",[["^ ","^?W",2,"^:A",false,"^?S","^:D"],["^ ","^?W",3,"^:A",false,"^?S",["^L",[null,"^<R"]]]],"^7",832,"^9",832,"^:E",3,"^:F",true,"^9[",["^1Q",[["^:1","^=Y"],["^?U","^<J","^=Y"]]]],"~$q",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",952,"^8",7,"^9",952,"^:",8,"^9[",["^1Q",["^:0",["^1Q",[["~$q","~$&","~$inputs"]]]]],"^?V",["^ ","^:A",true,"^?W",1,"^:E",1,"^:2",[["^1Q",["~$q","^@4"]]],"^9[",["^1Q",[["~$q","~$&","^@4"]]],"^:4",["^1Q",[null]]]],"^M","^7G","^6","datascript/query.cljc","^:",8,"^?V",["^ ","^:A",true,"^?W",1,"^:E",1,"^:2",[["^1Q",["~$q","^@4"]]],"^9[",["^1Q",[["~$q","~$&","^@4"]]],"^:4",["^1Q",[null]]],"^:2",[["^1Q",["~$q","^@4"]]],"^:3",null,"^?W",1,"^:4",["^1Q",[null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","~$q",["~$q","~$&","^@4"],["^1Q",["^:I",["~$parsed-q",["^1Q",["~$lru/-get","~$*query-cache*","~$q",["^1Q",["^:<",[],["^1Q",["~$dp/parse-query","~$q"]]]]]],"^=5",["^1Q",["~:qfind","^@5"]],"^<9",["^1Q",["~$dp/find-elements","^=5"]],"~$find-vars",["^1Q",["~$dp/find-vars","^=5"]],"~$result-arity",["^1Q",["^=J","^<9"]],"~$with",["^1Q",["~:qwith","^@5"]],"~$all-vars",["^1Q",["^;Q","^@;",["^1Q",["^<@","^=2","^@>"]]]],"~$q",["^1Q",["~$cond->","~$q",["^1Q",["^?:","~$q"]],"~$dp/query->map"]],"~$wheres",["^1Q",["~:where","~$q"]],"^:1",["^1Q",["^>6",["^1Q",["~$Context.",[],["^ "],["^ "]]],["^1Q",["~$resolve-ins",["^1Q",["~:qin","^@5"]],"^@4"]]]],"^<:",["^1Q",["^>6","^:1",["^1Q",["^?C","^@C"]],["^1Q",["~$collect","^@@"]]]]],["^1Q",["~$cond->>","^<:",["^1Q",["~:with","~$q"]],["^1Q",["^=;",["^1Q",["^:<",["~$p1__23671#"],["^1Q",["~$vec",["^1Q",["^>;","^@K",0,"^@="]]]]]]]],["^1Q",["^:W","^<>","^<9"]],["^1Q",["^<8","^<9","^:1"]],["^1Q",["^:W","^=7","^<9"]],["^1Q",["^=3","^<9","^:1"]],true,["^1Q",["~$-post-process","^=5",["^1Q",["~:qreturn-map","^@5"]]]]]]]]]]],"^:A",true,"^@3",[["^ ","^?W",1,"^:A",true,"^?S","^:D"]],"^7",952,"^:B","^:D","^9",952,"^:E",1,"^:F",true,"^9[",["^1Q",[["~$q","~$&","^@4"]]]],"^>C",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",432,"^8",8,"^9",432,"^:",27,"^<G",true,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^?A"]]]]]],"^<G",true,"^M","^7H","^6","datascript/query.cljc","^:",27,"^:2",["^1Q",[["^:1","^?A"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^<I","^>C",["^:1","^?A"],["^1Q",["^<U",["^;7",["^1Q",["^>E","^:1","^?A"]]],["^1Q",["^<U",["^<4",["^1Q",["^;;",["^1Q",["^:Z","^;7"]]]]],["^1Q",["~$da/aget","^<4",["^1Q",[["^1Q",["^:?","^;7"]],"^?A"]]]]]]]]]]],"^:A",false,"^7",432,"^:B",["^L",["^:D","^<Y"]],"^9",432,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^?A"]]]]]],"~$walk-collect",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",578,"^8",7,"^9",578,"^:",19,"^9[",["^1Q",["^:0",["^1Q",[["^>S","~$pred"]]]]]],"^M","^6I","^6","datascript/query.cljc","^:",19,"^:2",["^1Q",[["^>S","^@Q"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^@P",["^>S","^@Q"],["^1Q",["^:I",["~$res",["^1Q",["^?R",[]]]],["^1Q",["~$walk/postwalk",["^1Q",["^:<",["~$p1__23476#"],["^1Q",["^=O",["^1Q",["^=6",["^1Q",["^@Q","^@T"]],["^1Q",["~$swap!","^@R","^;W","^@T"]]]],"^@T"]]]],"^>S"]],["^1Q",["~$clojure.core/deref","^@R"]]]]]]],"^:A",false,"^7",578,"^:B","^:D","^9",578,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^>S","^@Q"]]]]]],"~$lookup-pattern-coll",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",400,"^8",7,"^9",400,"^:",26,"^9[",["^1Q",["^:0",["^1Q",[["~$coll","^<3"]]]]]],"^M","^6U","^6","datascript/query.cljc","^:",26,"^:2",["^1Q",[["^@X","^<3"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^@W",["^@X","^<3"],["^1Q",["^:I",["~$data",["^1Q",["^:K",["^1Q",["^:<",["~$p1__23389#"],["^1Q",["^<2","^<3","^@Z"]]]],"^@X"]],"~$attr->idx",["^1Q",["^=0",["^1Q",["^<@","~$vector","^<3",["^1Q",["^:O"]]]],["^1Q",["^:K",["^1Q",["^:Q",[["~$s","~$_"]],["^1Q",["^:L","~$s"]]]]]],["^1Q",["^::",["^ "]]]]]],["^1Q",["^;8","^@[",["^1Q",["^=;","^?[","^@Y"]]]]]]]]],"^:A",false,"^7",400,"^:B","^4O","^9",400,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^@X","^<3"]]]]]],"~$IBinding",["^ ","^5",["^ ","~:protocol-symbol",true,"^6","datascript/query.cljc","^:",22,"^8",14,"^7",190,"~:protocol-info",["^ ","^@3",["^ ","^>O",[["^<[","^?0"]]]],"^9",190,"~:sigs",["^ ","~:in->rel",["^ ","^M","^>O","^9[",["^1Q",[["^<[","^?0"]]],"^=E",null]],"~:jsdoc",["^1Q",["@interface"]]],"^A2",true,"^M","^6P","^6","datascript/query.cljc","^:",22,"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["~$defprotocol","^A1",["^1Q",["^>O",["^<[","^?0"]]]]]],"^7",190,"^A3",["^ ","^@3",["^ ","^>O",[["^<[","^?0"]]]],"~:info",null,"^9",190,"^?S","^:D","^A4",["^ ","^A5",["^ ","^M","^>O","^9[",["^1Q",[["^<[","^?0"]]],"^=E",null]],"~:impls",["^L",["^4M","^4[","^53","^6L"]],"^A6",["^1Q",["@interface"]]],"~$IContextResolve",["^ ","^5",["^ ","^A2",true,"^6","datascript/query.cljc","^:",29,"^8",14,"^7",858,"^A3",["^ ","^@3",["^ ","^=8",[["~$var","^:1"]]]],"^9",858,"^A4",["^ ","~:-context-resolve",["^ ","^M","^=8","^9[",["^1Q",[["^A;","^:1"]]],"^=E",null]],"^A6",["^1Q",["@interface"]]],"^A2",true,"^M","^6S","^6","datascript/query.cljc","^:",29,"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^A7","^A:",["^1Q",["^=8",["^A;","^:1"]]]]]],"^7",858,"^A3",["^ ","^@3",["^ ","^=8",[["^A;","^:1"]]]],"^A8",null,"^9",858,"^?S","^:D","^A4",["^ ","^A<",["^ ","^M","^=8","^9[",["^1Q",[["^A;","^:1"]]],"^=E",null]],"^A9",["^L",["^2N","^3<","^4P","^63"]],"^A6",["^1Q",["@interface"]]],"^;M",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",571,"^8",7,"^9",571,"^:",22,"^9[",["^1Q",["^:0",["^1Q",[["^;<","^;U"]]]]]],"^M","^71","^6","datascript/query.cljc","^:",22,"^:2",["^1Q",[["^;<","^;U"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^;M",["^;<","^;U"],["^1Q",["^:I",[["^;J","~$&","^;K"],"^;<","~$prev-call-args",["^1Q",["^;X","^;U","^;J"]]],["^1Q",["^;[",["~$prev-args","^A=","^>L",[["^;K","^A>"],["^1Q",["~$remove-pairs","^;K","^A>"]]]],[["^1Q",["^;Q",[["^1Q",["^:0","^;S"]]],"^;K","^A>"]]]]]]]]]],"^:A",false,"^7",571,"^:B","^3V","^9",571,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^;<","^;U"]]]]]],"^@F",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",239,"^8",7,"^9",239,"^:",18,"^9[",["^1Q",["^:0",["^1Q",[["^:1","~$bindings","~$values"]]]]]],"^M","^77","^6","datascript/query.cljc","^:",18,"^:2",["^1Q",[["^:1","^A@","^AA"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^@F",["^:1","^A@","^AA"],["^1Q",["^:I",["~$cb",["^1Q",["^=J","^A@"]],"~$cv",["^1Q",["^=J","^AA"]]],["^1Q",["^?2",["^1Q",["~$<","^AB","^AC"]],["^1Q",["^H","Extra inputs passed, expected: ",["^1Q",["^=;",["^1Q",["^:<",["~$p1__23370#"],["^1Q",["^22",["^1Q",["~$meta","^AD"]]]]]],"^A@"]],", got: ","^AC",["^ ","^>F","~:query/inputs","~:expected","^A@","~:got","^AA"]]],["^1Q",["~$>","^AB","^AC"]],["^1Q",["^H","Too few inputs passed, expected: ",["^1Q",["^=;",["^1Q",["^:<",["~$p1__23371#"],["^1Q",["^22",["^1Q",["^AE","^AI"]]]]]],"^A@"]],", got: ","^AC",["^ ","^>F","^AF","^AG","^A@","^AH","^AA"]]],"^?9",["^1Q",["^:T","^>[","^:1",["^1Q",["^:N","^A@","^AA"]]]]]]]]]]],"^:A",false,"^7",239,"^:B",["^L",[null,"^:D"]],"^9",239,"^:E",3,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^A@","^AA"]]]]]],"^>D",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",478,"^8",8,"^9",478,"^:",19,"^<G",true,"^9[",["^1Q",["^:0",["^1Q",[["^?A"]]]]]],"^<G",true,"^M","^6B","^6","datascript/query.cljc","^:",19,"^:2",["^1Q",[["^?A"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^<I","^>D",["^?A"],null]]],"^:A",false,"^7",478,"^:B","^<Y","^9",478,"^:E",1,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^?A"]]]]]],"^A?",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",565,"^8",7,"^9",565,"^:",19,"^9[",["^1Q",["^:0",["^1Q",[["^?L","~$ys"]]]]]],"^M","^6D","^6","datascript/query.cljc","^:",19,"^:2",["^1Q",[["^?L","^AJ"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^A?",["^?L","^AJ"],["^1Q",["^:I",["~$pairs",["^1Q",["^=0",["^1Q",["^<@","^A0","^?L","^AJ"]],["^1Q",["^<Q",["^1Q",["^:Q",[["~$x","~$y"]],["^1Q",["~$=","~$x","~$y"]]]]]]]]],[["^1Q",["^<@","^;;","^AK"]],["^1Q",["^<@","^?=","^AK"]]]]]]]],"^:A",false,"^7",565,"^:B","^<R","^9",565,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^?L","^AJ"]]]]]],"~$single",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",45,"^8",7,"^9",45,"^:",13,"^9[",["^1Q",["^:0",["^1Q",[["^@X"]]]]]],"^M","^79","^6","datascript/query.cljc","^:",13,"^:2",["^1Q",[["^@X"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^AL",["^@X"],["^1Q",["~$assert",["^1Q",["^;C",["^1Q",["^;H","^@X"]]]],"Expected single element"]],["^1Q",["^;;","^@X"]]]]],"^:A",false,"^7",45,"^:B",["^L",["^:D","^<Y"]],"^9",45,"^:E",1,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^@X"]]]]]],"^@7",["^ ","^5",["^ ","^6","datascript/query.cljc","^7",27,"^8",16,"^9",27,"^:",29,"~:dynamic",true],"^M","^2P","^6","datascript/query.cljc","^:",29,"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^?Q","^@7",["^1Q",["~$lru/cache",100]]]]],"^AN",true,"^7",27,"^9",27,"^?S","^:D"],"^<1",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",53,"^8",7,"^9",53,"^:",14,"^9[",["^1Q",["^:0",["^1Q",[["~$&","^?L"]]]]],"^?V",["^ ","^:A",true,"^?W",0,"^:E",0,"^:2",[["^1Q",["^?L"]]],"^9[",["^1Q",[["~$&","^?L"]]],"^:4",["^1Q",[null]]]],"^M","^72","^6","datascript/query.cljc","^:",14,"^?V",["^ ","^:A",true,"^?W",0,"^:E",0,"^:2",[["^1Q",["^?L"]]],"^9[",["^1Q",[["~$&","^?L"]]],"^:4",["^1Q",[null]]],"^:2",[["^1Q",["^?L"]]],"^:3",null,"^?W",0,"^:4",["^1Q",[null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^<1",["~$&","^?L"],["^1Q",["^::",[],"~$cat","^?L"]]]]],"^:A",true,"^@3",[["^ ","^?W",0,"^:A",true,"^?S","^:D"]],"^7",53,"^:B","^:D","^9",53,"^:E",0,"^:F",true,"^9[",["^1Q",[["~$&","^?L"]]]],"~$subtract-rel",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",370,"^8",7,"^9",370,"^:",19,"^9[",["^1Q",["^:0",["^1Q",[["~$a","~$b"]]]]]],"^M","^7>","^6","datascript/query.cljc","^:",19,"^:2",["^1Q",[["~$a","~$b"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^AQ",["~$a","~$b"],["^1Q",["^:I",[["^ ","~$attrs-a","^:?","~$tuples-a","^:Z"],"~$a",["^ ","~$attrs-b","^:?","~$tuples-b","^:Z"],"~$b","^<H",["^1Q",["^@L",["^1Q",["^?H","^AR","^AT"]]]],"~$key-fn-b",["^1Q",["^=H","^AT","^<H"]],"~$hash",["^1Q",["~$hash-attrs","^AV","^AU"]],"~$key-fn-a",["^1Q",["^=H","^AR","^<H"]]],["^1Q",["^;V","~$a","^:Z",["^1Q",["~$filterv",["^1Q",["^:<",["~$p1__23379#"],["^1Q",["^;C",["^1Q",["^AW",["^1Q",["^AY","^A["]]]]]]]],"^AS"]]]]]]]]],"^:A",false,"^7",370,"^:B",["^L",["^:C","^:D"]],"^9",370,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["~$a","~$b"]]]]]],"^<L",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",437,"^8",8,"^9",437,"^:",27,"^<G",true,"^9[",["^1Q",["^:0",["^1Q",[["^;7","^<H"]]]]]],"^<G",true,"^M","^7F","^6","datascript/query.cljc","^:",27,"^:2",["^1Q",[["^;7","^<H"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^<I","^<L",["^;7","^<H"],["^1Q",["^:W",["^1Q",["^:<",["~$p1__23401#"],["^1Q",["^?>",["^1Q",["^:?","^;7"]],"^B0"]]]],"^<H"]]]]],"^:A",false,"^7",437,"^:B",["^L",["^:D","^<Y"]],"^9",437,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^;7","^<H"]]]]]],"^>W",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",583,"^8",7,"^9",583,"^:",19,"^9[",["^1Q",["^:0",["^1Q",[["^:H"]]]]]],"^M","^7K","^6","datascript/query.cljc","^:",19,"^:2",["^1Q",[["^:H"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^>W",["^:H"],["^1Q",["^V",["^1Q",["^@P","^:H","^:L"]]]]]]],"^:A",false,"^7",583,"^:B",["^L",["^:C","^:D","~$cljs.core/ISet","~$cljs.core/MetaFn","^<Y"]],"^9",583,"^:E",1,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^:H"]]]]]],"^<N",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",160,"^8",7,"^9",160,"^:",15,"^9[",["^1Q",["^:0",["^1Q",[[],["~$rel1","~$rel2"]]]]],"^?V",["^ ","^:A",false,"^?W",2,"^:E",2,"^:2",[[],["^B3","^B4"]],"^9[",["^1Q",[[],["^B3","^B4"]]],"^:4",["^1Q",[null,null]]]],"^M","^7D","^6","datascript/query.cljc","^:",15,"^?V",["^ ","^:A",false,"^?W",2,"^:E",2,"^:2",[[],["^B3","^B4"]],"^9[",["^1Q",[[],["^B3","^B4"]]],"^:4",["^1Q",[null,null]]],"^:2",[[],["^B3","^B4"]],"^:3",null,"^?W",2,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^<N",["^1Q",[[],["^1Q",["^;8",["^ "],[["^1Q",["^?X",0]]]]]]],["^1Q",[["^B3","^B4"],["^1Q",["^:I",["^?I",["^1Q",["^:>",["^1Q",["^:?","^B3"]]]],"^?J",["^1Q",["^:>",["^1Q",["^:?","^B4"]]]],"~$idxs1",["^1Q",["^?[",["^1Q",["^<@",["^1Q",["^:?","^B3"]],"^?I"]]]],"~$idxs2",["^1Q",["^?[",["^1Q",["^<@",["^1Q",["^:?","^B4"]],"^?J"]]]]],["^1Q",["^;8",["^1Q",["^:N",["^1Q",["^;Q","^?I","^?J"]],["^1Q",["^:O"]]]],["^1Q",["~$persistent!",["^1Q",["^:T",["^1Q",["^:Q",["^?U","~$t1"],["^1Q",["^:T",["^1Q",["^:Q",["^?U","~$t2"],["^1Q",["~$conj!","^?U",["^1Q",["~$join-tuples","^B8","^B5","^B9","^B6"]]]]]],"^?U",["^1Q",["^:Z","^B4"]]]]]],["^1Q",["~$transient",[]]],["^1Q",["^:Z","^B3"]]]]]]]]]]]]]]],"^:A",false,"^@3",[["^ ","^?W",0,"^:A",false,"^?S","^4O"],["^ ","^?W",2,"^:A",false,"^?S","^4O"]],"^7",160,"^9",160,"^:E",2,"^:F",true,"^9[",["^1Q",[[],["^B3","^B4"]]]],"~$lookup-pattern",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",412,"^8",7,"^9",412,"^:",21,"^9[",["^1Q",["^:0",["^1Q",[["^>2","^<3"]]]]]],"^M","^2I","^6","datascript/query.cljc","^:",21,"^:2",["^1Q",[["^>2","^<3"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^B=",["^>2","^<3"],["^1Q",["^?2",["^1Q",["^>3","~$db/ISearch","^>2"]],["^1Q",["~$lookup-pattern-db","^>2","^<3"]],"^?9",["^1Q",["^@W","^>2","^<3"]]]]]]],"^:A",false,"^7",412,"^:B","^4O","^9",412,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^>2","^<3"]]]]]],"^<E",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",876,"^8",7,"^9",876,"^:",17,"^9[",["^1Q",["^:0",["^1Q",[["^<9","^:1","^;D"]]]]]],"^M","^7B","^6","datascript/query.cljc","^:",17,"^:2",["^1Q",[["^<9","^:1","^;D"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^<E",["^<9","^:1","^;D"],["^1Q",["^=;",["^1Q",["^:Q",["~$element","~$fixed-value","~$i"],["^1Q",["^;B",["^1Q",["^<>","^B@"]],["^1Q",["^:I",["~$f",["^1Q",["^=8",["^1Q",["~:fn","^B@"]],"^:1"]],"^>>",["^1Q",["^<@",["^1Q",["^:<",["~$p1__23646#"],["^1Q",["^=8","^BC","^:1"]]]],["^1Q",["~$butlast",["^1Q",["~:args","^B@"]]]]]],"~$vals",["^1Q",["^<@",["^1Q",["^:<",["~$p1__23647#"],["^1Q",["^<B","^BG","~$i"]]]],"^;D"]]],["^1Q",["^>Y","~$f",["^1Q",["^;Q","^>>",["^BF"]]]]]]],"^BA"]]]],"^<9",["^1Q",["^;;","^;D"]],["^1Q",["^:O"]]]]]]],"^:A",false,"^7",876,"^:B",["^L",[null,"^:C","^:D"]],"^9",876,"^:E",3,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^<9","^:1","^;D"]]]]]],"^:U",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",707,"^8",7,"^9",707,"^:",22,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^:H"],["^:1","^:H","~$orig-clause"]]]]],"^?V",["^ ","^:A",false,"^?W",3,"^:E",3,"^:2",[["^:1","^:H"],["^:1","^:H","^BH"]],"^9[",["^1Q",[["^:1","^:H"],["^:1","^:H","^BH"]]],"^:4",["^1Q",[null,null]]]],"^M","^2B","^6","datascript/query.cljc","^:",22,"^?V",["^ ","^:A",false,"^?W",3,"^:E",3,"^:2",[["^:1","^:H"],["^:1","^:H","^BH"]],"^9[",["^1Q",[["^:1","^:H"],["^:1","^:H","^BH"]]],"^:4",["^1Q",[null,null]]],"^:2",[["^:1","^:H"],["^:1","^:H","^BH"]],"^:3",null,"^?W",3,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^:U",["^1Q",[["^:1","^:H"],["^1Q",["^:U","^:1","^:H","^:H"]]]],["^1Q",[["^:1","^:H","^BH"],["^1Q",["~$condp","~$looks-like?","^:H",[["^>I",["^1Q",["^:0","~$*"]]]],["^1Q",["^=O",["^1Q",["~$check-bound",["^1Q",["^9Y","^:1"]],["^1Q",["^:K","^:L",["^1Q",["~$nfirst","^:H"]]]],"^:H"]],["^1Q",["~$filter-by-pred","^:1","^:H"]]]],[["^>I",["^1Q",["^:0","~$*"]]],["^1Q",["^:0","~$_"]]],["^1Q",["^=O",["^1Q",["^BK",["^1Q",["^9Y","^:1"]],["^1Q",["^:K","^:L",["^1Q",["^BL","^:H"]]]],"^:H"]],["^1Q",["^>=","^:1","^:H"]]]],["^?<",["^1Q",["^:0","~$*"]]],["^1Q",["^:I",[["~$source-sym","~$&","~$rest"],"^:H"],["^1Q",["^<[",["^?D",["^1Q",["^;X",["^1Q",["^?5","^:1"]],"^BN"]]],["^1Q",["^:U","^:1","^BO","^:H"]]]]]],["^1Q",["^:0",["^<6","~$*"]]],["^1Q",["^:I",[["~$_","~$&","^;Y"],"^:H","~$_",["^1Q",["^>Q",["^1Q",["^9Y","^:1"]],"^;Y","^:H"]],"~$contexts",["^1Q",["^<@",["^1Q",["^:<",["~$p1__23572#"],["^1Q",["^?E","^:1","^BQ"]]]],"^;Y"]],"^<J",["^1Q",["^<@",["^1Q",["^:<",["~$p1__23573#"],["^1Q",["^:T","~$hash-join",["^1Q",["^:@","^BR"]]]]]],"^BP"]]],["^1Q",["^;V",["^1Q",["^;;","^BP"]],"^:@",[["^1Q",["^:T","^;I","^<J"]]]]]]],["^1Q",["^:0",["^?@",[["~$*"],"~$*"],"~$*"]]],["^1Q",["^:I",[["~$_",["~$req-vars","~$&","^<T"],"~$&","^;Y"],"^:H","^>R",["^1Q",["^9Y","^:1"]]],["^1Q",["^BK","^>R","^BT","^BH"]],["^1Q",["~$check-free-subset","^>R","^<T","^;Y"]],["^1Q",["^;G","^:1",["^1Q",["^=S",["^1Q",["^:0","^?@"]],["^1Q",["^;Q","^BT","^<T"]],"^;Y"]],"^:H"]]]],["^1Q",["^:0",["^?@",["~$*"],"~$*"]]],["^1Q",["^:I",[["~$_","^<T","~$&","^;Y"],"^:H","^<T",["^1Q",["^V","^<T"]],"~$_",["^1Q",["^BU",["^1Q",["^9Y","^:1"]],"^<T","^;Y"]],"~$join-context",["^1Q",["~$limit-context","^:1","^<T"]],"^BP",["^1Q",["^<@",["^1Q",["^:<",["~$p1__23574#"],["^1Q",["^>6","^BV",["^1Q",["^?E","^BX"]],["^1Q",["^BW","^<T"]]]]]],"^;Y"]],"^<J",["^1Q",["^<@",["^1Q",["^:<",["~$p1__23575#"],["^1Q",["^:T","^BS",["^1Q",["^:@","^BY"]]]]]],"^BP"]],"^;I",["^1Q",["^:T","^;I","^<J"]]],["^1Q",["^<O","^:1","^:@","^>P","^;I"]]]],["^1Q",["^:0",["^<5","~$*"]]],["^1Q",["^:I",[["~$_","~$&","^:S"],"^:H"],["^1Q",["^:T","^?E","^:1","^:S"]]]],["^1Q",["^:0",["^;@","~$*"]]],["^1Q",["^:I",[["~$_","~$&","^:S"],"^:H","^>R",["^1Q",["^9Y","^:1"]],"~$negation-vars",["^1Q",["^>W","^:S"]],"~$_",["^1Q",["^=6",["^1Q",["^:Y",["^1Q",["^?K","^>R","^BZ"]]]],["^1Q",["^H","Insufficient bindings: none of ","^BZ"," is bound in ","^BH",["^ ","^>F","^>G","^1P","^BH"]]]]],"~$context'",["^1Q",["^;V","^:1","^:@",[["^1Q",["^:T","^BS",["^1Q",["^:@","^:1"]]]]]]],"~$negation-context",["^1Q",["^:T","^?E","^B[","^:S"]],"~$negation",["^1Q",["^AQ",["^1Q",["^AL",["^1Q",["^:@","^B["]]]],["^1Q",["^:T","^BS",["^1Q",["^:@","^C0"]]]]]]],["^1Q",["^;V","^B[","^:@",["^C1"]]]]],["^1Q",["^:0",["^??",["~$*"],"~$*"]]],["^1Q",["^:I",[["~$_","^<T","~$&","^:S"],"^:H","^>R",["^1Q",["^9Y","^:1"]],"~$_",["^1Q",["^BK","^>R","^<T","^BH"]],"^B[",["^1Q",["^;V","^:1","^:@",[["^1Q",["^:T","^BS",["^1Q",["^:@","^:1"]]]]]]],"^BV",["^1Q",["^BW","^B[","^<T"]],"^C0",["^1Q",["^>6",["^1Q",["^:T","^?E","^BV","^:S"]],["^1Q",["^BW","^<T"]]]],"^C1",["^1Q",["^AQ",["^1Q",["^AL",["^1Q",["^:@","^B["]]]],["^1Q",["^:T","^BS",["^1Q",["^:@","^C0"]]]]]]],["^1Q",["^;V","^B[","^:@",["^C1"]]]]],["^1Q",["^:0",["~$*"]]],["^1Q",["^:I",["^>2","^?D","^<3",["^1Q",["^>1","^>2","^:H"]],"~$relation",["^1Q",["^B=","^>2","^<3"]]],["^1Q",["^<[",["~$*lookup-attrs*",["^1Q",["^;B",["^1Q",["^>3","^>4","^>2"]],["^1Q",["~$dynamic-lookup-attrs","^>2","^<3"]],"^C3"]]],["^1Q",["^<O","^:1","^:@","^>P","^C2"]]]]]]]]]]]]],"^:A",false,"^@3",[["^ ","^?W",2,"^:A",false,"^?S","^:D"],["^ ","^?W",3,"^:A",false,"^?S",["^L",[null,"^:C","^:D"]]]],"^7",707,"^9",707,"^:E",3,"^:F",true,"^9[",["^1Q",[["^:1","^:H"],["^:1","^:H","^BH"]]]],"^C3",["^ ","^5",["^ ","^6","datascript/query.cljc","^7",258,"^8",3,"^9",258,"^:",17,"^AN",true,"^=E","List of symbols in current pattern that might potentiall be resolved to refs"],"^M","^73","^6","datascript/query.cljc","^:",17,"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^?Q","^C3",null]]],"^AN",true,"^7",256,"^9",258,"^?S","^:D","^=E","List of symbols in current pattern that might potentiall be resolved to refs"],"^?D",["^ ","^5",["^ ","^6","datascript/query.cljc","^7",262,"^8",3,"^9",262,"^:",20,"^AN",true,"^=E","Default pattern source. Lookup refs, patterns, rules will be resolved with it"],"^M","^2J","^6","datascript/query.cljc","^:",20,"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^?Q","^?D",null]]],"^AN",true,"^7",260,"^9",262,"^?S","^:D","^=E","Default pattern source. Lookup refs, patterns, rules will be resolved with it"],"~$->Relation",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^:",20,"^8",12,"^=@",true,"^=A","^=B","^7",40,"^9",40,"^9[",["^1Q",["^:0",["^1Q",[["^<H","^;D"]]]]],"^=E","Positional factory function for datascript.query/Relation."],"^M","^2K","^6","datascript/query.cljc","^:",20,"^:2",["^1Q",[["^<H","^;D"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^=@",true,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^=F","~$Relation",["^<H","^;D"]]]],"^:A",false,"^=A","^=B","^7",40,"^:B","^4O","^9",40,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^<H","^;D"]]]]],"^=E","Positional factory function for datascript.query/Relation."],"^B;",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",117,"^8",10,"^9",117,"^:",21,"^9[",["^1Q",["^:0",["^1Q",[["^B8","^B5","^B9","^B6"]]]]]],"^M","^3C","^6","datascript/query.cljc","^:",21,"^:2",["^1Q",[["^B8","^B5","^B9","^B6"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",4,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^B;",["^B8","^B5","^B9","^B6"],["^1Q",["^:I",["~$l1",["^1Q",["~$alength","^B5"]],"~$l2",["^1Q",["^C8","^B6"]],"^@R",["^1Q",["^?X",["^1Q",["~$+","^C7","^C9"]]]]],["^1Q",["~$dotimes",["~$i","^C7"],["^1Q",["^=P","^@R","~$i",["^1Q",["^@O","^B8",["^1Q",["^=Q","^B5","~$i"]]]]]]]],["^1Q",["^C:",["~$i","^C9"],["^1Q",["^=P","^@R",["^1Q",["~$+","^C7","~$i"]],["^1Q",["^@O","^B9",["^1Q",["^=Q","^B6","~$i"]]]]]]]],"^@R"]]]]],"^:A",false,"^7",117,"^:B","~$array","^9",117,"^:E",4,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^B8","^B5","^B9","^B6"]]]]]],"~$IPostProcess",["^ ","^5",["^ ","^A2",true,"^6","datascript/query.cljc","^:",26,"^8",14,"^7",913,"^A3",["^ ","^@3",["^ ","^@M",[["^=5","^=X","^;D"]]]],"^9",913,"^A4",["^ ","~:-post-process",["^ ","^M","^@M","^9[",["^1Q",[["^=5","^=X","^;D"]]],"^=E",null]],"^A6",["^1Q",["@interface"]]],"^A2",true,"^M","^2?","^6","datascript/query.cljc","^:",26,"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^A7","^C<",["^1Q",["^@M",["^=5","^=X","^;D"]]]]]],"^7",913,"^A3",["^ ","^@3",["^ ","^@M",[["^=5","^=X","^;D"]]]],"^A8",null,"^9",913,"^?S","^:D","^A4",["^ ","^C=",["^ ","^M","^@M","^9[",["^1Q",[["^=5","^=X","^;D"]]],"^=E",null]],"^A9",["^L",["^2Y","^5M","^5Y","^6E"]],"^A6",["^1Q",["@interface"]]],"^BJ",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",65,"^8",8,"^9",65,"^:",19,"^<G",true,"^9[",["^1Q",["^:0",["^1Q",[["^<3","^>S"]]]]]],"^<G",true,"^M","^2>","^6","datascript/query.cljc","^:",19,"^:2",["^1Q",[["^<3","^>S"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^<I","^BJ",["^<3","^>S"],["^1Q",["^?2",["^1Q",["~$=",["^1Q",["^:0","~$_"]],"^<3"]],true,["^1Q",["~$=",["^1Q",["^:0",["~$*"]]],"^<3"]],["^1Q",["^?:","^>S"]],["^1Q",["^>I","^<3"]],["^1Q",["~$=","^>S","^<3"]],["^1Q",["^?:","^<3"]],["^1Q",["^;B",["^1Q",["~$=",["^1Q",["~$last","^<3"]],["^1Q",["^:0","~$*"]]]],["^1Q",["^<5",["^1Q",["^?:","^>S"]],["^1Q",["~$every?",["^1Q",["^:Q",[["~$pattern-el","~$form-el"]],["^1Q",["^BJ","^C@","^CA"]]]],["^1Q",["^<@","^A0",["^1Q",["^BD","^<3"]],"^>S"]]]]]],["^1Q",["^<5",["^1Q",["^?:","^>S"]],["^1Q",["~$=",["^1Q",["^=J","^>S"]],["^1Q",["^=J","^<3"]]]],["^1Q",["^C?",["^1Q",["^:Q",[["^C@","^CA"]],["^1Q",["^BJ","^C@","^CA"]]]],["^1Q",["^<@","^A0","^<3","^>S"]]]]]]]],"^?9",["^1Q",["^<3","^>S"]]]]]]],"^:A",false,"^7",65,"^:B",["^L",["^<7","^:D"]],"^9",65,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^<3","^>S"]]]]]],"^C4",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",659,"^8",7,"^9",659,"^:",27,"^9[",["^1Q",["^:0",["^1Q",[["^>2","^<3"]]]]]],"^M","^33","^6","datascript/query.cljc","^:",27,"^:2",["^1Q",[["^>2","^<3"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^C4",["^>2","^<3"],["^1Q",["^:I",[["~$e","~$a","~$v","^>5"],"^<3"],["^1Q",["^@A",["^L",[]],["^1Q",["^:L","~$e"]],["^1Q",["^;W","~$e"]],["^1Q",["^:L","^>5"]],["^1Q",["^;W","^>5"]],["^1Q",["^<5",["^1Q",["^:L","~$v"]],["^1Q",["^;@",["^1Q",["^:L","~$a"]]]],["^1Q",["^>:","^>2","~$a"]]]],["^1Q",["^;W","~$v"]]]]]]]]],"^:A",false,"^7",659,"^:B","^:C","^9",659,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^>2","^<3"]]]]]],"^>7",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",96,"^8",7,"^9",96,"^:",18,"^9[",["^1Q",["^:0",["^1Q",[["^>S"]]]]]],"^M","^31","^6","datascript/query.cljc","^:",18,"^:2",["^1Q",[["^>S"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^>7",["^>S"],["^1Q",["^BJ",["^>8",["^1Q",["^:0","~$_"]]],"^>S"]]]]],"^:A",false,"^7",96,"^:B",["^L",["^<7","^:D"]],"^9",96,"^:E",1,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^>S"]]]]]],"^>O",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",191,"^8",4,"^9",191,"^:",11,"~:protocol","^6P","^=E",null,"^9[",["^1Q",["^:0",["^1Q",[["^<[","^?0"]]]]]],"^CB","^6P","^M","^2M","^6","datascript/query.cljc","^:",11,"^:2",["^1Q",[["^<[","^?0"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^A7","^A1",["^1Q",["^>O",["^<[","^?0"]]]]]],"^:A",false,"^7",190,"^:B","^:D","^9",191,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^<[","^?0"]]]]],"^=E",null],"^;Z",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",550,"^8",7,"^9",550,"^:",18,"^9[",["^1Q",["^:0",["^1Q",[["^:H","^:1","^;U"]]]]]],"^M","^2<","^6","datascript/query.cljc","^:",18,"^:2",["^1Q",[["^:H","^:1","^;U"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^;Z",["^:H","^:1","^;U"],["^1Q",["^:I",[["^;J","~$&","^;K"],"^:H","~$seqid",["^1Q",["^@U","^?P","~$inc"]],"^;Y",["^1Q",["^;X",["^1Q",["^?7","^:1"]],"^;J"]]],["^1Q",["^;[",["^<0","^;Y","^>L",[[["~$_","~$&","~$rule-args"],"~$&","^:S"],"^<0","~$replacements",["^1Q",["^:N","^CE","^;K"]]]],["^1Q",["^@S",["^1Q",["^:<",["~$p1__23435#"],["^1Q",["^;B",["^1Q",["^:L","^CG"]],["^1Q",["~$db/some-of",["^1Q",["^CF","^CG"]],["^1Q",["~$symbol",["^1Q",["^18",["^1Q",["^?B","^CG"]],"__auto__","^CC"]]]]]],"^CG"]]]],"^:S"]]]]]]]]],"^:A",false,"^7",550,"^:B","^3V","^9",550,"^:E",3,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^:H","^:1","^;U"]]]]]],"~$same-keys?",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",60,"^8",7,"^9",60,"^:",17,"^9[",["^1Q",["^:0",["^1Q",[["~$a","~$b"]]]]]],"^M","^34","^6","datascript/query.cljc","^:",17,"^:2",["^1Q",[["~$a","~$b"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^CJ",["~$a","~$b"],["^1Q",["^<5",["^1Q",["~$=",["^1Q",["^=J","~$a"]],["^1Q",["^=J","~$b"]]]],["^1Q",["^C?",["^1Q",["^:<",["~$p1__23305#"],["^1Q",["^?>","~$b","^CK"]]]],["^1Q",["^:>","~$a"]]]],["^1Q",["^C?",["^1Q",["^:<",["~$p1__23306#"],["^1Q",["^?>","~$b","^CL"]]]],["^1Q",["^:>","~$a"]]]]]]]]],"^:A",false,"^7",60,"^:B","^<7","^9",60,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["~$a","~$b"]]]]]],"^?E",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",792,"^8",7,"^9",792,"^:",21,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^:H"]]]]]],"^M","^49","^6","datascript/query.cljc","^:",21,"^:2",["^1Q",[["^:1","^:H"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^?E",["^:1","^:H"],["^1Q",["^;B",["^1Q",["^;A","^:1","^:H"]],["^1Q",["^;B",["^1Q",["^?<",["^1Q",["^;;","^:H"]]]],["^1Q",["^<[",["^?D",["^1Q",["^;X",["^1Q",["^?5","^:1"]],["^1Q",["^;;","^:H"]]]]],["^1Q",["^?E","^:1",["^1Q",["^;H","^:H"]]]]]],["^1Q",["^<O","^:1","^:@","^>P",["^1Q",["^:G","^:1","^:H"]]]]]],["^1Q",["^:U","^:1","^:H"]]]]]]],"^:A",false,"^7",792,"^:B",["^L",[null,"^:C","^:D"]],"^9",792,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^:H"]]]]]],"^BW",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",673,"^8",7,"^9",673,"^:",20,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^<T"]]]]]],"^M","^2S","^6","datascript/query.cljc","^:",20,"^:2",["^1Q",[["^:1","^<T"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^BW",["^:1","^<T"],["^1Q",["^;V","^:1","^:@",["^1Q",["^=0",["^1Q",["^:@","^:1"]],["^1Q",["~$keep",["^1Q",["^:<",["~$p1__23545#"],["^1Q",["^<S","^CN","^<T"]]]]]]]]]]]]],"^:A",false,"^7",673,"^:B",["^L",["^:C","^:D"]],"^9",673,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^<T"]]]]]],"^BS",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",337,"^8",7,"^9",337,"^:",16,"^9[",["^1Q",["^:0",["^1Q",[["^B3","^B4"]]]]]],"^M","^2W","^6","datascript/query.cljc","^:",16,"^:2",["^1Q",[["^B3","^B4"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^BS",["^B3","^B4"],["^1Q",["^:I",["~$tuples1",["^1Q",["^:Z","^B3"]],"~$tuples2",["^1Q",["^:Z","^B4"]],"^?I",["^1Q",["^:?","^B3"]],"^?J",["^1Q",["^:?","^B4"]],"^=I",["^1Q",["^@L",["^1Q",["^?H",["^1Q",["^:?","^B3"]],["^1Q",["^:?","^B4"]]]]]],"~$keep-attrs1",["^1Q",["^:>","^?I"]],"~$keep-attrs2",["^1Q",["^=0","^?J",["^1Q",["~$reduce-kv",["^1Q",["^:Q","~$keeper",["^@L","~$k","~$_"],["^1Q",["^;B",["^1Q",["^?I","~$k"]],"^@L",["^1Q",["^B:","^@L","~$k"]]]]]],["^1Q",["^B<",[]]]]],"^B7"]],"~$keep-idxs1",["^1Q",["^?[",["^1Q",["^BF","^?I"]]]],"~$keep-idxs2",["^1Q",["^?[",["^1Q",["~$->Eduction",["^1Q",["^<@","^?J"]],"^CR"]]]],"~$key-fn1",["^1Q",["^=H","^?I","^=I"]],"~$key-fn2",["^1Q",["^=H","^?J","^=I"]],"^AW",["^1Q",["^AX","^CX","^CO"]],"~$new-tuples",["^1Q",["^=0","^CP",["^1Q",["^:T",["^1Q",["^:Q","~$outer",["^?U","~$tuple2"],["^1Q",["^:I",["~$key",["^1Q",["^CY","^D0"]]],["^1Q",["^;9",["^CO",["^1Q",["^;X","^AW","^D1"]]],["^1Q",["^:T",["^1Q",["^:Q","~$inner",["^?U","~$tuple1"],["^1Q",["^B:","^?U",["^1Q",["^B;","^D3","^CU","^D0","^CV"]]]]]],"^?U","^CO"]],"^?U"]]]]]],["^1Q",["^B<",[]]]]],["^1Q",["^B7"]]]]],["^1Q",["^;8",["^1Q",["^:N",["^1Q",["^;Q","^CQ","^CR"]],["^1Q",["^:O"]]]],"^CZ"]]]]]]],"^:A",false,"^7",337,"^:B","^4O","^9",337,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^B3","^B4"]]]]]],"^>K",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",445,"^8",7,"^9",445,"^:",15,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^;7","~$f","^>>"]]]]]],"^M","^2X","^6","datascript/query.cljc","^:",15,"^:2",["^1Q",[["^:1","^;7","~$f","^>>"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^>K",["^:1","^;7","~$f","^>>"],["^1Q",["^:I",["^=C",["^1Q",["^?5","^:1"]],"^<H",["^1Q",["^:?","^;7"]],"^@1",["^1Q",["^=J","^>>"]],"~$static-args",["^1Q",["^?X","^@1"]],"~$tuples-args",["^1Q",["^?X","^@1"]]],["^1Q",["^C:",["~$i","^@1"],["^1Q",["^:I",["~$arg",["^1Q",["^<B","^>>","~$i"]]],["^1Q",["^;B",["^1Q",["^>I","^D6"]],["^1Q",["^;9",["^>2",["^1Q",["^;X","^=C","^D6"]]],["^1Q",["~$da/aset","^D4","~$i","^>2"]],["^1Q",["^D7","^D5","~$i",["^1Q",["^;X","^<H","^D6"]]]]]],["^1Q",["^D7","^D4","~$i","^D6"]]]]]]]],["^1Q",["^;B",["^1Q",["~$identical?","~$f","^A0"]],["^1Q",["^:Q",["^<4"],["^1Q",["^:I",["^>>",["^1Q",["~$da/aclone","^D4"]]],["^1Q",["^C:",["~$i","^@1"],["^1Q",["^<U",["~$tuple-idx",["^1Q",["^=Q","^D5","~$i"]]],["^1Q",["^:I",["~$v",["^1Q",["^@O","^<4","^D:"]]],["^1Q",["^D7","^>>","~$i","~$v"]]]]]]]],["^1Q",["^>Y","~$f","^>>"]]]]]],["^1Q",["^:Q",["^<4"],["^1Q",["^C:",["~$i","^@1"],["^1Q",["^<U",["^D:",["^1Q",["^=Q","^D5","~$i"]]],["^1Q",["^:I",["~$v",["^1Q",["^@O","^<4","^D:"]]],["^1Q",["^D7","^D4","~$i","~$v"]]]]]]]],["^1Q",["^>Y","~$f","^D4"]]]]]]]]]]],"^:A",false,"^7",445,"^:B","^=V","^9",445,"^:E",4,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^;7","~$f","^>>"]]]]]],"^?8",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",180,"^8",7,"^9",180,"^:",18,"^9[",["^1Q",["^:0",["^1Q",[["^=D"]]]]]],"^M","^2R","^6","datascript/query.cljc","^:",18,"^:2",["^1Q",[["^=D"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^?8",["^=D"],["^1Q",["^:I",["^=D",["^1Q",["^;B",["^1Q",["^?G","^=D"]],["^1Q",["~$edn/read-string","^=D"]],"^=D"]]],["^1Q",["~$dp/parse-rules","^=D"]],["^1Q",["^<D","~$ffirst","^=D"]]]]]]],"^:A",false,"^7",180,"^:B","^:C","^9",180,"^:E",1,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^=D"]]]]]],"^=G",["^ ","~:num-fields",3,"~:protocols",["^L",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^M","^3F","^6","datascript/query.cljc","^:",19,"~:type",true,"^8",12,"^=@",true,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^=F","^=G",["^<J","^=C","^=D"]]]],"^7",33,"~:record",true,"^9",33,"^?S","^=V","~:skip-protocol-flag",["^L",["^D@","^DA","^DB","^DC","^DD","^DE","^DF","^DG","^DH","^DI","^DJ","^DK","^DL","^DM","^DN"]]],"^;I",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",128,"^8",7,"^9",128,"^:",14,"^9[",["^1Q",["^:0",["^1Q",[["~$a","~$b"]]]]]],"^M","^3?","^6","datascript/query.cljc","^:",14,"^:2",["^1Q",[["~$a","~$b"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^;I",["~$a","~$b"],["^1Q",["^:I",[["^ ","^AR","^:?","^AS","^:Z"],"~$a",["^ ","^AT","^:?","^AU","^:Z"],"~$b"],["^1Q",["^?2",["^1Q",["~$=","^AR","^AT"]],["^1Q",["^;8","^AR",["^1Q",["^::",["^1Q",["^@L","^AS"]],"^AU"]]]],["^1Q",["^;@",["^1Q",["^CJ","^AR","^AT"]]]],["^1Q",["^H","Can’t sum relations with different attrs: ","^AR"," and ","^AT",["^ ","^>F","^>G"]]],["^1Q",["^C?","~$number?",["^1Q",["^BF","^AR"]]]],["^1Q",["^:I",["~$idxb->idxa",["^1Q",["^@L",["^1Q",["^;[",[["^?A","~$idx-b"],"^AT"],["^DT",["^1Q",["^AR","^?A"]]]]]]],"~$tlen",["^1Q",["^=0",["^1Q",["^BF","^AR"]],["^1Q",["^:T","~$max"]],["^1Q",["^CD"]]]],"~$tuples'",["^1Q",["^B7",["^1Q",["^:T",["^1Q",["^:Q",["^?U","~$tuple-b"],["^1Q",["^:I",["~$tuple'",["^1Q",["^?X","^DU"]]],["^1Q",["~$doseq",[["^DT","~$idx-a"],"^DS"],["^1Q",["^=P","^DY","^D[",["^1Q",["^@O","^DX","^DT"]]]]]],["^1Q",["^B:","^?U","^DY"]]]]]],["^1Q",["^B<",["^1Q",["^@L","^AS"]]]],"^AU"]]]]],["^1Q",["^;8","^AR","^DW"]]]],"^?9",["^1Q",["^:I",["~$all-attrs",["^1Q",["^:N",["^1Q",["^:>",["^1Q",["~$merge","^AR","^AT"]]]],["^1Q",["^:O"]]]]],["^1Q",["^>6",["^1Q",["^;8","^E0",[]]],["^1Q",["^;I","~$a"]],["^1Q",["^;I","~$b"]]]]]]]]]]]]],"^:A",false,"^7",128,"^:B",["^L",["^:D","^4O"]],"^9",128,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["~$a","~$b"]]]]]],"^>E",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",429,"^8",8,"^9",429,"^:",21,"^<G",true,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^?A"]]]]]],"^<G",true,"^M","^39","^6","datascript/query.cljc","^:",21,"^:2",["^1Q",[["^:1","^?A"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^<I","^>E",["^:1","^?A"],["^1Q",["^:W",["^1Q",["^:<",["~$p1__23398#"],["^1Q",["^=6",["^1Q",["^?>",["^1Q",["^:?","^E2"]],"^?A"]],"^E2"]]]],["^1Q",["^:@","^:1"]]]]]]],"^:A",false,"^7",429,"^:B",["^L",["^:D","^<Y"]],"^9",429,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^?A"]]]]]],"^:L",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",89,"^8",7,"^9",89,"^:",16,"^9[",["^1Q",["^:0",["^1Q",[["^?A"]]]]]],"^M","^2Q","^6","datascript/query.cljc","^:",16,"^:2",["^1Q",[["^?A"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^:L",["^?A"],["^1Q",["^<5",["^1Q",["^>I","^?A"]],["^1Q",["~$=","~c?",["^1Q",["^;;",["^1Q",["^?B","^?A"]]]]]]]]]]],"^:A",false,"^7",89,"^:B","^<7","^9",89,"^:E",1,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^?A"]]]]]],"~$map->Context",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^:",19,"^8",12,"^=@",true,"^=A","~:map","^7",33,"^9",33,"^9[",["^1Q",["^:0",["^1Q",[["~$G__23255"]]]]],"^=E","Factory function for datascript.query/Context, taking a map of keywords to field values."],"^M","^3[","^6","datascript/query.cljc","^:",19,"^:2",["^1Q",[["^E5"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^=@",true,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^=F","^=G",["^<J","^=C","^=D"]]]],"^:A",false,"^=A","^E4","^7",33,"^:B","^3F","^9",33,"^:E",1,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^E5"]]]]],"^=E","Factory function for datascript.query/Context, taking a map of keywords to field values."],"^=8",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",859,"^8",4,"^9",859,"^:",20,"^CB","^6S","^=E",null,"^9[",["^1Q",["^:0",["^1Q",[["^A;","^:1"]]]]]],"^CB","^6S","^M","^48","^6","datascript/query.cljc","^:",20,"^:2",["^1Q",[["^A;","^:1"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^A7","^A:",["^1Q",["^=8",["^A;","^:1"]]]]]],"^:A",false,"^7",858,"^:B","^:D","^9",859,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^A;","^:1"]]]]],"^=E",null],"^C6",["^ ","^D>",2,"^D?",["^L",["^D@","^DA","^DB","^DC","^DD","^DE","^DF","^DG","^DH","^DI","^DJ","^DK","^DL","^DM","^DN"]],"^M","^4O","^6","datascript/query.cljc","^:",20,"^DO",true,"^8",12,"^=@",true,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^=F","^C6",["^<H","^;D"]]]],"^7",40,"^DP",true,"^9",40,"^?S","^=V","^DQ",["^L",["^D@","^DA","^DB","^DC","^DD","^DE","^DF","^DG","^DH","^DI","^DJ","^DK","^DL","^DM","^DN"]]],"^BM",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",483,"^8",7,"^9",483,"^:",21,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^:H"]]]]]],"^M","^3U","^6","datascript/query.cljc","^:",21,"^:2",["^1Q",[["^:1","^:H"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^BM",["^:1","^:H"],["^1Q",["^:I",[[["~$f","~$&","^>>"]],"^:H","^@Q",["^1Q",["^<6",["^1Q",["^;X","^>B","~$f"]],["^1Q",["^>C","^:1","~$f"]],["^1Q",["^>D","~$f"]],["^1Q",["^=6",["^1Q",["^;C",["^1Q",["^>E","^:1","~$f"]]]],["^1Q",["^H","Unknown predicate '","~$f"," in ","^:H",["^ ","^>F","^>G","^1P","^:H","^>H","~$f"]]]]]]],["^:1","^<M"],["^1Q",["^<F","^:1",["^1Q",["^:K","^>I","^>>"]]]],"^;F",["^1Q",["^;B","^@Q",["^1Q",["^:I",["~$tuple-pred",["^1Q",["^>K","^:1","^<M","^@Q","^>>"]]],["^1Q",["^<O","^<M","^:Z",["^1Q",["^:<",["~$p1__23407#"],["^1Q",["^:K","^E6","^E7"]]]]]]]],["^1Q",["^;V","^<M","^:Z",[]]]]]],["^1Q",["^<O","^:1","^:@","^;W","^;F"]]]]]]],"^:A",false,"^7",483,"^:B",["^L",["^:C","^:D"]],"^9",483,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^:H"]]]]]],"^;P",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",586,"^8",7,"^9",586,"^:",19,"^9[",["^1Q",["^:0",["^1Q",[["^:S","^;L"]]]]]],"^M","^3K","^6","datascript/query.cljc","^:",19,"^:2",["^1Q",[["^:S","^;L"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^;P",["^:S","^;L"],["^1Q",["^:I",["^9Y",["^1Q",["^>W","^:S"]],"^@Q",["^1Q",["^:Q",[[["~$_","~$&","^<T"]]],["^1Q",["^C?","^9Y","^<T"]]]]],[["^1Q",["^:K","^@Q","^;L"]],["^1Q",["^<Q","^@Q","^;L"]]]]]]]],"^:A",false,"^7",586,"^:B","^<R","^9",586,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^:S","^;L"]]]]]],"^BU",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",697,"^8",7,"^9",697,"^:",24,"^9[",["^1Q",["^:0",["^1Q",[["^>R","^<T","^;Y"]]]]]],"^M","^3J","^6","datascript/query.cljc","^:",24,"^:2",["^1Q",[["^>R","^<T","^;Y"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^BU",["^>R","^<T","^;Y"],["^1Q",["^:I",["^>T",["^1Q",["^V",["^1Q",["^<Q","^>R","^<T"]]]]],["^1Q",["^DZ",["^<0","^;Y"],["^1Q",["^<U",["~$missing",["^1Q",["^<W",["^1Q",["^>V","^>T",["^1Q",["^>W","^<0"]]]]]]],["^1Q",["~$prn","^<0","^>R","^<T","^>T"]],["^1Q",["^H","All clauses in 'or' must use same set of free vars, had ","^E8"," not bound in ","^<0",["^ ","^>F","^>G","^1P","^<0","^>Z","^E8"]]]]]]]]]]]],"^:A",false,"^7",697,"^:B","^<Y","^9",697,"^:E",3,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^>R","^<T","^;Y"]]]]]],"~$normalize-pattern-clause",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",407,"^8",7,"^9",407,"^:",31,"^9[",["^1Q",["^:0",["^1Q",[["^:H"]]]]]],"^M","^3X","^6","datascript/query.cljc","^:",31,"^:2",["^1Q",[["^:H"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^E:",["^:H"],["^1Q",["^;B",["^1Q",["^?<",["^1Q",["^;;","^:H"]]]],"^:H",["^1Q",["^;Q",[["^1Q",["^:0","~$$"]]],"^:H"]]]]]]],"^:A",false,"^7",407,"^:B",["^L",[null,"^3V"]],"^9",407,"^:E",1,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^:H"]]]]]],"^@H",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",855,"^8",7,"^9",855,"^:",14,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^=Y"]]]]]],"^M","^47","^6","datascript/query.cljc","^:",14,"^:2",["^1Q",[["^:1","^=Y"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^@H",["^:1","^=Y"],["^1Q",["^::",["^L",[]],["^1Q",["^<@","^@L"]],["^1Q",["^;E","^:1","^=Y"]]]]]]],"^:A",false,"^7",855,"^:B","^:D","^9",855,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^:1","^=Y"]]]]]],"~$zip",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",56,"^8",7,"^9",56,"^:",10,"^9[",["^1Q",["^:0",["^1Q",[["~$a","~$b"],["~$a","~$b","~$&","^BO"]]]]],"^?V",["^ ","^:A",true,"^?W",2,"^:E",2,"^:2",[["~$a","~$b"]],"^9[",["^1Q",[["~$a","~$b"],["~$a","~$b","~$&","^BO"]]],"^:4",["^1Q",[null,null]]]],"^M","^45","^6","datascript/query.cljc","^:",10,"^?V",["^ ","^:A",true,"^?W",2,"^:E",2,"^:2",[["~$a","~$b"]],"^9[",["^1Q",[["~$a","~$b"],["~$a","~$b","~$&","^BO"]]],"^:4",["^1Q",[null,null]]],"^:2",[["~$a","~$b"]],"^:3",null,"^?W",2,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^E;",["^1Q",[["~$a","~$b"],["^1Q",["^=;","^A0","~$a","~$b"]]]],["^1Q",[["~$a","~$b","~$&","^BO"],["^1Q",["^>Y","^=;","^A0","~$a","~$b","^BO"]]]]]]],"^:A",true,"^@3",[["^ ","^?W",2,"^:A",false,"^?S",["^L",[null,"^:C","^:D"]]],["^ ","^?W",2,"^:A",true,"^?S","^:D"]],"^7",56,"^9",56,"^:E",2,"^:F",true,"^9[",["^1Q",[["~$a","~$b"],["~$a","~$b","~$&","^BO"]]]],"~$map->Relation",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^:",20,"^8",12,"^=@",true,"^=A","^E4","^7",40,"^9",40,"^9[",["^1Q",["^:0",["^1Q",[["~$G__23280"]]]]],"^=E","Factory function for datascript.query/Relation, taking a map of keywords to field values."],"^M","^42","^6","datascript/query.cljc","^:",20,"^:2",["^1Q",[["^E="]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^=@",true,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^=F","^C6",["^<H","^;D"]]]],"^:A",false,"^=A","^E4","^7",40,"^:B","^4O","^9",40,"^:E",1,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^E="]]]]],"^=E","Factory function for datascript.query/Relation, taking a map of keywords to field values."],"^@2",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",804,"^8",7,"^9",804,"^:",22,"^9[",["^1Q",["^:0",["^1Q",[["^?U","^;7","^@1","^?Z"]]]]]],"^M","^4E","^6","datascript/query.cljc","^:",22,"^:2",["^1Q",[["^?U","^;7","^@1","^?Z"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^@2",["^?U","^;7","^@1","^?Z"],["^1Q",["^CW",["^1Q",["~$comp",["^1Q",["^<@",["^1Q",["^:Q",["^B8"],["^1Q",["^CW",["^1Q",["^<@",["^1Q",["^:Q",["^B9"],["^1Q",["^:I",["^@R",["^1Q",["~$aclone","^B8"]]],["^1Q",["^C:",["~$i","^@1"],["^1Q",["^<U",["~$idx",["^1Q",["^=Q","^?Z","~$i"]]],["^1Q",["^=P","^@R","~$i",["^1Q",["^@O","^B9","^E@"]]]]]]]],"^@R"]]]]]],["^1Q",["^:Z","^;7"]]]]]]]],"^AP"]],"^?U"]]]]],"^:A",false,"^7",804,"^:B","~$cljs.core/Eduction","^9",804,"^:E",4,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^?U","^;7","^@1","^?Z"]]]]]],"^AX",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",334,"^8",7,"^9",334,"^:",17,"^9[",["^1Q",["^:0",["^1Q",[["~$key-fn","^;D"]]]]]],"^M","^59","^6","datascript/query.cljc","^:",17,"^:2",["^1Q",[["^EB","^;D"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^AX",["^EB","^;D"],["^1Q",["~$-group-by","^EB",["^1Q",["^:0",["^1Q",[]]]],"^;D"]]]]],"^:A",false,"^7",334,"^:B","^:C","^9",334,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^EB","^;D"]]]]]],"^BK",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",681,"^8",7,"^9",681,"^:",18,"^9[",["^1Q",["^:0",["^1Q",[["^>R","^<T","^>S"]]]]]],"^M","^5:","^6","datascript/query.cljc","^:",18,"^:2",["^1Q",[["^>R","^<T","^>S"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^BK",["^>R","^<T","^>S"],["^1Q",["^>X",["^1Q",["~$set/subset?","^<T","^>R"]],["^1Q",["^:I",["^E8",["^1Q",["^>V",["^1Q",["^V","^<T"]],"^>R"]]],["^1Q",["^H","Insufficient bindings: ","^E8"," not bound in ","^>S",["^ ","^>F","^>G","^1P","^>S","^>Z","^E8"]]]]]]]]]],"^:A",false,"^7",681,"^:B","^<Y","^9",681,"^:E",3,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^>R","^<T","^>S"]]]]]],"^B?",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",380,"^8",7,"^9",380,"^:",24,"^9[",["^1Q",["^:0",["^1Q",[["^15","^<3"]]]]]],"^M","^4<","^6","datascript/query.cljc","^:",24,"^:2",["^1Q",[["^15","^<3"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^B?",["^15","^<3"],["^1Q",["^:I",["~$search-pattern",["^1Q",["^=;",["^1Q",["^:<",["~$p1__23383#"],["^1Q",["^;B",["^1Q",["^<6",["^1Q",["~$=","^EF",["^1Q",["^:0","~$_"]]]],["^1Q",["^:L","^EF"]]]],null,"^EF"]]]],"^<3"]],"~$datoms",["^1Q",["~$db/-search","^15","^EE"]],"~$attr->prop",["^1Q",["^=0",["^1Q",["^<@","^A0","^<3",["e","a","v","tx"]]],["^1Q",["^:K",["^1Q",["^:Q",[["~$s","~$_"]],["^1Q",["^:L","~$s"]]]]]],["^1Q",["^::",["^ "]]]]]],["^1Q",["^;8","^EI","^EG"]]]]]]],"^:A",false,"^7",380,"^:B","^4O","^9",380,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^15","^<3"]]]]]],"^@M",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",914,"^8",4,"^9",914,"^:",17,"^CB","^2?","^=E",null,"^9[",["^1Q",["^:0",["^1Q",[["^=5","^=X","^;D"]]]]]],"^CB","^2?","^M","^4=","^6","datascript/query.cljc","^:",17,"^:2",["^1Q",[["^=5","^=X","^;D"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^A7","^C<",["^1Q",["^@M",["^=5","^=X","^;D"]]]]]],"^:A",false,"^7",913,"^:B","^:D","^9",914,"^:E",3,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^=5","^=X","^;D"]]]]],"^=E",null],"^EC",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",325,"^8",7,"^9",325,"^:",16,"^9[",["^1Q",["^:0",["^1Q",[["~$f","~$init","^@X"]]]]]],"^M","^4Q","^6","datascript/query.cljc","^:",16,"^:2",["^1Q",[["~$f","^EJ","^@X"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^EC",["~$f","^EJ","^@X"],["^1Q",["^B7",["^1Q",["^:T",["^1Q",["^:Q",["~$ret","~$x"],["^1Q",["^:I",["~$k",["^1Q",["~$f","~$x"]]],["^1Q",["~$assoc!","^EK","~$k",["^1Q",["^;W",["^1Q",["^;X","^EK","~$k","^EJ"]],"~$x"]]]]]]]],["^1Q",["^B<",["^ "]]],"^@X"]]]]]]],"^:A",false,"^7",325,"^:B","^:C","^9",325,"^:E",3,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["~$f","^EJ","^@X"]]]]]],"^>P",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",419,"^8",7,"^9",419,"^:",20,"^9[",["^1Q",["^:0",["^1Q",[["^<J","^;F"]]]]]],"^M","^4D","^6","datascript/query.cljc","^:",20,"^:2",["^1Q",[["^<J","^;F"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^>P",["^<J","^;F"],["^1Q",["^:[",["^<J","^<J","^;F","^;F","^?U",[]],["^1Q",["^;9",["^;7",["^1Q",["^;;","^<J"]]],["^1Q",["^;B",["^1Q",["^<W",["^1Q",["^?H",["^1Q",["^:?","^;F"]],["^1Q",["^:?","^;7"]]]]]],["^1Q",["^;G",["^1Q",["^;H","^<J"]],["^1Q",["^BS","^;7","^;F"]],"^?U"]],["^1Q",["^;G",["^1Q",["^;H","^<J"]],"^;F",["^1Q",["^;W","^?U","^;7"]]]]]],["^1Q",["^;W","^?U","^;F"]]]]]]]]],"^:A",false,"^7",419,"^:B","^:C","^9",419,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^<J","^;F"]]]]]],"^<<",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",888,"^8",8,"^9",888,"^:",15,"^<G",true,"^9[",["^1Q",["^:0",["^1Q",[["^@Q","^@X"]]]]]],"^<G",true,"^M","^4H","^6","datascript/query.cljc","^:",15,"^:2",["^1Q",[["^@Q","^@X"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^<I","^<<",["^@Q","^@X"],["^1Q",["^=0",["^1Q",["^<@",["^1Q",["^:<",["~$p1__23648#","~$p2__23649#"],["^1Q",["^=6",["^1Q",["^@Q","^EM"]],"^EN"]]]],"^@X",["^1Q",["^:O"]]]],["^1Q",["^<Q","^;C"]]]]]]],"^:A",false,"^7",888,"^:B","^3V","^9",888,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^@Q","^@X"]]]]]],"^=L",["^ ","^9Z",null,"^5",["^ ","^6","datascript/query.cljc","^7",264,"^8",7,"^9",264,"^:",16,"^9[",["^1Q",["^:0",["^1Q",[["^<H","~$attr"]]]]]],"^M","^4@","^6","datascript/query.cljc","^:",16,"^:2",["^1Q",[["^<H","^EO"]]],"^:3",null,"^:4",["^1Q",[null,null]],"^8",1,"^:5",["^ ","^:6","^:7","^:8",["^1Q",["^:9","^=L",["^<H","^EO"],["^1Q",["^:I",["^E@",["^1Q",["^<H","^EO"]]],["^1Q",["^;B",["^1Q",["^?>","^C3","^EO"]],["^1Q",["^;B",["^1Q",["~$int?","^E@"]],["^1Q",["^:I",["^E@",["^1Q",["~$int","^E@"]]],["^1Q",["^:Q","~$contained-int-getter-fn",["^<4"],["^1Q",["^:I",["~$eid",["^1Q",["^@O","^<4","^E@"]]],["^1Q",["^?2",["^1Q",["^DR","^ES"]],"^ES",["^1Q",["^?:","^ES"]],["^1Q",["~$db/entid","^?D","^ES"]],["^1Q",["~$da/array?","^ES"]],["^1Q",["^ET","^?D","^ES"]],"^?9","^ES"]]]]]]]],["^1Q",["^:Q","~$contained-getter-fn",["^<4"],["^1Q",["^:I",["^ES",["^1Q",["^@O","^<4","^E@"]]],["^1Q",["^?2",["^1Q",["^DR","^ES"]],"^ES",["^1Q",["^?:","^ES"]],["^1Q",["^ET","^?D","^ES"]],["^1Q",["^EU","^ES"]],["^1Q",["^ET","^?D","^ES"]],"^?9","^ES"]]]]]]]],["^1Q",["^;B",["^1Q",["^EP","^E@"]],["^1Q",["^:I",["^E@",["^1Q",["^EQ","^E@"]]],["^1Q",["^:Q","~$int-getter",["^<4"],["^1Q",["^@O","^<4","^E@"]]]]]],["^1Q",["^:Q","~$getter",["^<4"],["^1Q",["^@O","^<4","^E@"]]]]]]]]]]]]],"^:A",false,"^7",264,"^:B","^=V","^9",264,"^:E",2,"^:F",true,"^9[",["^1Q",["^:0",["^1Q",[["^<H","^EO"]]]]]]],"^1O",["^ ","^T","^U","^10","^10","^14","^14","^15","^I","^I","^I","^U","^U","^1<","^14","^1=","^1=","^1>","^1="],"~:cljs.analyzer/constants",["^ ","^1?",["^L",["^;5","^BE","^:Z","^@D","^BB","^?4","^?9","^;D","~:bindings","^=2","^?5","~:query/binding","~$*","~:value","^;3","^@9","^?@","^22","~$_","^?7","^=C","^@G","^@?","^<6","^:@","~:binding","^AH","^>H","^;@","~$$","^@J","^;6","^??","^=D","^AG","^:?","^>F","^<J","^;4","^1P","^@N","^AF","^>G","^;2","^;S","^<5","^<H","^>Z","^=Z","^=9"]],"~:order",["^:@","^?5","^?7","^<J","^=C","^=D","^:?","^:Z","^<H","^;D","~$_","~$*","^?9","^>F","^>G","^=2","^?4","^F0","^F1","^E[","^EZ","^22","^AG","^AH","^AF","~$$","^1P","^>H","^<5","^;@","^??","^?@","^<6","^;S","^;2","^;3","^;4","^;5","^;6","^>Z","^BB","^BE","^=Z","^=9","^@9","^@?","^@D","^@G","^@J","^@N"]],"^1V",["^ ","^1@",["^L",[]]],"^1W",["^ "],"^1X",["^11","^10","^1=","^W","^19","^13","^Y","^I","^U","^17","^1;","^14","^["]],"^Q","^N","~:ns-specs",["^ "],"~:ns-spec-vars",["^L",[]],"~:compiler-options",["^7M",[["^F5","~:static-fns"],true,["~:js-options","~:use-babel"],null,["^F5","~:shadow-tweaks"],null,["^F5","~:source-map-inline"],null,["^F5","~:elide-asserts"],false,["^F5","~:optimize-constants"],null,["^F5","^21"],null,["^F5","~:external-config"],null,["^F5","~:tooling-config"],null,["^F5","~:emit-constants"],null,["^F5","~:load-tests"],null,["^F5","~:form-size-threshold"],null,["^F5","~:global-goog-object&array"],null,["^F5","~:data-readers"],null,["^F5","~:infer-externs"],"~:auto",["^F5","^23"],null,["^F7","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^F5","~:fn-invoke-direct"],null,["^F5","~:source-map"],"/dev/null"]]]